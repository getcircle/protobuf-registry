package main.user_service;


message UserService {

    // MARK: - Containers

    message Containers {

        message User {
            optional string id = 1;
            optional string primary_email = 2;
            optional bool is_admin = 3;
            optional bool is_active = 4;
        }

    }

    // MARK: - Actions

    message CreateUser {
        message Request {
            optional string password = 1;
            optional string email = 2;
        }

        message Response {
            optional Containers.User user = 1;
        }
    }

    message GetUser {
        message Request {
            oneof lookup_key {
                string email = 1;
            }
        }

        message Response {
            optional Containers.User user = 1;
        }
    }

    message ValidUser {
        message Request {
            optional string user_id = 1;
        }

        message Response {
            optional bool exists = 1;
        }
    }

    message AuthenticateUser {

        message Request {

            enum AuthBackend {
                INTERNAL = 0;
            }

            message Credentials {
                optional string key = 1;
                optional string secret = 2;
            }

            optional AuthBackend backend = 1;
            optional Credentials credentials = 2;

        }

        message Response {
            optional Containers.User user = 1;
            optional bool authenticated = 2 [default = false];
            optional string token = 3;
        }

    }

}
