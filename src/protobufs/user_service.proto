package main.user_service;

message UserService {

    enum Provider {
        INTERNAL = 0;
        LINKEDIN = 1;
        GOOGLE = 2;
    }

    // MARK: - Containers

    message Containers {

        message User {
            optional string id = 1;
            optional string primary_email = 2;
            optional bool is_admin = 3;
            optional bool is_active = 4;
            optional string phone_number = 5;
            optional bool phone_number_verified = 6;
            optional string password = 7;
        }

        message OAuth2Details {
            optional string code = 1;
            optional string state = 2;
        }

        message OAuthSDKDetails {
            optional string code = 1;
            optional string id_token = 2;
        }

        message Identity {
            optional string id = 1;
            optional Provider provider = 2;
            optional string full_name = 3;
            optional string email = 4;
            optional string access_token = 5;
            optional string expires_at = 6;
            optional string provider_uid = 7;
            optional string user_id = 8;
            optional string refresh_token = 9;
        }

        message Device {
            optional string id = 1;
            optional string notification_token = 2;
            optional string platform = 3;
            optional string os_version = 4;
            optional string app_version = 5;
            optional string device_uuid = 6;
            optional string user_id = 7;
            optional string language_preference = 8;
        }

        message AccessRequest {
            optional string id = 1;
            optional string user_id = 2;
        }

    }

    // MARK: - Actions

    message CreateUser {
        message Request {
            optional string password = 1;
            optional string email = 2;
        }

        message Response {
            optional Containers.User user = 1;
        }
    }

    message BulkCreateUsers {
        message Request {
            repeated Containers.User users = 1;
        }

        message Response {
            repeated Containers.User users = 1;
        }
    }

    message UpdateUser {
        message Request {
            optional Containers.User user = 1;
        }

        message Response {
            optional Containers.User user = 1;
        }
    }

    message GetUser {
        message Request {
            oneof lookup_key {
                string email = 1;
            }
        }

        message Response {
            optional Containers.User user = 1;
        }
    }

    message ValidUser {
        message Request {
            optional string user_id = 1;
        }

        message Response {
            optional bool exists = 1;
        }
    }

    message AuthenticateUser {

        message Request {

            enum AuthBackend {
                INTERNAL = 0;
                GOOGLE = 1;
            }

            message Credentials {
                optional string key = 1;
                optional string secret = 2;
            }

            optional AuthBackend backend = 1;
            optional Credentials credentials = 2;

        }

        message Response {
            optional Containers.User user = 1;
            optional bool authenticated = 2;
            optional string token = 3;
            optional bool new_user = 4;
        }

    }

    message SendVerificationCode {

        message Request {
            optional string user_id = 1;
        }

        message Response {
            optional string message_id = 1;
        }

    }

    message VerifyVerificationCode {

        message Request {
            optional string user_id = 1;
            optional string code = 2;
        }

        message Response {
            optional bool verified = 1;
        }

    }

    message GetAuthorizationInstructions {

        message Request {
            optional Provider provider = 1;
        }

        message Response {
            optional string authorization_url = 2;
        }

    }

    message CompleteAuthorization {

        message Request {
            optional Provider provider = 1;
            optional Containers.OAuth2Details oauth2_details = 2;
            optional Containers.OAuthSDKDetails oauth_sdk_details = 3;
        }

        message Response {
            optional Containers.User user = 1;
            optional Containers.Identity identity = 2;
            optional bool new_user = 3;
        }

    }

    message GetIdentities {

        message Request {
            optional string user_id = 1;
        }

        message Response {
            repeated Containers.Identity identities = 1;
        }

    }

    message RecordDevice {

        message Request {
            optional Containers.Device device = 1;
        }

        message Response {
            optional Containers.Device device = 1;
        }

    }

    message RequestAccess {

        message Request {
            optional string user_id = 1;
        }

        message Response {
            optional Containers.AccessRequest access_request = 1;
        }

    }

}
