package main.user_service.actions;

import "protobufs/identity_service/containers/identity.proto";
import "protobufs/user_service/containers/user.proto";

message UserService {

    message CreateUser {
        message Request {
            optional string password = 1;
            optional main.identity_service.containers.identity.Identity identity = 2;
        }

        message Response {
            optional main.user_service.containers.user.User user = 1;
            repeated main.identity_service.containers.identity.Identity identities = 2;
        }
    }

    message ValidUser {
        message Request {
            optional string user_id = 1;
        }

        message Response {
            optional bool exists = 1;
        }
    }

    message AuthenticateUser {

        message Request {

            enum AuthBackend {
                INTERNAL = 0;
            }

            message Credentials {
                optional string key = 1;
                optional string secret = 2;
            }

            optional AuthBackend backend = 1;
            optional Credentials credentials = 2;

        }

        message Response {
            optional main.user_service.containers.user.User user = 1;
            optional bool authenticated = 2 [default = false];
            optional string token = 3;
        }

    }

}
