// Generated by the protocol buffer compiler.  DO NOT EDIT!

import Foundation
public extension Services.Registry{ public struct Responses { }}

public func == (lhs: Services.Registry.Responses.User, rhs: Services.Registry.Responses.User) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  return (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
}

public func == (lhs: Services.Registry.Responses.Organization, rhs: Services.Registry.Responses.Organization) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  return (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
}

public func == (lhs: Services.Registry.Responses.Profile, rhs: Services.Registry.Responses.Profile) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  return (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
}

public func == (lhs: Services.Registry.Responses.Search, rhs: Services.Registry.Responses.Search) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  return (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
}

public func == (lhs: Services.Registry.Responses.Media, rhs: Services.Registry.Responses.Media) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  return (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
}

public func == (lhs: Services.Registry.Responses.Sync, rhs: Services.Registry.Responses.Sync) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  return (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
}

public func == (lhs: Services.Registry.Responses.Group, rhs: Services.Registry.Responses.Group) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  return (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
}

public func == (lhs: Services.Registry.Responses.Glossary, rhs: Services.Registry.Responses.Glossary) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  return (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
}

public func == (lhs: Services.Registry.Responses.Notification, rhs: Services.Registry.Responses.Notification) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  return (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
}

public var ServicesRegistryResponsesUsercreateUser:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesUsercreateUserStatic
   }
}
public var ServicesRegistryResponsesUservalidUser:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesUservalidUserStatic
   }
}
public var ServicesRegistryResponsesUserauthenticateUser:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesUserauthenticateUserStatic
   }
}
public var ServicesRegistryResponsesUsergetUser:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesUsergetUserStatic
   }
}
public var ServicesRegistryResponsesUsersendVerificationCode:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesUsersendVerificationCodeStatic
   }
}
public var ServicesRegistryResponsesUserverifyVerificationCode:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesUserverifyVerificationCodeStatic
   }
}
public var ServicesRegistryResponsesUserupdateUser:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesUserupdateUserStatic
   }
}
public var ServicesRegistryResponsesUsergetAuthorizationInstructions:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesUsergetAuthorizationInstructionsStatic
   }
}
public var ServicesRegistryResponsesUsercompleteAuthorization:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesUsercompleteAuthorizationStatic
   }
}
public var ServicesRegistryResponsesUsergetIdentities:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesUsergetIdentitiesStatic
   }
}
public var ServicesRegistryResponsesUserbulkCreateUsers:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesUserbulkCreateUsersStatic
   }
}
public var ServicesRegistryResponsesUserrecordDevice:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesUserrecordDeviceStatic
   }
}
public var ServicesRegistryResponsesUserrequestAccess:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesUserrequestAccessStatic
   }
}
public var ServicesRegistryResponsesUserdeleteIdentity:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesUserdeleteIdentityStatic
   }
}
public var ServicesRegistryResponsesUserlogout:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesUserlogoutStatic
   }
}
public var ServicesRegistryResponsesUsergetAuthenticationInstructions:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesUsergetAuthenticationInstructionsStatic
   }
}
public var ServicesRegistryResponsesUsergetActiveDevices:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesUsergetActiveDevicesStatic
   }
}
public var ServicesRegistryResponsesOrganizationcreateOrganization:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesOrganizationcreateOrganizationStatic
   }
}
public var ServicesRegistryResponsesOrganizationgetOrganization:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesOrganizationgetOrganizationStatic
   }
}
public var ServicesRegistryResponsesOrganizationcreateTeam:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesOrganizationcreateTeamStatic
   }
}
public var ServicesRegistryResponsesOrganizationcreateAddress:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesOrganizationcreateAddressStatic
   }
}
public var ServicesRegistryResponsesOrganizationdeleteAddress:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesOrganizationdeleteAddressStatic
   }
}
public var ServicesRegistryResponsesOrganizationgetAddress:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesOrganizationgetAddressStatic
   }
}
public var ServicesRegistryResponsesOrganizationgetTeam:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesOrganizationgetTeamStatic
   }
}
public var ServicesRegistryResponsesOrganizationgetTeams:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesOrganizationgetTeamsStatic
   }
}
public var ServicesRegistryResponsesOrganizationgetAddresses:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesOrganizationgetAddressesStatic
   }
}
public var ServicesRegistryResponsesOrganizationgetTeamDescendants:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesOrganizationgetTeamDescendantsStatic
   }
}
public var ServicesRegistryResponsesOrganizationgetTopLevelTeam:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesOrganizationgetTopLevelTeamStatic
   }
}
public var ServicesRegistryResponsesOrganizationcreateLocation:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesOrganizationcreateLocationStatic
   }
}
public var ServicesRegistryResponsesOrganizationupdateLocation:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesOrganizationupdateLocationStatic
   }
}
public var ServicesRegistryResponsesOrganizationgetLocations:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesOrganizationgetLocationsStatic
   }
}
public var ServicesRegistryResponsesOrganizationgetLocation:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesOrganizationgetLocationStatic
   }
}
public var ServicesRegistryResponsesOrganizationcreateToken:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesOrganizationcreateTokenStatic
   }
}
public var ServicesRegistryResponsesOrganizationgetTokens:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesOrganizationgetTokensStatic
   }
}
public var ServicesRegistryResponsesOrganizationenableIntegration:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesOrganizationenableIntegrationStatic
   }
}
public var ServicesRegistryResponsesOrganizationgetIntegration:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesOrganizationgetIntegrationStatic
   }
}
public var ServicesRegistryResponsesOrganizationdisableIntegration:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesOrganizationdisableIntegrationStatic
   }
}
public var ServicesRegistryResponsesOrganizationupdateTeam:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesOrganizationupdateTeamStatic
   }
}
public var ServicesRegistryResponsesProfilecreateProfile:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesProfilecreateProfileStatic
   }
}
public var ServicesRegistryResponsesProfilegetExtendedProfile:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesProfilegetExtendedProfileStatic
   }
}
public var ServicesRegistryResponsesProfilegetProfile:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesProfilegetProfileStatic
   }
}
public var ServicesRegistryResponsesProfilecreateTags:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesProfilecreateTagsStatic
   }
}
public var ServicesRegistryResponsesProfilegetTags:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesProfilegetTagsStatic
   }
}
public var ServicesRegistryResponsesProfileaddTags:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesProfileaddTagsStatic
   }
}
public var ServicesRegistryResponsesProfileupdateProfile:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesProfileupdateProfileStatic
   }
}
public var ServicesRegistryResponsesProfilegetProfiles:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesProfilegetProfilesStatic
   }
}
public var ServicesRegistryResponsesProfilegetDirectReports:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesProfilegetDirectReportsStatic
   }
}
public var ServicesRegistryResponsesProfilegetPeers:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesProfilegetPeersStatic
   }
}
public var ServicesRegistryResponsesProfilegetProfileStats:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesProfilegetProfileStatsStatic
   }
}
public var ServicesRegistryResponsesProfilegetUpcomingAnniversaries:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesProfilegetUpcomingAnniversariesStatic
   }
}
public var ServicesRegistryResponsesProfilegetUpcomingBirthdays:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesProfilegetUpcomingBirthdaysStatic
   }
}
public var ServicesRegistryResponsesProfilegetRecentHires:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesProfilegetRecentHiresStatic
   }
}
public var ServicesRegistryResponsesProfilegetActiveTags:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesProfilegetActiveTagsStatic
   }
}
public var ServicesRegistryResponsesProfilebulkCreateProfiles:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesProfilebulkCreateProfilesStatic
   }
}
public var ServicesRegistryResponsesProfilebulkUpdateProfiles:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesProfilebulkUpdateProfilesStatic
   }
}
public var ServicesRegistryResponsesProfilegetAttributesForProfiles:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesProfilegetAttributesForProfilesStatic
   }
}
public var ServicesRegistryResponsesProfileremoveTags:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesProfileremoveTagsStatic
   }
}
public var ServicesRegistryResponsesSearchsearch:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesSearchsearchStatic
   }
}
public var ServicesRegistryResponsesMediastartImageUpload:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesMediastartImageUploadStatic
   }
}
public var ServicesRegistryResponsesMediacompleteImageUpload:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesMediacompleteImageUploadStatic
   }
}
public var ServicesRegistryResponsesSyncstartSync:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesSyncstartSyncStatic
   }
}
public var ServicesRegistryResponsesSyncsyncPayloads:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesSyncsyncPayloadsStatic
   }
}
public var ServicesRegistryResponsesSynccompleteSync:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesSynccompleteSyncStatic
   }
}
public var ServicesRegistryResponsesGroupgetGroups:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesGroupgetGroupsStatic
   }
}
public var ServicesRegistryResponsesGroupjoinGroup:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesGroupjoinGroupStatic
   }
}
public var ServicesRegistryResponsesGrouprespondToMembershipRequest:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesGrouprespondToMembershipRequestStatic
   }
}
public var ServicesRegistryResponsesGroupleaveGroup:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesGroupleaveGroupStatic
   }
}
public var ServicesRegistryResponsesGroupgetMembers:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesGroupgetMembersStatic
   }
}
public var ServicesRegistryResponsesGroupgetGroup:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesGroupgetGroupStatic
   }
}
public var ServicesRegistryResponsesGroupaddToGroup:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesGroupaddToGroupStatic
   }
}
public var ServicesRegistryResponsesGroupgetMembershipRequests:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesGroupgetMembershipRequestsStatic
   }
}
public var ServicesRegistryResponsesGlossarycreateTerm:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesGlossarycreateTermStatic
   }
}
public var ServicesRegistryResponsesGlossarygetTerm:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesGlossarygetTermStatic
   }
}
public var ServicesRegistryResponsesGlossarygetTerms:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesGlossarygetTermsStatic
   }
}
public var ServicesRegistryResponsesGlossaryupdateTerm:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesGlossaryupdateTermStatic
   }
}
public var ServicesRegistryResponsesGlossarydeleteTerm:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesGlossarydeleteTermStatic
   }
}
public var ServicesRegistryResponsesNotificationregisterDevice:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesNotificationregisterDeviceStatic
   }
}
public var ServicesRegistryResponsesNotificationgetPreferences:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesNotificationgetPreferencesStatic
   }
}
public var ServicesRegistryResponsesNotificationupdatePreference:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesNotificationupdatePreferenceStatic
   }
}
public var ServicesRegistryResponsesNotificationsendNotification:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesNotificationsendNotificationStatic
   }
}
public extension Services.Registry.Responses {
  public struct ResponsesRoot {
    public static var sharedInstance : ResponsesRoot {
     struct Static {
         static let instance : ResponsesRoot = ResponsesRoot()
     }
     return Static.instance
    }
    var ServicesRegistryResponsesUsercreateUserStatic:ConcreateExtensionField
    var ServicesRegistryResponsesUservalidUserStatic:ConcreateExtensionField
    var ServicesRegistryResponsesUserauthenticateUserStatic:ConcreateExtensionField
    var ServicesRegistryResponsesUsergetUserStatic:ConcreateExtensionField
    var ServicesRegistryResponsesUsersendVerificationCodeStatic:ConcreateExtensionField
    var ServicesRegistryResponsesUserverifyVerificationCodeStatic:ConcreateExtensionField
    var ServicesRegistryResponsesUserupdateUserStatic:ConcreateExtensionField
    var ServicesRegistryResponsesUsergetAuthorizationInstructionsStatic:ConcreateExtensionField
    var ServicesRegistryResponsesUsercompleteAuthorizationStatic:ConcreateExtensionField
    var ServicesRegistryResponsesUsergetIdentitiesStatic:ConcreateExtensionField
    var ServicesRegistryResponsesUserbulkCreateUsersStatic:ConcreateExtensionField
    var ServicesRegistryResponsesUserrecordDeviceStatic:ConcreateExtensionField
    var ServicesRegistryResponsesUserrequestAccessStatic:ConcreateExtensionField
    var ServicesRegistryResponsesUserdeleteIdentityStatic:ConcreateExtensionField
    var ServicesRegistryResponsesUserlogoutStatic:ConcreateExtensionField
    var ServicesRegistryResponsesUsergetAuthenticationInstructionsStatic:ConcreateExtensionField
    var ServicesRegistryResponsesUsergetActiveDevicesStatic:ConcreateExtensionField
    var ServicesRegistryResponsesOrganizationcreateOrganizationStatic:ConcreateExtensionField
    var ServicesRegistryResponsesOrganizationgetOrganizationStatic:ConcreateExtensionField
    var ServicesRegistryResponsesOrganizationcreateTeamStatic:ConcreateExtensionField
    var ServicesRegistryResponsesOrganizationcreateAddressStatic:ConcreateExtensionField
    var ServicesRegistryResponsesOrganizationdeleteAddressStatic:ConcreateExtensionField
    var ServicesRegistryResponsesOrganizationgetAddressStatic:ConcreateExtensionField
    var ServicesRegistryResponsesOrganizationgetTeamStatic:ConcreateExtensionField
    var ServicesRegistryResponsesOrganizationgetTeamsStatic:ConcreateExtensionField
    var ServicesRegistryResponsesOrganizationgetAddressesStatic:ConcreateExtensionField
    var ServicesRegistryResponsesOrganizationgetTeamDescendantsStatic:ConcreateExtensionField
    var ServicesRegistryResponsesOrganizationgetTopLevelTeamStatic:ConcreateExtensionField
    var ServicesRegistryResponsesOrganizationcreateLocationStatic:ConcreateExtensionField
    var ServicesRegistryResponsesOrganizationupdateLocationStatic:ConcreateExtensionField
    var ServicesRegistryResponsesOrganizationgetLocationsStatic:ConcreateExtensionField
    var ServicesRegistryResponsesOrganizationgetLocationStatic:ConcreateExtensionField
    var ServicesRegistryResponsesOrganizationcreateTokenStatic:ConcreateExtensionField
    var ServicesRegistryResponsesOrganizationgetTokensStatic:ConcreateExtensionField
    var ServicesRegistryResponsesOrganizationenableIntegrationStatic:ConcreateExtensionField
    var ServicesRegistryResponsesOrganizationgetIntegrationStatic:ConcreateExtensionField
    var ServicesRegistryResponsesOrganizationdisableIntegrationStatic:ConcreateExtensionField
    var ServicesRegistryResponsesOrganizationupdateTeamStatic:ConcreateExtensionField
    var ServicesRegistryResponsesProfilecreateProfileStatic:ConcreateExtensionField
    var ServicesRegistryResponsesProfilegetExtendedProfileStatic:ConcreateExtensionField
    var ServicesRegistryResponsesProfilegetProfileStatic:ConcreateExtensionField
    var ServicesRegistryResponsesProfilecreateTagsStatic:ConcreateExtensionField
    var ServicesRegistryResponsesProfilegetTagsStatic:ConcreateExtensionField
    var ServicesRegistryResponsesProfileaddTagsStatic:ConcreateExtensionField
    var ServicesRegistryResponsesProfileupdateProfileStatic:ConcreateExtensionField
    var ServicesRegistryResponsesProfilegetProfilesStatic:ConcreateExtensionField
    var ServicesRegistryResponsesProfilegetDirectReportsStatic:ConcreateExtensionField
    var ServicesRegistryResponsesProfilegetPeersStatic:ConcreateExtensionField
    var ServicesRegistryResponsesProfilegetProfileStatsStatic:ConcreateExtensionField
    var ServicesRegistryResponsesProfilegetUpcomingAnniversariesStatic:ConcreateExtensionField
    var ServicesRegistryResponsesProfilegetUpcomingBirthdaysStatic:ConcreateExtensionField
    var ServicesRegistryResponsesProfilegetRecentHiresStatic:ConcreateExtensionField
    var ServicesRegistryResponsesProfilegetActiveTagsStatic:ConcreateExtensionField
    var ServicesRegistryResponsesProfilebulkCreateProfilesStatic:ConcreateExtensionField
    var ServicesRegistryResponsesProfilebulkUpdateProfilesStatic:ConcreateExtensionField
    var ServicesRegistryResponsesProfilegetAttributesForProfilesStatic:ConcreateExtensionField
    var ServicesRegistryResponsesProfileremoveTagsStatic:ConcreateExtensionField
    var ServicesRegistryResponsesSearchsearchStatic:ConcreateExtensionField
    var ServicesRegistryResponsesMediastartImageUploadStatic:ConcreateExtensionField
    var ServicesRegistryResponsesMediacompleteImageUploadStatic:ConcreateExtensionField
    var ServicesRegistryResponsesSyncstartSyncStatic:ConcreateExtensionField
    var ServicesRegistryResponsesSyncsyncPayloadsStatic:ConcreateExtensionField
    var ServicesRegistryResponsesSynccompleteSyncStatic:ConcreateExtensionField
    var ServicesRegistryResponsesGroupgetGroupsStatic:ConcreateExtensionField
    var ServicesRegistryResponsesGroupjoinGroupStatic:ConcreateExtensionField
    var ServicesRegistryResponsesGrouprespondToMembershipRequestStatic:ConcreateExtensionField
    var ServicesRegistryResponsesGroupleaveGroupStatic:ConcreateExtensionField
    var ServicesRegistryResponsesGroupgetMembersStatic:ConcreateExtensionField
    var ServicesRegistryResponsesGroupgetGroupStatic:ConcreateExtensionField
    var ServicesRegistryResponsesGroupaddToGroupStatic:ConcreateExtensionField
    var ServicesRegistryResponsesGroupgetMembershipRequestsStatic:ConcreateExtensionField
    var ServicesRegistryResponsesGlossarycreateTermStatic:ConcreateExtensionField
    var ServicesRegistryResponsesGlossarygetTermStatic:ConcreateExtensionField
    var ServicesRegistryResponsesGlossarygetTermsStatic:ConcreateExtensionField
    var ServicesRegistryResponsesGlossaryupdateTermStatic:ConcreateExtensionField
    var ServicesRegistryResponsesGlossarydeleteTermStatic:ConcreateExtensionField
    var ServicesRegistryResponsesNotificationregisterDeviceStatic:ConcreateExtensionField
    var ServicesRegistryResponsesNotificationgetPreferencesStatic:ConcreateExtensionField
    var ServicesRegistryResponsesNotificationupdatePreferenceStatic:ConcreateExtensionField
    var ServicesRegistryResponsesNotificationsendNotificationStatic:ConcreateExtensionField
    public var extensionRegistry:ExtensionRegistry

    init() {
      ServicesRegistryResponsesUsercreateUserStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 100, defaultValue:Services.User.Actions.CreateUser.ResponseV1(), messageOrGroupClass:Services.User.Actions.CreateUser.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesUservalidUserStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 101, defaultValue:Services.User.Actions.ValidUser.ResponseV1(), messageOrGroupClass:Services.User.Actions.ValidUser.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesUserauthenticateUserStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 102, defaultValue:Services.User.Actions.AuthenticateUser.ResponseV1(), messageOrGroupClass:Services.User.Actions.AuthenticateUser.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesUsergetUserStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 103, defaultValue:Services.User.Actions.GetUser.ResponseV1(), messageOrGroupClass:Services.User.Actions.GetUser.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesUsersendVerificationCodeStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 104, defaultValue:Services.User.Actions.SendVerificationCode.ResponseV1(), messageOrGroupClass:Services.User.Actions.SendVerificationCode.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesUserverifyVerificationCodeStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 105, defaultValue:Services.User.Actions.VerifyVerificationCode.ResponseV1(), messageOrGroupClass:Services.User.Actions.VerifyVerificationCode.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesUserupdateUserStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 106, defaultValue:Services.User.Actions.UpdateUser.ResponseV1(), messageOrGroupClass:Services.User.Actions.UpdateUser.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesUsergetAuthorizationInstructionsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 107, defaultValue:Services.User.Actions.GetAuthorizationInstructions.ResponseV1(), messageOrGroupClass:Services.User.Actions.GetAuthorizationInstructions.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesUsercompleteAuthorizationStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 108, defaultValue:Services.User.Actions.CompleteAuthorization.ResponseV1(), messageOrGroupClass:Services.User.Actions.CompleteAuthorization.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesUsergetIdentitiesStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 109, defaultValue:Services.User.Actions.GetIdentities.ResponseV1(), messageOrGroupClass:Services.User.Actions.GetIdentities.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesUserbulkCreateUsersStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 110, defaultValue:Services.User.Actions.BulkCreateUsers.ResponseV1(), messageOrGroupClass:Services.User.Actions.BulkCreateUsers.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesUserrecordDeviceStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 111, defaultValue:Services.User.Actions.RecordDevice.ResponseV1(), messageOrGroupClass:Services.User.Actions.RecordDevice.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesUserrequestAccessStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 112, defaultValue:Services.User.Actions.RequestAccess.ResponseV1(), messageOrGroupClass:Services.User.Actions.RequestAccess.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesUserdeleteIdentityStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 113, defaultValue:Services.User.Actions.DeleteIdentity.ResponseV1(), messageOrGroupClass:Services.User.Actions.DeleteIdentity.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesUserlogoutStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 114, defaultValue:Services.User.Actions.Logout.ResponseV1(), messageOrGroupClass:Services.User.Actions.Logout.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesUsergetAuthenticationInstructionsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 115, defaultValue:Services.User.Actions.GetAuthenticationInstructions.ResponseV1(), messageOrGroupClass:Services.User.Actions.GetAuthenticationInstructions.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesUsergetActiveDevicesStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 116, defaultValue:Services.User.Actions.GetActiveDevices.ResponseV1(), messageOrGroupClass:Services.User.Actions.GetActiveDevices.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesOrganizationcreateOrganizationStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 200, defaultValue:Services.Organization.Actions.CreateOrganization.ResponseV1(), messageOrGroupClass:Services.Organization.Actions.CreateOrganization.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesOrganizationgetOrganizationStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 201, defaultValue:Services.Organization.Actions.GetOrganization.ResponseV1(), messageOrGroupClass:Services.Organization.Actions.GetOrganization.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesOrganizationcreateTeamStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 202, defaultValue:Services.Organization.Actions.CreateTeam.ResponseV1(), messageOrGroupClass:Services.Organization.Actions.CreateTeam.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesOrganizationcreateAddressStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 203, defaultValue:Services.Organization.Actions.CreateAddress.ResponseV1(), messageOrGroupClass:Services.Organization.Actions.CreateAddress.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesOrganizationdeleteAddressStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 204, defaultValue:Services.Organization.Actions.DeleteAddress.ResponseV1(), messageOrGroupClass:Services.Organization.Actions.DeleteAddress.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesOrganizationgetAddressStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 205, defaultValue:Services.Organization.Actions.GetAddress.ResponseV1(), messageOrGroupClass:Services.Organization.Actions.GetAddress.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesOrganizationgetTeamStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 206, defaultValue:Services.Organization.Actions.GetTeam.ResponseV1(), messageOrGroupClass:Services.Organization.Actions.GetTeam.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesOrganizationgetTeamsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 207, defaultValue:Services.Organization.Actions.GetTeams.ResponseV1(), messageOrGroupClass:Services.Organization.Actions.GetTeams.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesOrganizationgetAddressesStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 208, defaultValue:Services.Organization.Actions.GetAddresses.ResponseV1(), messageOrGroupClass:Services.Organization.Actions.GetAddresses.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesOrganizationgetTeamDescendantsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 209, defaultValue:Services.Organization.Actions.GetTeamDescendants.ResponseV1(), messageOrGroupClass:Services.Organization.Actions.GetTeamDescendants.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesOrganizationgetTopLevelTeamStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 210, defaultValue:Services.Organization.Actions.GetTopLevelTeam.ResponseV1(), messageOrGroupClass:Services.Organization.Actions.GetTopLevelTeam.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesOrganizationcreateLocationStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 211, defaultValue:Services.Organization.Actions.CreateLocation.ResponseV1(), messageOrGroupClass:Services.Organization.Actions.CreateLocation.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesOrganizationupdateLocationStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 212, defaultValue:Services.Organization.Actions.UpdateLocation.ResponseV1(), messageOrGroupClass:Services.Organization.Actions.UpdateLocation.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesOrganizationgetLocationsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 213, defaultValue:Services.Organization.Actions.GetLocations.ResponseV1(), messageOrGroupClass:Services.Organization.Actions.GetLocations.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesOrganizationgetLocationStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 214, defaultValue:Services.Organization.Actions.GetLocation.ResponseV1(), messageOrGroupClass:Services.Organization.Actions.GetLocation.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesOrganizationcreateTokenStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 215, defaultValue:Services.Organization.Actions.CreateToken.ResponseV1(), messageOrGroupClass:Services.Organization.Actions.CreateToken.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesOrganizationgetTokensStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 216, defaultValue:Services.Organization.Actions.GetTokens.ResponseV1(), messageOrGroupClass:Services.Organization.Actions.GetTokens.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesOrganizationenableIntegrationStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 217, defaultValue:Services.Organization.Actions.EnableIntegration.ResponseV1(), messageOrGroupClass:Services.Organization.Actions.EnableIntegration.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesOrganizationgetIntegrationStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 218, defaultValue:Services.Organization.Actions.GetIntegration.ResponseV1(), messageOrGroupClass:Services.Organization.Actions.GetIntegration.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesOrganizationdisableIntegrationStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 219, defaultValue:Services.Organization.Actions.DisableIntegration.ResponseV1(), messageOrGroupClass:Services.Organization.Actions.DisableIntegration.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesOrganizationupdateTeamStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 220, defaultValue:Services.Organization.Actions.UpdateTeam.ResponseV1(), messageOrGroupClass:Services.Organization.Actions.UpdateTeam.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesProfilecreateProfileStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 300, defaultValue:Services.Profile.Actions.CreateProfile.ResponseV1(), messageOrGroupClass:Services.Profile.Actions.CreateProfile.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesProfilegetExtendedProfileStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 301, defaultValue:Services.Profile.Actions.GetExtendedProfile.ResponseV1(), messageOrGroupClass:Services.Profile.Actions.GetExtendedProfile.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesProfilegetProfileStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 302, defaultValue:Services.Profile.Actions.GetProfile.ResponseV1(), messageOrGroupClass:Services.Profile.Actions.GetProfile.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesProfilecreateTagsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 303, defaultValue:Services.Profile.Actions.CreateTags.ResponseV1(), messageOrGroupClass:Services.Profile.Actions.CreateTags.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesProfilegetTagsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 304, defaultValue:Services.Profile.Actions.GetTags.ResponseV1(), messageOrGroupClass:Services.Profile.Actions.GetTags.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesProfileaddTagsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 305, defaultValue:Services.Profile.Actions.AddTags.ResponseV1(), messageOrGroupClass:Services.Profile.Actions.AddTags.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesProfileupdateProfileStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 306, defaultValue:Services.Profile.Actions.UpdateProfile.ResponseV1(), messageOrGroupClass:Services.Profile.Actions.UpdateProfile.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesProfilegetProfilesStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 307, defaultValue:Services.Profile.Actions.GetProfiles.ResponseV1(), messageOrGroupClass:Services.Profile.Actions.GetProfiles.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesProfilegetDirectReportsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 308, defaultValue:Services.Profile.Actions.GetDirectReports.ResponseV1(), messageOrGroupClass:Services.Profile.Actions.GetDirectReports.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesProfilegetPeersStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 309, defaultValue:Services.Profile.Actions.GetPeers.ResponseV1(), messageOrGroupClass:Services.Profile.Actions.GetPeers.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesProfilegetProfileStatsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 310, defaultValue:Services.Profile.Actions.GetProfileStats.ResponseV1(), messageOrGroupClass:Services.Profile.Actions.GetProfileStats.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesProfilegetUpcomingAnniversariesStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 311, defaultValue:Services.Profile.Actions.GetUpcomingAnniversaries.ResponseV1(), messageOrGroupClass:Services.Profile.Actions.GetUpcomingAnniversaries.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesProfilegetUpcomingBirthdaysStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 312, defaultValue:Services.Profile.Actions.GetUpcomingBirthdays.ResponseV1(), messageOrGroupClass:Services.Profile.Actions.GetUpcomingBirthdays.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesProfilegetRecentHiresStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 313, defaultValue:Services.Profile.Actions.GetRecentHires.ResponseV1(), messageOrGroupClass:Services.Profile.Actions.GetRecentHires.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesProfilegetActiveTagsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 314, defaultValue:Services.Profile.Actions.GetActiveTags.ResponseV1(), messageOrGroupClass:Services.Profile.Actions.GetActiveTags.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesProfilebulkCreateProfilesStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 315, defaultValue:Services.Profile.Actions.BulkCreateProfiles.ResponseV1(), messageOrGroupClass:Services.Profile.Actions.BulkCreateProfiles.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesProfilebulkUpdateProfilesStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 316, defaultValue:Services.Profile.Actions.BulkUpdateProfiles.ResponseV1(), messageOrGroupClass:Services.Profile.Actions.BulkUpdateProfiles.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesProfilegetAttributesForProfilesStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 317, defaultValue:Services.Profile.Actions.GetAttributesForProfiles.ResponseV1(), messageOrGroupClass:Services.Profile.Actions.GetAttributesForProfiles.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesProfileremoveTagsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 318, defaultValue:Services.Profile.Actions.RemoveTags.ResponseV1(), messageOrGroupClass:Services.Profile.Actions.RemoveTags.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesSearchsearchStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 400, defaultValue:Services.Search.Actions.Search.ResponseV1(), messageOrGroupClass:Services.Search.Actions.Search.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesMediastartImageUploadStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 600, defaultValue:Services.Media.Actions.StartImageUpload.ResponseV1(), messageOrGroupClass:Services.Media.Actions.StartImageUpload.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesMediacompleteImageUploadStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 601, defaultValue:Services.Media.Actions.CompleteImageUpload.ResponseV1(), messageOrGroupClass:Services.Media.Actions.CompleteImageUpload.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesSyncstartSyncStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 1000, defaultValue:Services.Sync.Actions.StartSync.ResponseV1(), messageOrGroupClass:Services.Sync.Actions.StartSync.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesSyncsyncPayloadsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 1001, defaultValue:Services.Sync.Actions.Sync.ResponseV1(), messageOrGroupClass:Services.Sync.Actions.Sync.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesSynccompleteSyncStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 1002, defaultValue:Services.Sync.Actions.CompleteSync.ResponseV1(), messageOrGroupClass:Services.Sync.Actions.CompleteSync.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesGroupgetGroupsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 1100, defaultValue:Services.Group.Actions.GetGroups.ResponseV1(), messageOrGroupClass:Services.Group.Actions.GetGroups.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesGroupjoinGroupStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 1101, defaultValue:Services.Group.Actions.JoinGroup.ResponseV1(), messageOrGroupClass:Services.Group.Actions.JoinGroup.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesGrouprespondToMembershipRequestStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 1102, defaultValue:Services.Group.Actions.RespondToMembershipRequest.ResponseV1(), messageOrGroupClass:Services.Group.Actions.RespondToMembershipRequest.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesGroupleaveGroupStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 1103, defaultValue:Services.Group.Actions.LeaveGroup.ResponseV1(), messageOrGroupClass:Services.Group.Actions.LeaveGroup.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesGroupgetMembersStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 1104, defaultValue:Services.Group.Actions.GetMembers.ResponseV1(), messageOrGroupClass:Services.Group.Actions.GetMembers.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesGroupgetGroupStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 1105, defaultValue:Services.Group.Actions.GetGroup.ResponseV1(), messageOrGroupClass:Services.Group.Actions.GetGroup.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesGroupaddToGroupStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 1106, defaultValue:Services.Group.Actions.AddToGroup.ResponseV1(), messageOrGroupClass:Services.Group.Actions.AddToGroup.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesGroupgetMembershipRequestsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 1107, defaultValue:Services.Group.Actions.GetMembershipRequests.ResponseV1(), messageOrGroupClass:Services.Group.Actions.GetMembershipRequests.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesGlossarycreateTermStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 1200, defaultValue:Services.Glossary.Actions.CreateTerm.ResponseV1(), messageOrGroupClass:Services.Glossary.Actions.CreateTerm.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesGlossarygetTermStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 1201, defaultValue:Services.Glossary.Actions.GetTerm.ResponseV1(), messageOrGroupClass:Services.Glossary.Actions.GetTerm.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesGlossarygetTermsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 1202, defaultValue:Services.Glossary.Actions.GetTerms.ResponseV1(), messageOrGroupClass:Services.Glossary.Actions.GetTerms.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesGlossaryupdateTermStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 1203, defaultValue:Services.Glossary.Actions.UpdateTerm.ResponseV1(), messageOrGroupClass:Services.Glossary.Actions.UpdateTerm.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesGlossarydeleteTermStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 1204, defaultValue:Services.Glossary.Actions.DeleteTerm.ResponseV1(), messageOrGroupClass:Services.Glossary.Actions.DeleteTerm.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesNotificationregisterDeviceStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 1300, defaultValue:Services.Notification.Actions.RegisterDevice.ResponseV1(), messageOrGroupClass:Services.Notification.Actions.RegisterDevice.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesNotificationgetPreferencesStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 1301, defaultValue:Services.Notification.Actions.GetPreferences.ResponseV1(), messageOrGroupClass:Services.Notification.Actions.GetPreferences.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesNotificationupdatePreferenceStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 1302, defaultValue:Services.Notification.Actions.UpdatePreference.ResponseV1(), messageOrGroupClass:Services.Notification.Actions.UpdatePreference.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesNotificationsendNotificationStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 1303, defaultValue:Services.Notification.Actions.SendNotification.ResponseV1(), messageOrGroupClass:Services.Notification.Actions.SendNotification.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      extensionRegistry = ExtensionRegistry()
      registerAllExtensions(extensionRegistry)
      Soa.SoaRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.CreateUser.CreateUserRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.ValidUser.ValidUserRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.AuthenticateUser.AuthenticateUserRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.GetUser.GetUserRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.SendVerificationCode.SendVerificationCodeRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.VerifyVerificationCode.VerifyVerificationCodeRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.UpdateUser.UpdateUserRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.GetAuthorizationInstructions.GetAuthorizationInstructionsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.CompleteAuthorization.CompleteAuthorizationRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.GetIdentities.GetIdentitiesRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.BulkCreateUsers.BulkCreateUsersRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.RecordDevice.RecordDeviceRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.RequestAccess.RequestAccessRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.DeleteIdentity.DeleteIdentityRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.Logout.LogoutRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.GetAuthenticationInstructions.GetAuthenticationInstructionsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.GetActiveDevices.GetActiveDevicesRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.CreateOrganization.CreateOrganizationRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.CreateTeam.CreateTeamRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.CreateAddress.CreateAddressRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.DeleteAddress.DeleteAddressRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.GetAddress.GetAddressRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.GetTeam.GetTeamRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.GetOrganization.GetOrganizationRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.GetTeams.GetTeamsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.GetAddresses.GetAddressesRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.GetTeamDescendants.GetTeamDescendantsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.GetTopLevelTeam.GetTopLevelTeamRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.CreateLocation.CreateLocationRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.UpdateLocation.UpdateLocationRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.GetLocations.GetLocationsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.GetLocation.GetLocationRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.CreateToken.CreateTokenRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.GetTokens.GetTokensRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.EnableIntegration.EnableIntegrationRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.GetIntegration.GetIntegrationRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.DisableIntegration.DisableIntegrationRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.UpdateTeam.UpdateTeamRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.CreateProfile.CreateProfileRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.GetExtendedProfile.GetExtendedProfileRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.GetProfile.GetProfileRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.CreateTags.CreateTagsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.GetTags.GetTagsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.AddTags.AddTagsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.UpdateProfile.UpdateProfileRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.GetProfiles.GetProfilesRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.GetDirectReports.GetDirectReportsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.GetPeers.GetPeersRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.GetProfileStats.GetProfileStatsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.GetUpcomingAnniversaries.GetUpcomingAnniversariesRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.GetUpcomingBirthdays.GetUpcomingBirthdaysRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.GetRecentHires.GetRecentHiresRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.GetActiveTags.GetActiveTagsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.BulkCreateProfiles.BulkCreateProfilesRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.BulkUpdateProfiles.BulkUpdateProfilesRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.GetAttributesForProfiles.GetAttributesForProfilesRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.RemoveTags.RemoveTagsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Search.Actions.Search.SearchRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Media.Actions.StartImageUpload.StartImageUploadRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Media.Actions.CompleteImageUpload.CompleteImageUploadRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Sync.Actions.StartSync.StartSyncRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Sync.Actions.Sync.SyncRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Sync.Actions.CompleteSync.CompleteSyncRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Group.Actions.GetGroups.GetGroupsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Group.Actions.JoinGroup.JoinGroupRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Group.Actions.RespondToMembershipRequest.RespondToMembershipRequestRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Group.Actions.LeaveGroup.LeaveGroupRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Group.Actions.GetMembers.GetMembersRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Group.Actions.GetGroup.GetGroupRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Group.Actions.AddToGroup.AddToGroupRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Group.Actions.GetMembershipRequests.GetMembershipRequestsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Glossary.Actions.CreateTerm.CreateTermRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Glossary.Actions.GetTerm.GetTermRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Glossary.Actions.GetTerms.GetTermsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Glossary.Actions.UpdateTerm.UpdateTermRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Glossary.Actions.DeleteTerm.DeleteTermRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Notification.Actions.RegisterDevice.RegisterDeviceRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Notification.Actions.GetPreferences.GetPreferencesRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Notification.Actions.UpdatePreference.UpdatePreferenceRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Notification.Actions.SendNotification.SendNotificationRoot.sharedInstance.registerAllExtensions(extensionRegistry)
    }
    public func registerAllExtensions(registry:ExtensionRegistry) {
      registry.addExtension(ServicesRegistryResponsesUsercreateUserStatic)
      registry.addExtension(ServicesRegistryResponsesUservalidUserStatic)
      registry.addExtension(ServicesRegistryResponsesUserauthenticateUserStatic)
      registry.addExtension(ServicesRegistryResponsesUsergetUserStatic)
      registry.addExtension(ServicesRegistryResponsesUsersendVerificationCodeStatic)
      registry.addExtension(ServicesRegistryResponsesUserverifyVerificationCodeStatic)
      registry.addExtension(ServicesRegistryResponsesUserupdateUserStatic)
      registry.addExtension(ServicesRegistryResponsesUsergetAuthorizationInstructionsStatic)
      registry.addExtension(ServicesRegistryResponsesUsercompleteAuthorizationStatic)
      registry.addExtension(ServicesRegistryResponsesUsergetIdentitiesStatic)
      registry.addExtension(ServicesRegistryResponsesUserbulkCreateUsersStatic)
      registry.addExtension(ServicesRegistryResponsesUserrecordDeviceStatic)
      registry.addExtension(ServicesRegistryResponsesUserrequestAccessStatic)
      registry.addExtension(ServicesRegistryResponsesUserdeleteIdentityStatic)
      registry.addExtension(ServicesRegistryResponsesUserlogoutStatic)
      registry.addExtension(ServicesRegistryResponsesUsergetAuthenticationInstructionsStatic)
      registry.addExtension(ServicesRegistryResponsesUsergetActiveDevicesStatic)
      registry.addExtension(ServicesRegistryResponsesOrganizationcreateOrganizationStatic)
      registry.addExtension(ServicesRegistryResponsesOrganizationgetOrganizationStatic)
      registry.addExtension(ServicesRegistryResponsesOrganizationcreateTeamStatic)
      registry.addExtension(ServicesRegistryResponsesOrganizationcreateAddressStatic)
      registry.addExtension(ServicesRegistryResponsesOrganizationdeleteAddressStatic)
      registry.addExtension(ServicesRegistryResponsesOrganizationgetAddressStatic)
      registry.addExtension(ServicesRegistryResponsesOrganizationgetTeamStatic)
      registry.addExtension(ServicesRegistryResponsesOrganizationgetTeamsStatic)
      registry.addExtension(ServicesRegistryResponsesOrganizationgetAddressesStatic)
      registry.addExtension(ServicesRegistryResponsesOrganizationgetTeamDescendantsStatic)
      registry.addExtension(ServicesRegistryResponsesOrganizationgetTopLevelTeamStatic)
      registry.addExtension(ServicesRegistryResponsesOrganizationcreateLocationStatic)
      registry.addExtension(ServicesRegistryResponsesOrganizationupdateLocationStatic)
      registry.addExtension(ServicesRegistryResponsesOrganizationgetLocationsStatic)
      registry.addExtension(ServicesRegistryResponsesOrganizationgetLocationStatic)
      registry.addExtension(ServicesRegistryResponsesOrganizationcreateTokenStatic)
      registry.addExtension(ServicesRegistryResponsesOrganizationgetTokensStatic)
      registry.addExtension(ServicesRegistryResponsesOrganizationenableIntegrationStatic)
      registry.addExtension(ServicesRegistryResponsesOrganizationgetIntegrationStatic)
      registry.addExtension(ServicesRegistryResponsesOrganizationdisableIntegrationStatic)
      registry.addExtension(ServicesRegistryResponsesOrganizationupdateTeamStatic)
      registry.addExtension(ServicesRegistryResponsesProfilecreateProfileStatic)
      registry.addExtension(ServicesRegistryResponsesProfilegetExtendedProfileStatic)
      registry.addExtension(ServicesRegistryResponsesProfilegetProfileStatic)
      registry.addExtension(ServicesRegistryResponsesProfilecreateTagsStatic)
      registry.addExtension(ServicesRegistryResponsesProfilegetTagsStatic)
      registry.addExtension(ServicesRegistryResponsesProfileaddTagsStatic)
      registry.addExtension(ServicesRegistryResponsesProfileupdateProfileStatic)
      registry.addExtension(ServicesRegistryResponsesProfilegetProfilesStatic)
      registry.addExtension(ServicesRegistryResponsesProfilegetDirectReportsStatic)
      registry.addExtension(ServicesRegistryResponsesProfilegetPeersStatic)
      registry.addExtension(ServicesRegistryResponsesProfilegetProfileStatsStatic)
      registry.addExtension(ServicesRegistryResponsesProfilegetUpcomingAnniversariesStatic)
      registry.addExtension(ServicesRegistryResponsesProfilegetUpcomingBirthdaysStatic)
      registry.addExtension(ServicesRegistryResponsesProfilegetRecentHiresStatic)
      registry.addExtension(ServicesRegistryResponsesProfilegetActiveTagsStatic)
      registry.addExtension(ServicesRegistryResponsesProfilebulkCreateProfilesStatic)
      registry.addExtension(ServicesRegistryResponsesProfilebulkUpdateProfilesStatic)
      registry.addExtension(ServicesRegistryResponsesProfilegetAttributesForProfilesStatic)
      registry.addExtension(ServicesRegistryResponsesProfileremoveTagsStatic)
      registry.addExtension(ServicesRegistryResponsesSearchsearchStatic)
      registry.addExtension(ServicesRegistryResponsesMediastartImageUploadStatic)
      registry.addExtension(ServicesRegistryResponsesMediacompleteImageUploadStatic)
      registry.addExtension(ServicesRegistryResponsesSyncstartSyncStatic)
      registry.addExtension(ServicesRegistryResponsesSyncsyncPayloadsStatic)
      registry.addExtension(ServicesRegistryResponsesSynccompleteSyncStatic)
      registry.addExtension(ServicesRegistryResponsesGroupgetGroupsStatic)
      registry.addExtension(ServicesRegistryResponsesGroupjoinGroupStatic)
      registry.addExtension(ServicesRegistryResponsesGrouprespondToMembershipRequestStatic)
      registry.addExtension(ServicesRegistryResponsesGroupleaveGroupStatic)
      registry.addExtension(ServicesRegistryResponsesGroupgetMembersStatic)
      registry.addExtension(ServicesRegistryResponsesGroupgetGroupStatic)
      registry.addExtension(ServicesRegistryResponsesGroupaddToGroupStatic)
      registry.addExtension(ServicesRegistryResponsesGroupgetMembershipRequestsStatic)
      registry.addExtension(ServicesRegistryResponsesGlossarycreateTermStatic)
      registry.addExtension(ServicesRegistryResponsesGlossarygetTermStatic)
      registry.addExtension(ServicesRegistryResponsesGlossarygetTermsStatic)
      registry.addExtension(ServicesRegistryResponsesGlossaryupdateTermStatic)
      registry.addExtension(ServicesRegistryResponsesGlossarydeleteTermStatic)
      registry.addExtension(ServicesRegistryResponsesNotificationregisterDeviceStatic)
      registry.addExtension(ServicesRegistryResponsesNotificationgetPreferencesStatic)
      registry.addExtension(ServicesRegistryResponsesNotificationupdatePreferenceStatic)
      registry.addExtension(ServicesRegistryResponsesNotificationsendNotificationStatic)
    }
  }

  final public class User : GeneratedMessage, GeneratedMessageProtocol {
    override public subscript(key: String) -> Any? {
           switch key {
           default: return nil
           }
    }

    public class func createUser() -> ConcreateExtensionField {
         return ServicesRegistryResponsesUsercreateUser
    }
    public class func validUser() -> ConcreateExtensionField {
         return ServicesRegistryResponsesUservalidUser
    }
    public class func authenticateUser() -> ConcreateExtensionField {
         return ServicesRegistryResponsesUserauthenticateUser
    }
    public class func getUser() -> ConcreateExtensionField {
         return ServicesRegistryResponsesUsergetUser
    }
    public class func sendVerificationCode() -> ConcreateExtensionField {
         return ServicesRegistryResponsesUsersendVerificationCode
    }
    public class func verifyVerificationCode() -> ConcreateExtensionField {
         return ServicesRegistryResponsesUserverifyVerificationCode
    }
    public class func updateUser() -> ConcreateExtensionField {
         return ServicesRegistryResponsesUserupdateUser
    }
    public class func getAuthorizationInstructions() -> ConcreateExtensionField {
         return ServicesRegistryResponsesUsergetAuthorizationInstructions
    }
    public class func completeAuthorization() -> ConcreateExtensionField {
         return ServicesRegistryResponsesUsercompleteAuthorization
    }
    public class func getIdentities() -> ConcreateExtensionField {
         return ServicesRegistryResponsesUsergetIdentities
    }
    public class func bulkCreateUsers() -> ConcreateExtensionField {
         return ServicesRegistryResponsesUserbulkCreateUsers
    }
    public class func recordDevice() -> ConcreateExtensionField {
         return ServicesRegistryResponsesUserrecordDevice
    }
    public class func requestAccess() -> ConcreateExtensionField {
         return ServicesRegistryResponsesUserrequestAccess
    }
    public class func deleteIdentity() -> ConcreateExtensionField {
         return ServicesRegistryResponsesUserdeleteIdentity
    }
    public class func logout() -> ConcreateExtensionField {
         return ServicesRegistryResponsesUserlogout
    }
    public class func getAuthenticationInstructions() -> ConcreateExtensionField {
         return ServicesRegistryResponsesUsergetAuthenticationInstructions
    }
    public class func getActiveDevices() -> ConcreateExtensionField {
         return ServicesRegistryResponsesUsergetActiveDevices
    }
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) {
      unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseFromData(data:NSData) -> Services.Registry.Responses.User {
      return Services.Registry.Responses.User.builder().mergeFromData(data, extensionRegistry:Services.Registry.Responses.ResponsesRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) -> Services.Registry.Responses.User {
      return Services.Registry.Responses.User.builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) -> Services.Registry.Responses.User {
      return Services.Registry.Responses.User.builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) ->Services.Registry.Responses.User {
      return Services.Registry.Responses.User.builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) -> Services.Registry.Responses.User {
      return Services.Registry.Responses.User.builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Responses.User {
      return Services.Registry.Responses.User.builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func builder() -> Services.Registry.Responses.UserBuilder {
      return Services.Registry.Responses.User.classBuilder() as! Services.Registry.Responses.UserBuilder
    }
    public func builder() -> Services.Registry.Responses.UserBuilder {
      return classBuilder() as! Services.Registry.Responses.UserBuilder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Services.Registry.Responses.UserBuilder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Services.Registry.Responses.User.builder()
    }
    public func toBuilder() -> Services.Registry.Responses.UserBuilder {
      return Services.Registry.Responses.User.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Services.Registry.Responses.User) -> Services.Registry.Responses.UserBuilder {
      return Services.Registry.Responses.User.builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) {
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Services.Registry.Responses.User"
    }
    override public func className() -> String {
        return "Services.Registry.Responses.User"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Services.Registry.Responses.User.self
    }
    //Meta information declaration end

  }

  final public class UserBuilder : GeneratedMessageBuilder {
    private var builderResult:Services.Registry.Responses.User

    required override public init () {
       builderResult = Services.Registry.Responses.User()
       super.init()
    }
    override public var internalGetResult:GeneratedMessage {
         get {
            return builderResult
         }
    }
    public override func clear() -> Services.Registry.Responses.UserBuilder {
      builderResult = Services.Registry.Responses.User()
      return self
    }
    public override func clone() -> Services.Registry.Responses.UserBuilder {
      return Services.Registry.Responses.User.builderWithPrototype(builderResult)
    }
    public override func build() -> Services.Registry.Responses.User {
         checkInitialized()
         return buildPartial()
    }
    public func buildPartial() -> Services.Registry.Responses.User {
      var returnMe:Services.Registry.Responses.User = builderResult
      return returnMe
    }
    public func mergeFrom(other:Services.Registry.Responses.User) -> Services.Registry.Responses.UserBuilder {
      if (other == Services.Registry.Responses.User()) {
       return self
      }
      mergeUnknownFields(other.unknownFields)
      return self
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream) ->Services.Registry.Responses.UserBuilder {
         return mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Responses.UserBuilder {
      var unknownFieldsBuilder:UnknownFieldSetBuilder = UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
      while (true) {
        var tag = input.readTag()
        switch tag {
        case 0: 
          self.unknownFields = unknownFieldsBuilder.build()
          return self

        default:
          if (!parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag)) {
             unknownFields = unknownFieldsBuilder.build()
             return self
          }
        }
      }
    }
  }

  final public class Organization : GeneratedMessage, GeneratedMessageProtocol {
    override public subscript(key: String) -> Any? {
           switch key {
           default: return nil
           }
    }

    public class func createOrganization() -> ConcreateExtensionField {
         return ServicesRegistryResponsesOrganizationcreateOrganization
    }
    public class func getOrganization() -> ConcreateExtensionField {
         return ServicesRegistryResponsesOrganizationgetOrganization
    }
    public class func createTeam() -> ConcreateExtensionField {
         return ServicesRegistryResponsesOrganizationcreateTeam
    }
    public class func createAddress() -> ConcreateExtensionField {
         return ServicesRegistryResponsesOrganizationcreateAddress
    }
    public class func deleteAddress() -> ConcreateExtensionField {
         return ServicesRegistryResponsesOrganizationdeleteAddress
    }
    public class func getAddress() -> ConcreateExtensionField {
         return ServicesRegistryResponsesOrganizationgetAddress
    }
    public class func getTeam() -> ConcreateExtensionField {
         return ServicesRegistryResponsesOrganizationgetTeam
    }
    public class func getTeams() -> ConcreateExtensionField {
         return ServicesRegistryResponsesOrganizationgetTeams
    }
    public class func getAddresses() -> ConcreateExtensionField {
         return ServicesRegistryResponsesOrganizationgetAddresses
    }
    public class func getTeamDescendants() -> ConcreateExtensionField {
         return ServicesRegistryResponsesOrganizationgetTeamDescendants
    }
    public class func getTopLevelTeam() -> ConcreateExtensionField {
         return ServicesRegistryResponsesOrganizationgetTopLevelTeam
    }
    public class func createLocation() -> ConcreateExtensionField {
         return ServicesRegistryResponsesOrganizationcreateLocation
    }
    public class func updateLocation() -> ConcreateExtensionField {
         return ServicesRegistryResponsesOrganizationupdateLocation
    }
    public class func getLocations() -> ConcreateExtensionField {
         return ServicesRegistryResponsesOrganizationgetLocations
    }
    public class func getLocation() -> ConcreateExtensionField {
         return ServicesRegistryResponsesOrganizationgetLocation
    }
    public class func createToken() -> ConcreateExtensionField {
         return ServicesRegistryResponsesOrganizationcreateToken
    }
    public class func getTokens() -> ConcreateExtensionField {
         return ServicesRegistryResponsesOrganizationgetTokens
    }
    public class func enableIntegration() -> ConcreateExtensionField {
         return ServicesRegistryResponsesOrganizationenableIntegration
    }
    public class func getIntegration() -> ConcreateExtensionField {
         return ServicesRegistryResponsesOrganizationgetIntegration
    }
    public class func disableIntegration() -> ConcreateExtensionField {
         return ServicesRegistryResponsesOrganizationdisableIntegration
    }
    public class func updateTeam() -> ConcreateExtensionField {
         return ServicesRegistryResponsesOrganizationupdateTeam
    }
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) {
      unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseFromData(data:NSData) -> Services.Registry.Responses.Organization {
      return Services.Registry.Responses.Organization.builder().mergeFromData(data, extensionRegistry:Services.Registry.Responses.ResponsesRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) -> Services.Registry.Responses.Organization {
      return Services.Registry.Responses.Organization.builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) -> Services.Registry.Responses.Organization {
      return Services.Registry.Responses.Organization.builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) ->Services.Registry.Responses.Organization {
      return Services.Registry.Responses.Organization.builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) -> Services.Registry.Responses.Organization {
      return Services.Registry.Responses.Organization.builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Responses.Organization {
      return Services.Registry.Responses.Organization.builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func builder() -> Services.Registry.Responses.OrganizationBuilder {
      return Services.Registry.Responses.Organization.classBuilder() as! Services.Registry.Responses.OrganizationBuilder
    }
    public func builder() -> Services.Registry.Responses.OrganizationBuilder {
      return classBuilder() as! Services.Registry.Responses.OrganizationBuilder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Services.Registry.Responses.OrganizationBuilder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Services.Registry.Responses.Organization.builder()
    }
    public func toBuilder() -> Services.Registry.Responses.OrganizationBuilder {
      return Services.Registry.Responses.Organization.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Services.Registry.Responses.Organization) -> Services.Registry.Responses.OrganizationBuilder {
      return Services.Registry.Responses.Organization.builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) {
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Services.Registry.Responses.Organization"
    }
    override public func className() -> String {
        return "Services.Registry.Responses.Organization"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Services.Registry.Responses.Organization.self
    }
    //Meta information declaration end

  }

  final public class OrganizationBuilder : GeneratedMessageBuilder {
    private var builderResult:Services.Registry.Responses.Organization

    required override public init () {
       builderResult = Services.Registry.Responses.Organization()
       super.init()
    }
    override public var internalGetResult:GeneratedMessage {
         get {
            return builderResult
         }
    }
    public override func clear() -> Services.Registry.Responses.OrganizationBuilder {
      builderResult = Services.Registry.Responses.Organization()
      return self
    }
    public override func clone() -> Services.Registry.Responses.OrganizationBuilder {
      return Services.Registry.Responses.Organization.builderWithPrototype(builderResult)
    }
    public override func build() -> Services.Registry.Responses.Organization {
         checkInitialized()
         return buildPartial()
    }
    public func buildPartial() -> Services.Registry.Responses.Organization {
      var returnMe:Services.Registry.Responses.Organization = builderResult
      return returnMe
    }
    public func mergeFrom(other:Services.Registry.Responses.Organization) -> Services.Registry.Responses.OrganizationBuilder {
      if (other == Services.Registry.Responses.Organization()) {
       return self
      }
      mergeUnknownFields(other.unknownFields)
      return self
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream) ->Services.Registry.Responses.OrganizationBuilder {
         return mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Responses.OrganizationBuilder {
      var unknownFieldsBuilder:UnknownFieldSetBuilder = UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
      while (true) {
        var tag = input.readTag()
        switch tag {
        case 0: 
          self.unknownFields = unknownFieldsBuilder.build()
          return self

        default:
          if (!parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag)) {
             unknownFields = unknownFieldsBuilder.build()
             return self
          }
        }
      }
    }
  }

  final public class Profile : GeneratedMessage, GeneratedMessageProtocol {
    override public subscript(key: String) -> Any? {
           switch key {
           default: return nil
           }
    }

    public class func createProfile() -> ConcreateExtensionField {
         return ServicesRegistryResponsesProfilecreateProfile
    }
    public class func getExtendedProfile() -> ConcreateExtensionField {
         return ServicesRegistryResponsesProfilegetExtendedProfile
    }
    public class func getProfile() -> ConcreateExtensionField {
         return ServicesRegistryResponsesProfilegetProfile
    }
    public class func createTags() -> ConcreateExtensionField {
         return ServicesRegistryResponsesProfilecreateTags
    }
    public class func getTags() -> ConcreateExtensionField {
         return ServicesRegistryResponsesProfilegetTags
    }
    public class func addTags() -> ConcreateExtensionField {
         return ServicesRegistryResponsesProfileaddTags
    }
    public class func updateProfile() -> ConcreateExtensionField {
         return ServicesRegistryResponsesProfileupdateProfile
    }
    public class func getProfiles() -> ConcreateExtensionField {
         return ServicesRegistryResponsesProfilegetProfiles
    }
    public class func getDirectReports() -> ConcreateExtensionField {
         return ServicesRegistryResponsesProfilegetDirectReports
    }
    public class func getPeers() -> ConcreateExtensionField {
         return ServicesRegistryResponsesProfilegetPeers
    }
    public class func getProfileStats() -> ConcreateExtensionField {
         return ServicesRegistryResponsesProfilegetProfileStats
    }
    public class func getUpcomingAnniversaries() -> ConcreateExtensionField {
         return ServicesRegistryResponsesProfilegetUpcomingAnniversaries
    }
    public class func getUpcomingBirthdays() -> ConcreateExtensionField {
         return ServicesRegistryResponsesProfilegetUpcomingBirthdays
    }
    public class func getRecentHires() -> ConcreateExtensionField {
         return ServicesRegistryResponsesProfilegetRecentHires
    }
    public class func getActiveTags() -> ConcreateExtensionField {
         return ServicesRegistryResponsesProfilegetActiveTags
    }
    public class func bulkCreateProfiles() -> ConcreateExtensionField {
         return ServicesRegistryResponsesProfilebulkCreateProfiles
    }
    public class func bulkUpdateProfiles() -> ConcreateExtensionField {
         return ServicesRegistryResponsesProfilebulkUpdateProfiles
    }
    public class func getAttributesForProfiles() -> ConcreateExtensionField {
         return ServicesRegistryResponsesProfilegetAttributesForProfiles
    }
    public class func removeTags() -> ConcreateExtensionField {
         return ServicesRegistryResponsesProfileremoveTags
    }
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) {
      unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseFromData(data:NSData) -> Services.Registry.Responses.Profile {
      return Services.Registry.Responses.Profile.builder().mergeFromData(data, extensionRegistry:Services.Registry.Responses.ResponsesRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) -> Services.Registry.Responses.Profile {
      return Services.Registry.Responses.Profile.builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) -> Services.Registry.Responses.Profile {
      return Services.Registry.Responses.Profile.builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) ->Services.Registry.Responses.Profile {
      return Services.Registry.Responses.Profile.builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) -> Services.Registry.Responses.Profile {
      return Services.Registry.Responses.Profile.builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Responses.Profile {
      return Services.Registry.Responses.Profile.builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func builder() -> Services.Registry.Responses.ProfileBuilder {
      return Services.Registry.Responses.Profile.classBuilder() as! Services.Registry.Responses.ProfileBuilder
    }
    public func builder() -> Services.Registry.Responses.ProfileBuilder {
      return classBuilder() as! Services.Registry.Responses.ProfileBuilder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Services.Registry.Responses.ProfileBuilder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Services.Registry.Responses.Profile.builder()
    }
    public func toBuilder() -> Services.Registry.Responses.ProfileBuilder {
      return Services.Registry.Responses.Profile.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Services.Registry.Responses.Profile) -> Services.Registry.Responses.ProfileBuilder {
      return Services.Registry.Responses.Profile.builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) {
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Services.Registry.Responses.Profile"
    }
    override public func className() -> String {
        return "Services.Registry.Responses.Profile"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Services.Registry.Responses.Profile.self
    }
    //Meta information declaration end

  }

  final public class ProfileBuilder : GeneratedMessageBuilder {
    private var builderResult:Services.Registry.Responses.Profile

    required override public init () {
       builderResult = Services.Registry.Responses.Profile()
       super.init()
    }
    override public var internalGetResult:GeneratedMessage {
         get {
            return builderResult
         }
    }
    public override func clear() -> Services.Registry.Responses.ProfileBuilder {
      builderResult = Services.Registry.Responses.Profile()
      return self
    }
    public override func clone() -> Services.Registry.Responses.ProfileBuilder {
      return Services.Registry.Responses.Profile.builderWithPrototype(builderResult)
    }
    public override func build() -> Services.Registry.Responses.Profile {
         checkInitialized()
         return buildPartial()
    }
    public func buildPartial() -> Services.Registry.Responses.Profile {
      var returnMe:Services.Registry.Responses.Profile = builderResult
      return returnMe
    }
    public func mergeFrom(other:Services.Registry.Responses.Profile) -> Services.Registry.Responses.ProfileBuilder {
      if (other == Services.Registry.Responses.Profile()) {
       return self
      }
      mergeUnknownFields(other.unknownFields)
      return self
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream) ->Services.Registry.Responses.ProfileBuilder {
         return mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Responses.ProfileBuilder {
      var unknownFieldsBuilder:UnknownFieldSetBuilder = UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
      while (true) {
        var tag = input.readTag()
        switch tag {
        case 0: 
          self.unknownFields = unknownFieldsBuilder.build()
          return self

        default:
          if (!parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag)) {
             unknownFields = unknownFieldsBuilder.build()
             return self
          }
        }
      }
    }
  }

  final public class Search : GeneratedMessage, GeneratedMessageProtocol {
    override public subscript(key: String) -> Any? {
           switch key {
           default: return nil
           }
    }

    public class func search() -> ConcreateExtensionField {
         return ServicesRegistryResponsesSearchsearch
    }
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) {
      unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseFromData(data:NSData) -> Services.Registry.Responses.Search {
      return Services.Registry.Responses.Search.builder().mergeFromData(data, extensionRegistry:Services.Registry.Responses.ResponsesRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) -> Services.Registry.Responses.Search {
      return Services.Registry.Responses.Search.builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) -> Services.Registry.Responses.Search {
      return Services.Registry.Responses.Search.builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) ->Services.Registry.Responses.Search {
      return Services.Registry.Responses.Search.builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) -> Services.Registry.Responses.Search {
      return Services.Registry.Responses.Search.builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Responses.Search {
      return Services.Registry.Responses.Search.builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func builder() -> Services.Registry.Responses.SearchBuilder {
      return Services.Registry.Responses.Search.classBuilder() as! Services.Registry.Responses.SearchBuilder
    }
    public func builder() -> Services.Registry.Responses.SearchBuilder {
      return classBuilder() as! Services.Registry.Responses.SearchBuilder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Services.Registry.Responses.SearchBuilder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Services.Registry.Responses.Search.builder()
    }
    public func toBuilder() -> Services.Registry.Responses.SearchBuilder {
      return Services.Registry.Responses.Search.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Services.Registry.Responses.Search) -> Services.Registry.Responses.SearchBuilder {
      return Services.Registry.Responses.Search.builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) {
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Services.Registry.Responses.Search"
    }
    override public func className() -> String {
        return "Services.Registry.Responses.Search"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Services.Registry.Responses.Search.self
    }
    //Meta information declaration end

  }

  final public class SearchBuilder : GeneratedMessageBuilder {
    private var builderResult:Services.Registry.Responses.Search

    required override public init () {
       builderResult = Services.Registry.Responses.Search()
       super.init()
    }
    override public var internalGetResult:GeneratedMessage {
         get {
            return builderResult
         }
    }
    public override func clear() -> Services.Registry.Responses.SearchBuilder {
      builderResult = Services.Registry.Responses.Search()
      return self
    }
    public override func clone() -> Services.Registry.Responses.SearchBuilder {
      return Services.Registry.Responses.Search.builderWithPrototype(builderResult)
    }
    public override func build() -> Services.Registry.Responses.Search {
         checkInitialized()
         return buildPartial()
    }
    public func buildPartial() -> Services.Registry.Responses.Search {
      var returnMe:Services.Registry.Responses.Search = builderResult
      return returnMe
    }
    public func mergeFrom(other:Services.Registry.Responses.Search) -> Services.Registry.Responses.SearchBuilder {
      if (other == Services.Registry.Responses.Search()) {
       return self
      }
      mergeUnknownFields(other.unknownFields)
      return self
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream) ->Services.Registry.Responses.SearchBuilder {
         return mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Responses.SearchBuilder {
      var unknownFieldsBuilder:UnknownFieldSetBuilder = UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
      while (true) {
        var tag = input.readTag()
        switch tag {
        case 0: 
          self.unknownFields = unknownFieldsBuilder.build()
          return self

        default:
          if (!parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag)) {
             unknownFields = unknownFieldsBuilder.build()
             return self
          }
        }
      }
    }
  }

  final public class Media : GeneratedMessage, GeneratedMessageProtocol {
    override public subscript(key: String) -> Any? {
           switch key {
           default: return nil
           }
    }

    public class func startImageUpload() -> ConcreateExtensionField {
         return ServicesRegistryResponsesMediastartImageUpload
    }
    public class func completeImageUpload() -> ConcreateExtensionField {
         return ServicesRegistryResponsesMediacompleteImageUpload
    }
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) {
      unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseFromData(data:NSData) -> Services.Registry.Responses.Media {
      return Services.Registry.Responses.Media.builder().mergeFromData(data, extensionRegistry:Services.Registry.Responses.ResponsesRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) -> Services.Registry.Responses.Media {
      return Services.Registry.Responses.Media.builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) -> Services.Registry.Responses.Media {
      return Services.Registry.Responses.Media.builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) ->Services.Registry.Responses.Media {
      return Services.Registry.Responses.Media.builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) -> Services.Registry.Responses.Media {
      return Services.Registry.Responses.Media.builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Responses.Media {
      return Services.Registry.Responses.Media.builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func builder() -> Services.Registry.Responses.MediaBuilder {
      return Services.Registry.Responses.Media.classBuilder() as! Services.Registry.Responses.MediaBuilder
    }
    public func builder() -> Services.Registry.Responses.MediaBuilder {
      return classBuilder() as! Services.Registry.Responses.MediaBuilder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Services.Registry.Responses.MediaBuilder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Services.Registry.Responses.Media.builder()
    }
    public func toBuilder() -> Services.Registry.Responses.MediaBuilder {
      return Services.Registry.Responses.Media.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Services.Registry.Responses.Media) -> Services.Registry.Responses.MediaBuilder {
      return Services.Registry.Responses.Media.builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) {
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Services.Registry.Responses.Media"
    }
    override public func className() -> String {
        return "Services.Registry.Responses.Media"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Services.Registry.Responses.Media.self
    }
    //Meta information declaration end

  }

  final public class MediaBuilder : GeneratedMessageBuilder {
    private var builderResult:Services.Registry.Responses.Media

    required override public init () {
       builderResult = Services.Registry.Responses.Media()
       super.init()
    }
    override public var internalGetResult:GeneratedMessage {
         get {
            return builderResult
         }
    }
    public override func clear() -> Services.Registry.Responses.MediaBuilder {
      builderResult = Services.Registry.Responses.Media()
      return self
    }
    public override func clone() -> Services.Registry.Responses.MediaBuilder {
      return Services.Registry.Responses.Media.builderWithPrototype(builderResult)
    }
    public override func build() -> Services.Registry.Responses.Media {
         checkInitialized()
         return buildPartial()
    }
    public func buildPartial() -> Services.Registry.Responses.Media {
      var returnMe:Services.Registry.Responses.Media = builderResult
      return returnMe
    }
    public func mergeFrom(other:Services.Registry.Responses.Media) -> Services.Registry.Responses.MediaBuilder {
      if (other == Services.Registry.Responses.Media()) {
       return self
      }
      mergeUnknownFields(other.unknownFields)
      return self
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream) ->Services.Registry.Responses.MediaBuilder {
         return mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Responses.MediaBuilder {
      var unknownFieldsBuilder:UnknownFieldSetBuilder = UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
      while (true) {
        var tag = input.readTag()
        switch tag {
        case 0: 
          self.unknownFields = unknownFieldsBuilder.build()
          return self

        default:
          if (!parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag)) {
             unknownFields = unknownFieldsBuilder.build()
             return self
          }
        }
      }
    }
  }

  final public class Sync : GeneratedMessage, GeneratedMessageProtocol {
    override public subscript(key: String) -> Any? {
           switch key {
           default: return nil
           }
    }

    public class func startSync() -> ConcreateExtensionField {
         return ServicesRegistryResponsesSyncstartSync
    }
    public class func syncPayloads() -> ConcreateExtensionField {
         return ServicesRegistryResponsesSyncsyncPayloads
    }
    public class func completeSync() -> ConcreateExtensionField {
         return ServicesRegistryResponsesSynccompleteSync
    }
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) {
      unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseFromData(data:NSData) -> Services.Registry.Responses.Sync {
      return Services.Registry.Responses.Sync.builder().mergeFromData(data, extensionRegistry:Services.Registry.Responses.ResponsesRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) -> Services.Registry.Responses.Sync {
      return Services.Registry.Responses.Sync.builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) -> Services.Registry.Responses.Sync {
      return Services.Registry.Responses.Sync.builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) ->Services.Registry.Responses.Sync {
      return Services.Registry.Responses.Sync.builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) -> Services.Registry.Responses.Sync {
      return Services.Registry.Responses.Sync.builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Responses.Sync {
      return Services.Registry.Responses.Sync.builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func builder() -> Services.Registry.Responses.SyncBuilder {
      return Services.Registry.Responses.Sync.classBuilder() as! Services.Registry.Responses.SyncBuilder
    }
    public func builder() -> Services.Registry.Responses.SyncBuilder {
      return classBuilder() as! Services.Registry.Responses.SyncBuilder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Services.Registry.Responses.SyncBuilder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Services.Registry.Responses.Sync.builder()
    }
    public func toBuilder() -> Services.Registry.Responses.SyncBuilder {
      return Services.Registry.Responses.Sync.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Services.Registry.Responses.Sync) -> Services.Registry.Responses.SyncBuilder {
      return Services.Registry.Responses.Sync.builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) {
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Services.Registry.Responses.Sync"
    }
    override public func className() -> String {
        return "Services.Registry.Responses.Sync"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Services.Registry.Responses.Sync.self
    }
    //Meta information declaration end

  }

  final public class SyncBuilder : GeneratedMessageBuilder {
    private var builderResult:Services.Registry.Responses.Sync

    required override public init () {
       builderResult = Services.Registry.Responses.Sync()
       super.init()
    }
    override public var internalGetResult:GeneratedMessage {
         get {
            return builderResult
         }
    }
    public override func clear() -> Services.Registry.Responses.SyncBuilder {
      builderResult = Services.Registry.Responses.Sync()
      return self
    }
    public override func clone() -> Services.Registry.Responses.SyncBuilder {
      return Services.Registry.Responses.Sync.builderWithPrototype(builderResult)
    }
    public override func build() -> Services.Registry.Responses.Sync {
         checkInitialized()
         return buildPartial()
    }
    public func buildPartial() -> Services.Registry.Responses.Sync {
      var returnMe:Services.Registry.Responses.Sync = builderResult
      return returnMe
    }
    public func mergeFrom(other:Services.Registry.Responses.Sync) -> Services.Registry.Responses.SyncBuilder {
      if (other == Services.Registry.Responses.Sync()) {
       return self
      }
      mergeUnknownFields(other.unknownFields)
      return self
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream) ->Services.Registry.Responses.SyncBuilder {
         return mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Responses.SyncBuilder {
      var unknownFieldsBuilder:UnknownFieldSetBuilder = UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
      while (true) {
        var tag = input.readTag()
        switch tag {
        case 0: 
          self.unknownFields = unknownFieldsBuilder.build()
          return self

        default:
          if (!parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag)) {
             unknownFields = unknownFieldsBuilder.build()
             return self
          }
        }
      }
    }
  }

  final public class Group : GeneratedMessage, GeneratedMessageProtocol {
    override public subscript(key: String) -> Any? {
           switch key {
           default: return nil
           }
    }

    public class func getGroups() -> ConcreateExtensionField {
         return ServicesRegistryResponsesGroupgetGroups
    }
    public class func joinGroup() -> ConcreateExtensionField {
         return ServicesRegistryResponsesGroupjoinGroup
    }
    public class func respondToMembershipRequest() -> ConcreateExtensionField {
         return ServicesRegistryResponsesGrouprespondToMembershipRequest
    }
    public class func leaveGroup() -> ConcreateExtensionField {
         return ServicesRegistryResponsesGroupleaveGroup
    }
    public class func getMembers() -> ConcreateExtensionField {
         return ServicesRegistryResponsesGroupgetMembers
    }
    public class func getGroup() -> ConcreateExtensionField {
         return ServicesRegistryResponsesGroupgetGroup
    }
    public class func addToGroup() -> ConcreateExtensionField {
         return ServicesRegistryResponsesGroupaddToGroup
    }
    public class func getMembershipRequests() -> ConcreateExtensionField {
         return ServicesRegistryResponsesGroupgetMembershipRequests
    }
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) {
      unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseFromData(data:NSData) -> Services.Registry.Responses.Group {
      return Services.Registry.Responses.Group.builder().mergeFromData(data, extensionRegistry:Services.Registry.Responses.ResponsesRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) -> Services.Registry.Responses.Group {
      return Services.Registry.Responses.Group.builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) -> Services.Registry.Responses.Group {
      return Services.Registry.Responses.Group.builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) ->Services.Registry.Responses.Group {
      return Services.Registry.Responses.Group.builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) -> Services.Registry.Responses.Group {
      return Services.Registry.Responses.Group.builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Responses.Group {
      return Services.Registry.Responses.Group.builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func builder() -> Services.Registry.Responses.GroupBuilder {
      return Services.Registry.Responses.Group.classBuilder() as! Services.Registry.Responses.GroupBuilder
    }
    public func builder() -> Services.Registry.Responses.GroupBuilder {
      return classBuilder() as! Services.Registry.Responses.GroupBuilder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Services.Registry.Responses.GroupBuilder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Services.Registry.Responses.Group.builder()
    }
    public func toBuilder() -> Services.Registry.Responses.GroupBuilder {
      return Services.Registry.Responses.Group.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Services.Registry.Responses.Group) -> Services.Registry.Responses.GroupBuilder {
      return Services.Registry.Responses.Group.builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) {
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Services.Registry.Responses.Group"
    }
    override public func className() -> String {
        return "Services.Registry.Responses.Group"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Services.Registry.Responses.Group.self
    }
    //Meta information declaration end

  }

  final public class GroupBuilder : GeneratedMessageBuilder {
    private var builderResult:Services.Registry.Responses.Group

    required override public init () {
       builderResult = Services.Registry.Responses.Group()
       super.init()
    }
    override public var internalGetResult:GeneratedMessage {
         get {
            return builderResult
         }
    }
    public override func clear() -> Services.Registry.Responses.GroupBuilder {
      builderResult = Services.Registry.Responses.Group()
      return self
    }
    public override func clone() -> Services.Registry.Responses.GroupBuilder {
      return Services.Registry.Responses.Group.builderWithPrototype(builderResult)
    }
    public override func build() -> Services.Registry.Responses.Group {
         checkInitialized()
         return buildPartial()
    }
    public func buildPartial() -> Services.Registry.Responses.Group {
      var returnMe:Services.Registry.Responses.Group = builderResult
      return returnMe
    }
    public func mergeFrom(other:Services.Registry.Responses.Group) -> Services.Registry.Responses.GroupBuilder {
      if (other == Services.Registry.Responses.Group()) {
       return self
      }
      mergeUnknownFields(other.unknownFields)
      return self
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream) ->Services.Registry.Responses.GroupBuilder {
         return mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Responses.GroupBuilder {
      var unknownFieldsBuilder:UnknownFieldSetBuilder = UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
      while (true) {
        var tag = input.readTag()
        switch tag {
        case 0: 
          self.unknownFields = unknownFieldsBuilder.build()
          return self

        default:
          if (!parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag)) {
             unknownFields = unknownFieldsBuilder.build()
             return self
          }
        }
      }
    }
  }

  final public class Glossary : GeneratedMessage, GeneratedMessageProtocol {
    override public subscript(key: String) -> Any? {
           switch key {
           default: return nil
           }
    }

    public class func createTerm() -> ConcreateExtensionField {
         return ServicesRegistryResponsesGlossarycreateTerm
    }
    public class func getTerm() -> ConcreateExtensionField {
         return ServicesRegistryResponsesGlossarygetTerm
    }
    public class func getTerms() -> ConcreateExtensionField {
         return ServicesRegistryResponsesGlossarygetTerms
    }
    public class func updateTerm() -> ConcreateExtensionField {
         return ServicesRegistryResponsesGlossaryupdateTerm
    }
    public class func deleteTerm() -> ConcreateExtensionField {
         return ServicesRegistryResponsesGlossarydeleteTerm
    }
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) {
      unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseFromData(data:NSData) -> Services.Registry.Responses.Glossary {
      return Services.Registry.Responses.Glossary.builder().mergeFromData(data, extensionRegistry:Services.Registry.Responses.ResponsesRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) -> Services.Registry.Responses.Glossary {
      return Services.Registry.Responses.Glossary.builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) -> Services.Registry.Responses.Glossary {
      return Services.Registry.Responses.Glossary.builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) ->Services.Registry.Responses.Glossary {
      return Services.Registry.Responses.Glossary.builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) -> Services.Registry.Responses.Glossary {
      return Services.Registry.Responses.Glossary.builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Responses.Glossary {
      return Services.Registry.Responses.Glossary.builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func builder() -> Services.Registry.Responses.GlossaryBuilder {
      return Services.Registry.Responses.Glossary.classBuilder() as! Services.Registry.Responses.GlossaryBuilder
    }
    public func builder() -> Services.Registry.Responses.GlossaryBuilder {
      return classBuilder() as! Services.Registry.Responses.GlossaryBuilder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Services.Registry.Responses.GlossaryBuilder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Services.Registry.Responses.Glossary.builder()
    }
    public func toBuilder() -> Services.Registry.Responses.GlossaryBuilder {
      return Services.Registry.Responses.Glossary.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Services.Registry.Responses.Glossary) -> Services.Registry.Responses.GlossaryBuilder {
      return Services.Registry.Responses.Glossary.builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) {
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Services.Registry.Responses.Glossary"
    }
    override public func className() -> String {
        return "Services.Registry.Responses.Glossary"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Services.Registry.Responses.Glossary.self
    }
    //Meta information declaration end

  }

  final public class GlossaryBuilder : GeneratedMessageBuilder {
    private var builderResult:Services.Registry.Responses.Glossary

    required override public init () {
       builderResult = Services.Registry.Responses.Glossary()
       super.init()
    }
    override public var internalGetResult:GeneratedMessage {
         get {
            return builderResult
         }
    }
    public override func clear() -> Services.Registry.Responses.GlossaryBuilder {
      builderResult = Services.Registry.Responses.Glossary()
      return self
    }
    public override func clone() -> Services.Registry.Responses.GlossaryBuilder {
      return Services.Registry.Responses.Glossary.builderWithPrototype(builderResult)
    }
    public override func build() -> Services.Registry.Responses.Glossary {
         checkInitialized()
         return buildPartial()
    }
    public func buildPartial() -> Services.Registry.Responses.Glossary {
      var returnMe:Services.Registry.Responses.Glossary = builderResult
      return returnMe
    }
    public func mergeFrom(other:Services.Registry.Responses.Glossary) -> Services.Registry.Responses.GlossaryBuilder {
      if (other == Services.Registry.Responses.Glossary()) {
       return self
      }
      mergeUnknownFields(other.unknownFields)
      return self
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream) ->Services.Registry.Responses.GlossaryBuilder {
         return mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Responses.GlossaryBuilder {
      var unknownFieldsBuilder:UnknownFieldSetBuilder = UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
      while (true) {
        var tag = input.readTag()
        switch tag {
        case 0: 
          self.unknownFields = unknownFieldsBuilder.build()
          return self

        default:
          if (!parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag)) {
             unknownFields = unknownFieldsBuilder.build()
             return self
          }
        }
      }
    }
  }

  final public class Notification : GeneratedMessage, GeneratedMessageProtocol {
    override public subscript(key: String) -> Any? {
           switch key {
           default: return nil
           }
    }

    public class func registerDevice() -> ConcreateExtensionField {
         return ServicesRegistryResponsesNotificationregisterDevice
    }
    public class func getPreferences() -> ConcreateExtensionField {
         return ServicesRegistryResponsesNotificationgetPreferences
    }
    public class func updatePreference() -> ConcreateExtensionField {
         return ServicesRegistryResponsesNotificationupdatePreference
    }
    public class func sendNotification() -> ConcreateExtensionField {
         return ServicesRegistryResponsesNotificationsendNotification
    }
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) {
      unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseFromData(data:NSData) -> Services.Registry.Responses.Notification {
      return Services.Registry.Responses.Notification.builder().mergeFromData(data, extensionRegistry:Services.Registry.Responses.ResponsesRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) -> Services.Registry.Responses.Notification {
      return Services.Registry.Responses.Notification.builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) -> Services.Registry.Responses.Notification {
      return Services.Registry.Responses.Notification.builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) ->Services.Registry.Responses.Notification {
      return Services.Registry.Responses.Notification.builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) -> Services.Registry.Responses.Notification {
      return Services.Registry.Responses.Notification.builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Responses.Notification {
      return Services.Registry.Responses.Notification.builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func builder() -> Services.Registry.Responses.NotificationBuilder {
      return Services.Registry.Responses.Notification.classBuilder() as! Services.Registry.Responses.NotificationBuilder
    }
    public func builder() -> Services.Registry.Responses.NotificationBuilder {
      return classBuilder() as! Services.Registry.Responses.NotificationBuilder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Services.Registry.Responses.NotificationBuilder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Services.Registry.Responses.Notification.builder()
    }
    public func toBuilder() -> Services.Registry.Responses.NotificationBuilder {
      return Services.Registry.Responses.Notification.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Services.Registry.Responses.Notification) -> Services.Registry.Responses.NotificationBuilder {
      return Services.Registry.Responses.Notification.builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) {
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Services.Registry.Responses.Notification"
    }
    override public func className() -> String {
        return "Services.Registry.Responses.Notification"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Services.Registry.Responses.Notification.self
    }
    //Meta information declaration end

  }

  final public class NotificationBuilder : GeneratedMessageBuilder {
    private var builderResult:Services.Registry.Responses.Notification

    required override public init () {
       builderResult = Services.Registry.Responses.Notification()
       super.init()
    }
    override public var internalGetResult:GeneratedMessage {
         get {
            return builderResult
         }
    }
    public override func clear() -> Services.Registry.Responses.NotificationBuilder {
      builderResult = Services.Registry.Responses.Notification()
      return self
    }
    public override func clone() -> Services.Registry.Responses.NotificationBuilder {
      return Services.Registry.Responses.Notification.builderWithPrototype(builderResult)
    }
    public override func build() -> Services.Registry.Responses.Notification {
         checkInitialized()
         return buildPartial()
    }
    public func buildPartial() -> Services.Registry.Responses.Notification {
      var returnMe:Services.Registry.Responses.Notification = builderResult
      return returnMe
    }
    public func mergeFrom(other:Services.Registry.Responses.Notification) -> Services.Registry.Responses.NotificationBuilder {
      if (other == Services.Registry.Responses.Notification()) {
       return self
      }
      mergeUnknownFields(other.unknownFields)
      return self
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream) ->Services.Registry.Responses.NotificationBuilder {
         return mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Responses.NotificationBuilder {
      var unknownFieldsBuilder:UnknownFieldSetBuilder = UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
      while (true) {
        var tag = input.readTag()
        switch tag {
        case 0: 
          self.unknownFields = unknownFieldsBuilder.build()
          return self

        default:
          if (!parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag)) {
             unknownFields = unknownFieldsBuilder.build()
             return self
          }
        }
      }
    }
  }

}

// @@protoc_insertion_point(global_scope)
