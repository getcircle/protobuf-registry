// Generated by the protocol buffer compiler.  DO NOT EDIT!

import Foundation
import ProtocolBuffers


internal extension Services.Registry{ internal struct Responses { }}

internal func == (lhs: Services.Registry.Responses.OrganizationService, rhs: Services.Registry.Responses.OrganizationService) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  return (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
}

internal func == (lhs: Services.Registry.Responses.ProfileService, rhs: Services.Registry.Responses.ProfileService) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  return (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
}

internal var ServicesRegistryResponsesOrganizationServicecreateOrganizationV1:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesOrganizationServicecreateOrganizationV1Static
   }
}
internal var ServicesRegistryResponsesOrganizationServicegetOrganizationV1:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesOrganizationServicegetOrganizationV1Static
   }
}
internal var ServicesRegistryResponsesProfileServicegetExtendedProfileV1:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesProfileServicegetExtendedProfileV1Static
   }
}
internal extension Services.Registry.Responses {
  internal struct ResponsesRoot {
    internal static var sharedInstance : ResponsesRoot {
     struct Static {
         static let instance : ResponsesRoot = ResponsesRoot()
     }
     return Static.instance
    }
    var ServicesRegistryResponsesOrganizationServicecreateOrganizationV1Static:ConcreateExtensionField
    var ServicesRegistryResponsesOrganizationServicegetOrganizationV1Static:ConcreateExtensionField
    var ServicesRegistryResponsesProfileServicegetExtendedProfileV1Static:ConcreateExtensionField
    internal var extensionRegistry:ExtensionRegistry

    init() {
      ServicesRegistryResponsesOrganizationServicecreateOrganizationV1Static = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 200, defaultValue:Services.Organization.Actions.CreateOrganization.ResponseV1(), messageOrGroupClass:Services.Organization.Actions.CreateOrganization.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesOrganizationServicegetOrganizationV1Static = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 201, defaultValue:Services.Organization.Actions.GetOrganization.ResponseV1(), messageOrGroupClass:Services.Organization.Actions.GetOrganization.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesProfileServicegetExtendedProfileV1Static = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 300, defaultValue:Services.Profile.Actions.GetExtendedProfile.ResponseV1(), messageOrGroupClass:Services.Profile.Actions.GetExtendedProfile.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      extensionRegistry = ExtensionRegistry()
      registerAllExtensions(extensionRegistry)
      Soa.SoaRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.CreateOrganization.CreateOrganizationRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.GetOrganization.GetOrganizationRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.GetExtendedProfile.GetExtendedProfileRoot.sharedInstance.registerAllExtensions(extensionRegistry)
    }
    internal func registerAllExtensions(registry:ExtensionRegistry) {
      registry.addExtension(ServicesRegistryResponsesOrganizationServicecreateOrganizationV1Static)
      registry.addExtension(ServicesRegistryResponsesOrganizationServicegetOrganizationV1Static)
      registry.addExtension(ServicesRegistryResponsesProfileServicegetExtendedProfileV1Static)
    }
  }

  final internal class OrganizationService : GeneratedMessage, GeneratedMessageProtocol {
    internal class func createOrganizationV1() -> ConcreateExtensionField {
         return ServicesRegistryResponsesOrganizationServicecreateOrganizationV1
    }
    internal class func getOrganizationV1() -> ConcreateExtensionField {
         return ServicesRegistryResponsesOrganizationServicegetOrganizationV1
    }
    required internal init() {
         super.init()
    }
    override internal func isInitialized() -> Bool {
     return true
    }
    override internal func writeToCodedOutputStream(output:CodedOutputStream) {
      unknownFields.writeToCodedOutputStream(output)
    }
    override internal func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    internal class func parseFromData(data:NSData) -> Services.Registry.Responses.OrganizationService {
      return Services.Registry.Responses.OrganizationService.builder().mergeFromData(data, extensionRegistry:Services.Registry.Responses.ResponsesRoot.sharedInstance.extensionRegistry).build()
    }
    internal class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) -> Services.Registry.Responses.OrganizationService {
      return Services.Registry.Responses.OrganizationService.builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromInputStream(input:NSInputStream) -> Services.Registry.Responses.OrganizationService {
      return Services.Registry.Responses.OrganizationService.builder().mergeFromInputStream(input).build()
    }
    internal class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) ->Services.Registry.Responses.OrganizationService {
      return Services.Registry.Responses.OrganizationService.builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream) -> Services.Registry.Responses.OrganizationService {
      return Services.Registry.Responses.OrganizationService.builder().mergeFromCodedInputStream(input).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Responses.OrganizationService {
      return Services.Registry.Responses.OrganizationService.builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func builder() -> Services.Registry.Responses.OrganizationServiceBuilder {
      return Services.Registry.Responses.OrganizationService.classBuilder() as! Services.Registry.Responses.OrganizationServiceBuilder
    }
    internal func builder() -> Services.Registry.Responses.OrganizationServiceBuilder {
      return classBuilder() as! Services.Registry.Responses.OrganizationServiceBuilder
    }
    internal override class func classBuilder() -> MessageBuilder {
      return Services.Registry.Responses.OrganizationServiceBuilder()
    }
    internal override func classBuilder() -> MessageBuilder {
      return Services.Registry.Responses.OrganizationService.builder()
    }
    internal func toBuilder() -> Services.Registry.Responses.OrganizationServiceBuilder {
      return Services.Registry.Responses.OrganizationService.builderWithPrototype(self)
    }
    internal class func builderWithPrototype(prototype:Services.Registry.Responses.OrganizationService) -> Services.Registry.Responses.OrganizationServiceBuilder {
      return Services.Registry.Responses.OrganizationService.builder().mergeFrom(prototype)
    }
    override internal func writeDescriptionTo(inout output:String, indent:String) {
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override internal var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override internal class func className() -> String {
        return "Services.Registry.Responses.OrganizationService"
    }
    override internal func className() -> String {
        return "Services.Registry.Responses.OrganizationService"
    }
    override internal func classMetaType() -> GeneratedMessage.Type {
        return Services.Registry.Responses.OrganizationService.self
    }
    //Meta information declaration end

  }

  final internal class OrganizationServiceBuilder : GeneratedMessageBuilder {
    private var builderResult:Services.Registry.Responses.OrganizationService

    required override internal init () {
       builderResult = Services.Registry.Responses.OrganizationService()
       super.init()
    }
    override internal var internalGetResult:GeneratedMessage {
         get {
            return builderResult
         }
    }
    internal override func clear() -> Services.Registry.Responses.OrganizationServiceBuilder {
      builderResult = Services.Registry.Responses.OrganizationService()
      return self
    }
    internal override func clone() -> Services.Registry.Responses.OrganizationServiceBuilder {
      return Services.Registry.Responses.OrganizationService.builderWithPrototype(builderResult)
    }
    internal override func build() -> Services.Registry.Responses.OrganizationService {
         checkInitialized()
         return buildPartial()
    }
    internal func buildPartial() -> Services.Registry.Responses.OrganizationService {
      var returnMe:Services.Registry.Responses.OrganizationService = builderResult
      return returnMe
    }
    internal func mergeFrom(other:Services.Registry.Responses.OrganizationService) -> Services.Registry.Responses.OrganizationServiceBuilder {
      if (other == Services.Registry.Responses.OrganizationService()) {
       return self
      }
      mergeUnknownFields(other.unknownFields)
      return self
    }
    internal override func mergeFromCodedInputStream(input:CodedInputStream) ->Services.Registry.Responses.OrganizationServiceBuilder {
         return mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
    }
    internal override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Responses.OrganizationServiceBuilder {
      var unknownFieldsBuilder:UnknownFieldSetBuilder = UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
      while (true) {
        var tag = input.readTag()
        switch tag {
        case 0: 
          self.unknownFields = unknownFieldsBuilder.build()
          return self

        default:
          if (!parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag)) {
             unknownFields = unknownFieldsBuilder.build()
             return self
          }
        }
      }
    }
  }

  final internal class ProfileService : GeneratedMessage, GeneratedMessageProtocol {
    internal class func getExtendedProfileV1() -> ConcreateExtensionField {
         return ServicesRegistryResponsesProfileServicegetExtendedProfileV1
    }
    required internal init() {
         super.init()
    }
    override internal func isInitialized() -> Bool {
     return true
    }
    override internal func writeToCodedOutputStream(output:CodedOutputStream) {
      unknownFields.writeToCodedOutputStream(output)
    }
    override internal func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    internal class func parseFromData(data:NSData) -> Services.Registry.Responses.ProfileService {
      return Services.Registry.Responses.ProfileService.builder().mergeFromData(data, extensionRegistry:Services.Registry.Responses.ResponsesRoot.sharedInstance.extensionRegistry).build()
    }
    internal class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) -> Services.Registry.Responses.ProfileService {
      return Services.Registry.Responses.ProfileService.builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromInputStream(input:NSInputStream) -> Services.Registry.Responses.ProfileService {
      return Services.Registry.Responses.ProfileService.builder().mergeFromInputStream(input).build()
    }
    internal class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) ->Services.Registry.Responses.ProfileService {
      return Services.Registry.Responses.ProfileService.builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream) -> Services.Registry.Responses.ProfileService {
      return Services.Registry.Responses.ProfileService.builder().mergeFromCodedInputStream(input).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Responses.ProfileService {
      return Services.Registry.Responses.ProfileService.builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func builder() -> Services.Registry.Responses.ProfileServiceBuilder {
      return Services.Registry.Responses.ProfileService.classBuilder() as! Services.Registry.Responses.ProfileServiceBuilder
    }
    internal func builder() -> Services.Registry.Responses.ProfileServiceBuilder {
      return classBuilder() as! Services.Registry.Responses.ProfileServiceBuilder
    }
    internal override class func classBuilder() -> MessageBuilder {
      return Services.Registry.Responses.ProfileServiceBuilder()
    }
    internal override func classBuilder() -> MessageBuilder {
      return Services.Registry.Responses.ProfileService.builder()
    }
    internal func toBuilder() -> Services.Registry.Responses.ProfileServiceBuilder {
      return Services.Registry.Responses.ProfileService.builderWithPrototype(self)
    }
    internal class func builderWithPrototype(prototype:Services.Registry.Responses.ProfileService) -> Services.Registry.Responses.ProfileServiceBuilder {
      return Services.Registry.Responses.ProfileService.builder().mergeFrom(prototype)
    }
    override internal func writeDescriptionTo(inout output:String, indent:String) {
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override internal var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override internal class func className() -> String {
        return "Services.Registry.Responses.ProfileService"
    }
    override internal func className() -> String {
        return "Services.Registry.Responses.ProfileService"
    }
    override internal func classMetaType() -> GeneratedMessage.Type {
        return Services.Registry.Responses.ProfileService.self
    }
    //Meta information declaration end

  }

  final internal class ProfileServiceBuilder : GeneratedMessageBuilder {
    private var builderResult:Services.Registry.Responses.ProfileService

    required override internal init () {
       builderResult = Services.Registry.Responses.ProfileService()
       super.init()
    }
    override internal var internalGetResult:GeneratedMessage {
         get {
            return builderResult
         }
    }
    internal override func clear() -> Services.Registry.Responses.ProfileServiceBuilder {
      builderResult = Services.Registry.Responses.ProfileService()
      return self
    }
    internal override func clone() -> Services.Registry.Responses.ProfileServiceBuilder {
      return Services.Registry.Responses.ProfileService.builderWithPrototype(builderResult)
    }
    internal override func build() -> Services.Registry.Responses.ProfileService {
         checkInitialized()
         return buildPartial()
    }
    internal func buildPartial() -> Services.Registry.Responses.ProfileService {
      var returnMe:Services.Registry.Responses.ProfileService = builderResult
      return returnMe
    }
    internal func mergeFrom(other:Services.Registry.Responses.ProfileService) -> Services.Registry.Responses.ProfileServiceBuilder {
      if (other == Services.Registry.Responses.ProfileService()) {
       return self
      }
      mergeUnknownFields(other.unknownFields)
      return self
    }
    internal override func mergeFromCodedInputStream(input:CodedInputStream) ->Services.Registry.Responses.ProfileServiceBuilder {
         return mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
    }
    internal override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Responses.ProfileServiceBuilder {
      var unknownFieldsBuilder:UnknownFieldSetBuilder = UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
      while (true) {
        var tag = input.readTag()
        switch tag {
        case 0: 
          self.unknownFields = unknownFieldsBuilder.build()
          return self

        default:
          if (!parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag)) {
             unknownFields = unknownFieldsBuilder.build()
             return self
          }
        }
      }
    }
  }

}

// @@protoc_insertion_point(global_scope)
