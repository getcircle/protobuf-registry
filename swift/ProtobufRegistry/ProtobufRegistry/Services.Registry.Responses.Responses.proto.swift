// Generated by the protocol buffer compiler.  DO NOT EDIT!
// Source file responses.proto

import Foundation

public extension Services.Registry{ public struct Responses { }}

public func == (lhs: Services.Registry.Responses.User, rhs: Services.Registry.Responses.User) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

public func == (lhs: Services.Registry.Responses.Organization, rhs: Services.Registry.Responses.Organization) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

public func == (lhs: Services.Registry.Responses.Profile, rhs: Services.Registry.Responses.Profile) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

public func == (lhs: Services.Registry.Responses.Search, rhs: Services.Registry.Responses.Search) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

public func == (lhs: Services.Registry.Responses.Media, rhs: Services.Registry.Responses.Media) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

public func == (lhs: Services.Registry.Responses.Notification, rhs: Services.Registry.Responses.Notification) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

public func == (lhs: Services.Registry.Responses.History, rhs: Services.Registry.Responses.History) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

public func == (lhs: Services.Registry.Responses.Payment, rhs: Services.Registry.Responses.Payment) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

public func == (lhs: Services.Registry.Responses.Post, rhs: Services.Registry.Responses.Post) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

public func == (lhs: Services.Registry.Responses.Feature, rhs: Services.Registry.Responses.Feature) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

public func == (lhs: Services.Registry.Responses.File, rhs: Services.Registry.Responses.File) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

public func == (lhs: Services.Registry.Responses.Team, rhs: Services.Registry.Responses.Team) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

public var ServicesRegistryResponsesUsercreateUser:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesUsercreateUserStatic
   }
}
public var ServicesRegistryResponsesUserauthenticateUser:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesUserauthenticateUserStatic
   }
}
public var ServicesRegistryResponsesUsergetUser:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesUsergetUserStatic
   }
}
public var ServicesRegistryResponsesUsercompleteAuthorization:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesUsercompleteAuthorizationStatic
   }
}
public var ServicesRegistryResponsesUsergetIdentities:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesUsergetIdentitiesStatic
   }
}
public var ServicesRegistryResponsesUserbulkCreateUsers:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesUserbulkCreateUsersStatic
   }
}
public var ServicesRegistryResponsesUserrecordDevice:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesUserrecordDeviceStatic
   }
}
public var ServicesRegistryResponsesUserrequestAccess:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesUserrequestAccessStatic
   }
}
public var ServicesRegistryResponsesUserdeleteIdentity:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesUserdeleteIdentityStatic
   }
}
public var ServicesRegistryResponsesUserlogout:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesUserlogoutStatic
   }
}
public var ServicesRegistryResponsesUsergetAuthenticationInstructions:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesUsergetAuthenticationInstructionsStatic
   }
}
public var ServicesRegistryResponsesUsergetActiveDevices:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesUsergetActiveDevicesStatic
   }
}
public var ServicesRegistryResponsesUserbulkUpdateUsers:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesUserbulkUpdateUsersStatic
   }
}
public var ServicesRegistryResponsesOrganizationcreateOrganization:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesOrganizationcreateOrganizationStatic
   }
}
public var ServicesRegistryResponsesOrganizationgetOrganization:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesOrganizationgetOrganizationStatic
   }
}
public var ServicesRegistryResponsesOrganizationgetTeam:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesOrganizationgetTeamStatic
   }
}
public var ServicesRegistryResponsesOrganizationcreateLocation:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesOrganizationcreateLocationStatic
   }
}
public var ServicesRegistryResponsesOrganizationupdateLocation:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesOrganizationupdateLocationStatic
   }
}
public var ServicesRegistryResponsesOrganizationgetLocations:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesOrganizationgetLocationsStatic
   }
}
public var ServicesRegistryResponsesOrganizationgetLocation:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesOrganizationgetLocationStatic
   }
}
public var ServicesRegistryResponsesOrganizationenableIntegration:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesOrganizationenableIntegrationStatic
   }
}
public var ServicesRegistryResponsesOrganizationgetIntegration:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesOrganizationgetIntegrationStatic
   }
}
public var ServicesRegistryResponsesOrganizationdisableIntegration:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesOrganizationdisableIntegrationStatic
   }
}
public var ServicesRegistryResponsesOrganizationupdateTeam:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesOrganizationupdateTeamStatic
   }
}
public var ServicesRegistryResponsesOrganizationaddDirectReports:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesOrganizationaddDirectReportsStatic
   }
}
public var ServicesRegistryResponsesOrganizationgetLocationMembers:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesOrganizationgetLocationMembersStatic
   }
}
public var ServicesRegistryResponsesOrganizationgetProfileReportingDetails:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesOrganizationgetProfileReportingDetailsStatic
   }
}
public var ServicesRegistryResponsesOrganizationgetTeamReportingDetails:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesOrganizationgetTeamReportingDetailsStatic
   }
}
public var ServicesRegistryResponsesOrganizationsetManager:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesOrganizationsetManagerStatic
   }
}
public var ServicesRegistryResponsesOrganizationaddLocationMembers:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesOrganizationaddLocationMembersStatic
   }
}
public var ServicesRegistryResponsesOrganizationgetTeams:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesOrganizationgetTeamsStatic
   }
}
public var ServicesRegistryResponsesOrganizationgetDescendants:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesOrganizationgetDescendantsStatic
   }
}
public var ServicesRegistryResponsesOrganizationgetSso:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesOrganizationgetSsoStatic
   }
}
public var ServicesRegistryResponsesOrganizationgetTeamsForProfileIds:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesOrganizationgetTeamsForProfileIdsStatic
   }
}
public var ServicesRegistryResponsesProfilecreateProfile:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesProfilecreateProfileStatic
   }
}
public var ServicesRegistryResponsesProfilegetExtendedProfile:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesProfilegetExtendedProfileStatic
   }
}
public var ServicesRegistryResponsesProfilegetProfile:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesProfilegetProfileStatic
   }
}
public var ServicesRegistryResponsesProfileupdateProfile:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesProfileupdateProfileStatic
   }
}
public var ServicesRegistryResponsesProfilegetProfiles:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesProfilegetProfilesStatic
   }
}
public var ServicesRegistryResponsesProfilebulkCreateProfiles:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesProfilebulkCreateProfilesStatic
   }
}
public var ServicesRegistryResponsesProfilebulkUpdateProfiles:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesProfilebulkUpdateProfilesStatic
   }
}
public var ServicesRegistryResponsesProfileprofileExists:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesProfileprofileExistsStatic
   }
}
public var ServicesRegistryResponsesSearchsearch:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesSearchsearchStatic
   }
}
public var ServicesRegistryResponsesSearchsearchV2:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesSearchsearchV2Static
   }
}
public var ServicesRegistryResponsesSearchupdateEntities:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesSearchupdateEntitiesStatic
   }
}
public var ServicesRegistryResponsesSearchdeleteEntities:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesSearchdeleteEntitiesStatic
   }
}
public var ServicesRegistryResponsesSearchcreateIndex:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesSearchcreateIndexStatic
   }
}
public var ServicesRegistryResponsesSearchtrackRecent:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesSearchtrackRecentStatic
   }
}
public var ServicesRegistryResponsesSearchgetRecents:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesSearchgetRecentsStatic
   }
}
public var ServicesRegistryResponsesSearchdeleteRecent:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesSearchdeleteRecentStatic
   }
}
public var ServicesRegistryResponsesMediastartImageUpload:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesMediastartImageUploadStatic
   }
}
public var ServicesRegistryResponsesMediacompleteImageUpload:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesMediacompleteImageUploadStatic
   }
}
public var ServicesRegistryResponsesNotificationregisterDevice:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesNotificationregisterDeviceStatic
   }
}
public var ServicesRegistryResponsesNotificationgetPreferences:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesNotificationgetPreferencesStatic
   }
}
public var ServicesRegistryResponsesNotificationupdatePreference:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesNotificationupdatePreferenceStatic
   }
}
public var ServicesRegistryResponsesNotificationsendNotification:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesNotificationsendNotificationStatic
   }
}
public var ServicesRegistryResponsesNotificationnoSearchResults:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesNotificationnoSearchResultsStatic
   }
}
public var ServicesRegistryResponsesHistoryrecordAction:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesHistoryrecordActionStatic
   }
}
public var ServicesRegistryResponsesPaymentstoreToken:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesPaymentstoreTokenStatic
   }
}
public var ServicesRegistryResponsesPostcreatePost:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesPostcreatePostStatic
   }
}
public var ServicesRegistryResponsesPostupdatePost:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesPostupdatePostStatic
   }
}
public var ServicesRegistryResponsesPostgetPost:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesPostgetPostStatic
   }
}
public var ServicesRegistryResponsesPostgetPosts:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesPostgetPostsStatic
   }
}
public var ServicesRegistryResponsesPostdeletePost:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesPostdeletePostStatic
   }
}
public var ServicesRegistryResponsesFeaturegetFlags:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesFeaturegetFlagsStatic
   }
}
public var ServicesRegistryResponsesFilestartUpload:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesFilestartUploadStatic
   }
}
public var ServicesRegistryResponsesFilecompleteUpload:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesFilecompleteUploadStatic
   }
}
public var ServicesRegistryResponsesFiledelete:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesFiledeleteStatic
   }
}
public var ServicesRegistryResponsesFilegetFiles:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesFilegetFilesStatic
   }
}
public var ServicesRegistryResponsesFileupload:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesFileuploadStatic
   }
}
public var ServicesRegistryResponsesTeamaddMembers:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesTeamaddMembersStatic
   }
}
public var ServicesRegistryResponsesTeamcreateTeam:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesTeamcreateTeamStatic
   }
}
public var ServicesRegistryResponsesTeamgetTeam:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesTeamgetTeamStatic
   }
}
public var ServicesRegistryResponsesTeamgetMembers:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesTeamgetMembersStatic
   }
}
public var ServicesRegistryResponsesTeamjoinTeam:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesTeamjoinTeamStatic
   }
}
public var ServicesRegistryResponsesTeamleaveTeam:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesTeamleaveTeamStatic
   }
}
public var ServicesRegistryResponsesTeamremoveMembers:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesTeamremoveMembersStatic
   }
}
public var ServicesRegistryResponsesTeamupdateMembers:ConcreateExtensionField {
   get {
       return Services.Registry.Responses.ResponsesRoot.sharedInstance.ServicesRegistryResponsesTeamupdateMembersStatic
   }
}
public extension Services.Registry.Responses {
  public struct ResponsesRoot {
    public static var sharedInstance : ResponsesRoot {
     struct Static {
         static let instance : ResponsesRoot = ResponsesRoot()
     }
     return Static.instance
    }
    var ServicesRegistryResponsesUsercreateUserStatic:ConcreateExtensionField
    var ServicesRegistryResponsesUserauthenticateUserStatic:ConcreateExtensionField
    var ServicesRegistryResponsesUsergetUserStatic:ConcreateExtensionField
    var ServicesRegistryResponsesUsercompleteAuthorizationStatic:ConcreateExtensionField
    var ServicesRegistryResponsesUsergetIdentitiesStatic:ConcreateExtensionField
    var ServicesRegistryResponsesUserbulkCreateUsersStatic:ConcreateExtensionField
    var ServicesRegistryResponsesUserrecordDeviceStatic:ConcreateExtensionField
    var ServicesRegistryResponsesUserrequestAccessStatic:ConcreateExtensionField
    var ServicesRegistryResponsesUserdeleteIdentityStatic:ConcreateExtensionField
    var ServicesRegistryResponsesUserlogoutStatic:ConcreateExtensionField
    var ServicesRegistryResponsesUsergetAuthenticationInstructionsStatic:ConcreateExtensionField
    var ServicesRegistryResponsesUsergetActiveDevicesStatic:ConcreateExtensionField
    var ServicesRegistryResponsesUserbulkUpdateUsersStatic:ConcreateExtensionField
    var ServicesRegistryResponsesOrganizationcreateOrganizationStatic:ConcreateExtensionField
    var ServicesRegistryResponsesOrganizationgetOrganizationStatic:ConcreateExtensionField
    var ServicesRegistryResponsesOrganizationgetTeamStatic:ConcreateExtensionField
    var ServicesRegistryResponsesOrganizationcreateLocationStatic:ConcreateExtensionField
    var ServicesRegistryResponsesOrganizationupdateLocationStatic:ConcreateExtensionField
    var ServicesRegistryResponsesOrganizationgetLocationsStatic:ConcreateExtensionField
    var ServicesRegistryResponsesOrganizationgetLocationStatic:ConcreateExtensionField
    var ServicesRegistryResponsesOrganizationenableIntegrationStatic:ConcreateExtensionField
    var ServicesRegistryResponsesOrganizationgetIntegrationStatic:ConcreateExtensionField
    var ServicesRegistryResponsesOrganizationdisableIntegrationStatic:ConcreateExtensionField
    var ServicesRegistryResponsesOrganizationupdateTeamStatic:ConcreateExtensionField
    var ServicesRegistryResponsesOrganizationaddDirectReportsStatic:ConcreateExtensionField
    var ServicesRegistryResponsesOrganizationgetLocationMembersStatic:ConcreateExtensionField
    var ServicesRegistryResponsesOrganizationgetProfileReportingDetailsStatic:ConcreateExtensionField
    var ServicesRegistryResponsesOrganizationgetTeamReportingDetailsStatic:ConcreateExtensionField
    var ServicesRegistryResponsesOrganizationsetManagerStatic:ConcreateExtensionField
    var ServicesRegistryResponsesOrganizationaddLocationMembersStatic:ConcreateExtensionField
    var ServicesRegistryResponsesOrganizationgetTeamsStatic:ConcreateExtensionField
    var ServicesRegistryResponsesOrganizationgetDescendantsStatic:ConcreateExtensionField
    var ServicesRegistryResponsesOrganizationgetSsoStatic:ConcreateExtensionField
    var ServicesRegistryResponsesOrganizationgetTeamsForProfileIdsStatic:ConcreateExtensionField
    var ServicesRegistryResponsesProfilecreateProfileStatic:ConcreateExtensionField
    var ServicesRegistryResponsesProfilegetExtendedProfileStatic:ConcreateExtensionField
    var ServicesRegistryResponsesProfilegetProfileStatic:ConcreateExtensionField
    var ServicesRegistryResponsesProfileupdateProfileStatic:ConcreateExtensionField
    var ServicesRegistryResponsesProfilegetProfilesStatic:ConcreateExtensionField
    var ServicesRegistryResponsesProfilebulkCreateProfilesStatic:ConcreateExtensionField
    var ServicesRegistryResponsesProfilebulkUpdateProfilesStatic:ConcreateExtensionField
    var ServicesRegistryResponsesProfileprofileExistsStatic:ConcreateExtensionField
    var ServicesRegistryResponsesSearchsearchStatic:ConcreateExtensionField
    var ServicesRegistryResponsesSearchsearchV2Static:ConcreateExtensionField
    var ServicesRegistryResponsesSearchupdateEntitiesStatic:ConcreateExtensionField
    var ServicesRegistryResponsesSearchdeleteEntitiesStatic:ConcreateExtensionField
    var ServicesRegistryResponsesSearchcreateIndexStatic:ConcreateExtensionField
    var ServicesRegistryResponsesSearchtrackRecentStatic:ConcreateExtensionField
    var ServicesRegistryResponsesSearchgetRecentsStatic:ConcreateExtensionField
    var ServicesRegistryResponsesSearchdeleteRecentStatic:ConcreateExtensionField
    var ServicesRegistryResponsesMediastartImageUploadStatic:ConcreateExtensionField
    var ServicesRegistryResponsesMediacompleteImageUploadStatic:ConcreateExtensionField
    var ServicesRegistryResponsesNotificationregisterDeviceStatic:ConcreateExtensionField
    var ServicesRegistryResponsesNotificationgetPreferencesStatic:ConcreateExtensionField
    var ServicesRegistryResponsesNotificationupdatePreferenceStatic:ConcreateExtensionField
    var ServicesRegistryResponsesNotificationsendNotificationStatic:ConcreateExtensionField
    var ServicesRegistryResponsesNotificationnoSearchResultsStatic:ConcreateExtensionField
    var ServicesRegistryResponsesHistoryrecordActionStatic:ConcreateExtensionField
    var ServicesRegistryResponsesPaymentstoreTokenStatic:ConcreateExtensionField
    var ServicesRegistryResponsesPostcreatePostStatic:ConcreateExtensionField
    var ServicesRegistryResponsesPostupdatePostStatic:ConcreateExtensionField
    var ServicesRegistryResponsesPostgetPostStatic:ConcreateExtensionField
    var ServicesRegistryResponsesPostgetPostsStatic:ConcreateExtensionField
    var ServicesRegistryResponsesPostdeletePostStatic:ConcreateExtensionField
    var ServicesRegistryResponsesFeaturegetFlagsStatic:ConcreateExtensionField
    var ServicesRegistryResponsesFilestartUploadStatic:ConcreateExtensionField
    var ServicesRegistryResponsesFilecompleteUploadStatic:ConcreateExtensionField
    var ServicesRegistryResponsesFiledeleteStatic:ConcreateExtensionField
    var ServicesRegistryResponsesFilegetFilesStatic:ConcreateExtensionField
    var ServicesRegistryResponsesFileuploadStatic:ConcreateExtensionField
    var ServicesRegistryResponsesTeamaddMembersStatic:ConcreateExtensionField
    var ServicesRegistryResponsesTeamcreateTeamStatic:ConcreateExtensionField
    var ServicesRegistryResponsesTeamgetTeamStatic:ConcreateExtensionField
    var ServicesRegistryResponsesTeamgetMembersStatic:ConcreateExtensionField
    var ServicesRegistryResponsesTeamjoinTeamStatic:ConcreateExtensionField
    var ServicesRegistryResponsesTeamleaveTeamStatic:ConcreateExtensionField
    var ServicesRegistryResponsesTeamremoveMembersStatic:ConcreateExtensionField
    var ServicesRegistryResponsesTeamupdateMembersStatic:ConcreateExtensionField
    public var extensionRegistry:ExtensionRegistry

    init() {
      ServicesRegistryResponsesUsercreateUserStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 100, defaultValue:Services.User.Actions.CreateUser.ResponseV1(), messageOrGroupClass:Services.User.Actions.CreateUser.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesUserauthenticateUserStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 102, defaultValue:Services.User.Actions.AuthenticateUser.ResponseV1(), messageOrGroupClass:Services.User.Actions.AuthenticateUser.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesUsergetUserStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 103, defaultValue:Services.User.Actions.GetUser.ResponseV1(), messageOrGroupClass:Services.User.Actions.GetUser.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesUsercompleteAuthorizationStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 108, defaultValue:Services.User.Actions.CompleteAuthorization.ResponseV1(), messageOrGroupClass:Services.User.Actions.CompleteAuthorization.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesUsergetIdentitiesStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 109, defaultValue:Services.User.Actions.GetIdentities.ResponseV1(), messageOrGroupClass:Services.User.Actions.GetIdentities.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesUserbulkCreateUsersStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 110, defaultValue:Services.User.Actions.BulkCreateUsers.ResponseV1(), messageOrGroupClass:Services.User.Actions.BulkCreateUsers.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesUserrecordDeviceStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 111, defaultValue:Services.User.Actions.RecordDevice.ResponseV1(), messageOrGroupClass:Services.User.Actions.RecordDevice.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesUserrequestAccessStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 112, defaultValue:Services.User.Actions.RequestAccess.ResponseV1(), messageOrGroupClass:Services.User.Actions.RequestAccess.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesUserdeleteIdentityStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 113, defaultValue:Services.User.Actions.DeleteIdentity.ResponseV1(), messageOrGroupClass:Services.User.Actions.DeleteIdentity.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesUserlogoutStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 114, defaultValue:Services.User.Actions.Logout.ResponseV1(), messageOrGroupClass:Services.User.Actions.Logout.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesUsergetAuthenticationInstructionsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 115, defaultValue:Services.User.Actions.GetAuthenticationInstructions.ResponseV1(), messageOrGroupClass:Services.User.Actions.GetAuthenticationInstructions.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesUsergetActiveDevicesStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 116, defaultValue:Services.User.Actions.GetActiveDevices.ResponseV1(), messageOrGroupClass:Services.User.Actions.GetActiveDevices.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesUserbulkUpdateUsersStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 118, defaultValue:Services.User.Actions.BulkUpdateUsers.RequestV1(), messageOrGroupClass:Services.User.Actions.BulkUpdateUsers.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesOrganizationcreateOrganizationStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 200, defaultValue:Services.Organization.Actions.CreateOrganization.ResponseV1(), messageOrGroupClass:Services.Organization.Actions.CreateOrganization.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesOrganizationgetOrganizationStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 201, defaultValue:Services.Organization.Actions.GetOrganization.ResponseV1(), messageOrGroupClass:Services.Organization.Actions.GetOrganization.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesOrganizationgetTeamStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 202, defaultValue:Services.Organization.Actions.GetTeam.ResponseV1(), messageOrGroupClass:Services.Organization.Actions.GetTeam.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesOrganizationcreateLocationStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 203, defaultValue:Services.Organization.Actions.CreateLocation.ResponseV1(), messageOrGroupClass:Services.Organization.Actions.CreateLocation.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesOrganizationupdateLocationStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 204, defaultValue:Services.Organization.Actions.UpdateLocation.ResponseV1(), messageOrGroupClass:Services.Organization.Actions.UpdateLocation.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesOrganizationgetLocationsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 205, defaultValue:Services.Organization.Actions.GetLocations.ResponseV1(), messageOrGroupClass:Services.Organization.Actions.GetLocations.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesOrganizationgetLocationStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 206, defaultValue:Services.Organization.Actions.GetLocation.ResponseV1(), messageOrGroupClass:Services.Organization.Actions.GetLocation.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesOrganizationenableIntegrationStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 209, defaultValue:Services.Organization.Actions.EnableIntegration.ResponseV1(), messageOrGroupClass:Services.Organization.Actions.EnableIntegration.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesOrganizationgetIntegrationStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 210, defaultValue:Services.Organization.Actions.GetIntegration.ResponseV1(), messageOrGroupClass:Services.Organization.Actions.GetIntegration.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesOrganizationdisableIntegrationStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 211, defaultValue:Services.Organization.Actions.DisableIntegration.ResponseV1(), messageOrGroupClass:Services.Organization.Actions.DisableIntegration.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesOrganizationupdateTeamStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 212, defaultValue:Services.Organization.Actions.UpdateTeam.ResponseV1(), messageOrGroupClass:Services.Organization.Actions.UpdateTeam.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesOrganizationaddDirectReportsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 213, defaultValue:Services.Organization.Actions.AddDirectReports.ResponseV1(), messageOrGroupClass:Services.Organization.Actions.AddDirectReports.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesOrganizationgetLocationMembersStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 214, defaultValue:Services.Organization.Actions.GetLocationMembers.ResponseV1(), messageOrGroupClass:Services.Organization.Actions.GetLocationMembers.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesOrganizationgetProfileReportingDetailsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 215, defaultValue:Services.Organization.Actions.GetProfileReportingDetails.ResponseV1(), messageOrGroupClass:Services.Organization.Actions.GetProfileReportingDetails.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesOrganizationgetTeamReportingDetailsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 216, defaultValue:Services.Organization.Actions.GetTeamReportingDetails.ResponseV1(), messageOrGroupClass:Services.Organization.Actions.GetTeamReportingDetails.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesOrganizationsetManagerStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 217, defaultValue:Services.Organization.Actions.SetManager.ResponseV1(), messageOrGroupClass:Services.Organization.Actions.SetManager.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesOrganizationaddLocationMembersStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 218, defaultValue:Services.Organization.Actions.AddLocationMembers.ResponseV1(), messageOrGroupClass:Services.Organization.Actions.AddLocationMembers.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesOrganizationgetTeamsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 219, defaultValue:Services.Organization.Actions.GetTeams.ResponseV1(), messageOrGroupClass:Services.Organization.Actions.GetTeams.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesOrganizationgetDescendantsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 220, defaultValue:Services.Organization.Actions.GetDescendants.ResponseV1(), messageOrGroupClass:Services.Organization.Actions.GetDescendants.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesOrganizationgetSsoStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 221, defaultValue:Services.Organization.Actions.GetSso.ResponseV1(), messageOrGroupClass:Services.Organization.Actions.GetSso.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesOrganizationgetTeamsForProfileIdsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 222, defaultValue:Services.Organization.Actions.GetTeamsForProfileIds.ResponseV1(), messageOrGroupClass:Services.Organization.Actions.GetTeamsForProfileIds.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesProfilecreateProfileStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 300, defaultValue:Services.Profile.Actions.CreateProfile.ResponseV1(), messageOrGroupClass:Services.Profile.Actions.CreateProfile.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesProfilegetExtendedProfileStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 301, defaultValue:Services.Profile.Actions.GetExtendedProfile.ResponseV1(), messageOrGroupClass:Services.Profile.Actions.GetExtendedProfile.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesProfilegetProfileStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 302, defaultValue:Services.Profile.Actions.GetProfile.ResponseV1(), messageOrGroupClass:Services.Profile.Actions.GetProfile.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesProfileupdateProfileStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 306, defaultValue:Services.Profile.Actions.UpdateProfile.ResponseV1(), messageOrGroupClass:Services.Profile.Actions.UpdateProfile.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesProfilegetProfilesStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 307, defaultValue:Services.Profile.Actions.GetProfiles.ResponseV1(), messageOrGroupClass:Services.Profile.Actions.GetProfiles.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesProfilebulkCreateProfilesStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 312, defaultValue:Services.Profile.Actions.BulkCreateProfiles.ResponseV1(), messageOrGroupClass:Services.Profile.Actions.BulkCreateProfiles.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesProfilebulkUpdateProfilesStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 313, defaultValue:Services.Profile.Actions.BulkUpdateProfiles.ResponseV1(), messageOrGroupClass:Services.Profile.Actions.BulkUpdateProfiles.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesProfileprofileExistsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 315, defaultValue:Services.Profile.Actions.ProfileExists.ResponseV1(), messageOrGroupClass:Services.Profile.Actions.ProfileExists.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesSearchsearchStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 400, defaultValue:Services.Search.Actions.Search.ResponseV1(), messageOrGroupClass:Services.Search.Actions.Search.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesSearchsearchV2Static = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 401, defaultValue:Services.Search.Actions.SearchV2.ResponseV1(), messageOrGroupClass:Services.Search.Actions.SearchV2.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesSearchupdateEntitiesStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 402, defaultValue:Services.Search.Actions.UpdateEntities.ResponseV1(), messageOrGroupClass:Services.Search.Actions.UpdateEntities.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesSearchdeleteEntitiesStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 403, defaultValue:Services.Search.Actions.DeleteEntities.ResponseV1(), messageOrGroupClass:Services.Search.Actions.DeleteEntities.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesSearchcreateIndexStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 404, defaultValue:Services.Search.Actions.CreateIndex.ResponseV1(), messageOrGroupClass:Services.Search.Actions.CreateIndex.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesSearchtrackRecentStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 405, defaultValue:Services.Search.Actions.TrackRecent.ResponseV1(), messageOrGroupClass:Services.Search.Actions.TrackRecent.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesSearchgetRecentsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 406, defaultValue:Services.Search.Actions.GetRecents.ResponseV1(), messageOrGroupClass:Services.Search.Actions.GetRecents.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesSearchdeleteRecentStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 407, defaultValue:Services.Search.Actions.DeleteRecent.ResponseV1(), messageOrGroupClass:Services.Search.Actions.DeleteRecent.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesMediastartImageUploadStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 600, defaultValue:Services.Media.Actions.StartImageUpload.ResponseV1(), messageOrGroupClass:Services.Media.Actions.StartImageUpload.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesMediacompleteImageUploadStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 601, defaultValue:Services.Media.Actions.CompleteImageUpload.ResponseV1(), messageOrGroupClass:Services.Media.Actions.CompleteImageUpload.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesNotificationregisterDeviceStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 1300, defaultValue:Services.Notification.Actions.RegisterDevice.ResponseV1(), messageOrGroupClass:Services.Notification.Actions.RegisterDevice.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesNotificationgetPreferencesStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 1301, defaultValue:Services.Notification.Actions.GetPreferences.ResponseV1(), messageOrGroupClass:Services.Notification.Actions.GetPreferences.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesNotificationupdatePreferenceStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 1302, defaultValue:Services.Notification.Actions.UpdatePreference.ResponseV1(), messageOrGroupClass:Services.Notification.Actions.UpdatePreference.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesNotificationsendNotificationStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 1303, defaultValue:Services.Notification.Actions.SendNotification.ResponseV1(), messageOrGroupClass:Services.Notification.Actions.SendNotification.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesNotificationnoSearchResultsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 1304, defaultValue:Services.Notification.Actions.NoSearchResults.ResponseV1(), messageOrGroupClass:Services.Notification.Actions.NoSearchResults.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesHistoryrecordActionStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 1400, defaultValue:Services.History.Actions.RecordAction.ResponseV1(), messageOrGroupClass:Services.History.Actions.RecordAction.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesPaymentstoreTokenStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 1500, defaultValue:Services.Payment.Actions.StoreToken.ResponseV1(), messageOrGroupClass:Services.Payment.Actions.StoreToken.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesPostcreatePostStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 1600, defaultValue:Services.Post.Actions.CreatePost.ResponseV1(), messageOrGroupClass:Services.Post.Actions.CreatePost.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesPostupdatePostStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 1601, defaultValue:Services.Post.Actions.UpdatePost.ResponseV1(), messageOrGroupClass:Services.Post.Actions.UpdatePost.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesPostgetPostStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 1602, defaultValue:Services.Post.Actions.GetPost.ResponseV1(), messageOrGroupClass:Services.Post.Actions.GetPost.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesPostgetPostsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 1603, defaultValue:Services.Post.Actions.GetPosts.ResponseV1(), messageOrGroupClass:Services.Post.Actions.GetPosts.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesPostdeletePostStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 1604, defaultValue:Services.Post.Actions.DeletePost.ResponseV1(), messageOrGroupClass:Services.Post.Actions.DeletePost.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesFeaturegetFlagsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 1700, defaultValue:Services.Feature.Actions.GetFlags.ResponseV1(), messageOrGroupClass:Services.Feature.Actions.GetFlags.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesFilestartUploadStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 1800, defaultValue:Services.File.Actions.StartUpload.ResponseV1(), messageOrGroupClass:Services.File.Actions.StartUpload.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesFilecompleteUploadStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 1801, defaultValue:Services.File.Actions.CompleteUpload.ResponseV1(), messageOrGroupClass:Services.File.Actions.CompleteUpload.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesFiledeleteStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 1802, defaultValue:Services.File.Actions.Delete.ResponseV1(), messageOrGroupClass:Services.File.Actions.Delete.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesFilegetFilesStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 1803, defaultValue:Services.File.Actions.GetFiles.ResponseV1(), messageOrGroupClass:Services.File.Actions.GetFiles.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesFileuploadStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 1804, defaultValue:Services.File.Actions.Upload.ResponseV1(), messageOrGroupClass:Services.File.Actions.Upload.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesTeamaddMembersStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 1900, defaultValue:Services.Team.Actions.AddMembers.ResponseV1(), messageOrGroupClass:Services.Team.Actions.AddMembers.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesTeamcreateTeamStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 1901, defaultValue:Services.Team.Actions.CreateTeam.ResponseV1(), messageOrGroupClass:Services.Team.Actions.CreateTeam.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesTeamgetTeamStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 1902, defaultValue:Services.Team.Actions.GetTeam.ResponseV1(), messageOrGroupClass:Services.Team.Actions.GetTeam.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesTeamgetMembersStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 1903, defaultValue:Services.Team.Actions.GetMembers.ResponseV1(), messageOrGroupClass:Services.Team.Actions.GetMembers.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesTeamjoinTeamStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 1904, defaultValue:Services.Team.Actions.JoinTeam.ResponseV1(), messageOrGroupClass:Services.Team.Actions.JoinTeam.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesTeamleaveTeamStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 1905, defaultValue:Services.Team.Actions.LeaveTeam.ResponseV1(), messageOrGroupClass:Services.Team.Actions.LeaveTeam.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesTeamremoveMembersStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 1906, defaultValue:Services.Team.Actions.RemoveMembers.ResponseV1(), messageOrGroupClass:Services.Team.Actions.RemoveMembers.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryResponsesTeamupdateMembersStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionResultV1.self, fieldNumber: 1907, defaultValue:Services.Team.Actions.UpdateMembers.ResponseV1(), messageOrGroupClass:Services.Team.Actions.UpdateMembers.ResponseV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      extensionRegistry = ExtensionRegistry()
      registerAllExtensions(extensionRegistry)
      Soa.SoaRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.CreateUser.CreateUserRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.AuthenticateUser.AuthenticateUserRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.GetUser.GetUserRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.CompleteAuthorization.CompleteAuthorizationRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.GetIdentities.GetIdentitiesRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.BulkCreateUsers.BulkCreateUsersRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.RecordDevice.RecordDeviceRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.RequestAccess.RequestAccessRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.DeleteIdentity.DeleteIdentityRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.Logout.LogoutRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.GetAuthenticationInstructions.GetAuthenticationInstructionsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.GetActiveDevices.GetActiveDevicesRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.BulkUpdateUsers.BulkUpdateUsersRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.CreateOrganization.CreateOrganizationRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.GetTeam.GetTeamRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.GetOrganization.GetOrganizationRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.CreateLocation.CreateLocationRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.UpdateLocation.UpdateLocationRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.GetLocations.GetLocationsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.GetLocation.GetLocationRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.EnableIntegration.EnableIntegrationRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.GetIntegration.GetIntegrationRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.DisableIntegration.DisableIntegrationRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.UpdateTeam.UpdateTeamRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.AddDirectReports.AddDirectReportsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.GetLocationMembers.GetLocationMembersRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.GetProfileReportingDetails.GetProfileReportingDetailsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.GetTeamReportingDetails.GetTeamReportingDetailsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.SetManager.SetManagerRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.AddLocationMembers.AddLocationMembersRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.GetTeams.GetTeamsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.GetDescendants.GetDescendantsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.GetSso.GetSsoRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.GetTeamsForProfileIds.GetTeamsForProfileIdsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.CreateProfile.CreateProfileRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.GetExtendedProfile.GetExtendedProfileRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.GetProfile.GetProfileRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.UpdateProfile.UpdateProfileRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.GetProfiles.GetProfilesRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.BulkCreateProfiles.BulkCreateProfilesRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.BulkUpdateProfiles.BulkUpdateProfilesRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.ProfileExists.ProfileExistsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Search.Actions.Search.SearchRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Search.Actions.SearchV2.SearchV2Root.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Search.Actions.UpdateEntities.UpdateEntitiesRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Search.Actions.DeleteEntities.DeleteEntitiesRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Search.Actions.CreateIndex.CreateIndexRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Search.Actions.TrackRecent.TrackRecentRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Search.Actions.GetRecents.GetRecentsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Search.Actions.DeleteRecent.DeleteRecentRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Media.Actions.StartImageUpload.StartImageUploadRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Media.Actions.CompleteImageUpload.CompleteImageUploadRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Notification.Actions.RegisterDevice.RegisterDeviceRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Notification.Actions.GetPreferences.GetPreferencesRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Notification.Actions.UpdatePreference.UpdatePreferenceRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Notification.Actions.SendNotification.SendNotificationRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Notification.Actions.NoSearchResults.NoSearchResultsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.History.Actions.RecordAction.RecordActionRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Payment.Actions.StoreToken.StoreTokenRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Post.Actions.CreatePost.CreatePostRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Post.Actions.GetPost.GetPostRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Post.Actions.GetPosts.GetPostsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Post.Actions.UpdatePost.UpdatePostRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Post.Actions.DeletePost.DeletePostRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Feature.Actions.GetFlags.GetFlagsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.File.Actions.StartUpload.StartUploadRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.File.Actions.CompleteUpload.CompleteUploadRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.File.Actions.Delete.DeleteRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.File.Actions.GetFiles.GetFilesRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.File.Actions.Upload.UploadRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Team.Actions.AddMembers.AddMembersRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Team.Actions.CreateTeam.CreateTeamRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Team.Actions.GetTeam.GetTeamRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Team.Actions.GetMembers.GetMembersRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Team.Actions.JoinTeam.JoinTeamRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Team.Actions.LeaveTeam.LeaveTeamRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Team.Actions.RemoveMembers.RemoveMembersRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Team.Actions.UpdateMembers.UpdateMembersRoot.sharedInstance.registerAllExtensions(extensionRegistry)
    }
    public func registerAllExtensions(registry:ExtensionRegistry) {
      registry.addExtension(ServicesRegistryResponsesUsercreateUserStatic)
      registry.addExtension(ServicesRegistryResponsesUserauthenticateUserStatic)
      registry.addExtension(ServicesRegistryResponsesUsergetUserStatic)
      registry.addExtension(ServicesRegistryResponsesUsercompleteAuthorizationStatic)
      registry.addExtension(ServicesRegistryResponsesUsergetIdentitiesStatic)
      registry.addExtension(ServicesRegistryResponsesUserbulkCreateUsersStatic)
      registry.addExtension(ServicesRegistryResponsesUserrecordDeviceStatic)
      registry.addExtension(ServicesRegistryResponsesUserrequestAccessStatic)
      registry.addExtension(ServicesRegistryResponsesUserdeleteIdentityStatic)
      registry.addExtension(ServicesRegistryResponsesUserlogoutStatic)
      registry.addExtension(ServicesRegistryResponsesUsergetAuthenticationInstructionsStatic)
      registry.addExtension(ServicesRegistryResponsesUsergetActiveDevicesStatic)
      registry.addExtension(ServicesRegistryResponsesUserbulkUpdateUsersStatic)
      registry.addExtension(ServicesRegistryResponsesOrganizationcreateOrganizationStatic)
      registry.addExtension(ServicesRegistryResponsesOrganizationgetOrganizationStatic)
      registry.addExtension(ServicesRegistryResponsesOrganizationgetTeamStatic)
      registry.addExtension(ServicesRegistryResponsesOrganizationcreateLocationStatic)
      registry.addExtension(ServicesRegistryResponsesOrganizationupdateLocationStatic)
      registry.addExtension(ServicesRegistryResponsesOrganizationgetLocationsStatic)
      registry.addExtension(ServicesRegistryResponsesOrganizationgetLocationStatic)
      registry.addExtension(ServicesRegistryResponsesOrganizationenableIntegrationStatic)
      registry.addExtension(ServicesRegistryResponsesOrganizationgetIntegrationStatic)
      registry.addExtension(ServicesRegistryResponsesOrganizationdisableIntegrationStatic)
      registry.addExtension(ServicesRegistryResponsesOrganizationupdateTeamStatic)
      registry.addExtension(ServicesRegistryResponsesOrganizationaddDirectReportsStatic)
      registry.addExtension(ServicesRegistryResponsesOrganizationgetLocationMembersStatic)
      registry.addExtension(ServicesRegistryResponsesOrganizationgetProfileReportingDetailsStatic)
      registry.addExtension(ServicesRegistryResponsesOrganizationgetTeamReportingDetailsStatic)
      registry.addExtension(ServicesRegistryResponsesOrganizationsetManagerStatic)
      registry.addExtension(ServicesRegistryResponsesOrganizationaddLocationMembersStatic)
      registry.addExtension(ServicesRegistryResponsesOrganizationgetTeamsStatic)
      registry.addExtension(ServicesRegistryResponsesOrganizationgetDescendantsStatic)
      registry.addExtension(ServicesRegistryResponsesOrganizationgetSsoStatic)
      registry.addExtension(ServicesRegistryResponsesOrganizationgetTeamsForProfileIdsStatic)
      registry.addExtension(ServicesRegistryResponsesProfilecreateProfileStatic)
      registry.addExtension(ServicesRegistryResponsesProfilegetExtendedProfileStatic)
      registry.addExtension(ServicesRegistryResponsesProfilegetProfileStatic)
      registry.addExtension(ServicesRegistryResponsesProfileupdateProfileStatic)
      registry.addExtension(ServicesRegistryResponsesProfilegetProfilesStatic)
      registry.addExtension(ServicesRegistryResponsesProfilebulkCreateProfilesStatic)
      registry.addExtension(ServicesRegistryResponsesProfilebulkUpdateProfilesStatic)
      registry.addExtension(ServicesRegistryResponsesProfileprofileExistsStatic)
      registry.addExtension(ServicesRegistryResponsesSearchsearchStatic)
      registry.addExtension(ServicesRegistryResponsesSearchsearchV2Static)
      registry.addExtension(ServicesRegistryResponsesSearchupdateEntitiesStatic)
      registry.addExtension(ServicesRegistryResponsesSearchdeleteEntitiesStatic)
      registry.addExtension(ServicesRegistryResponsesSearchcreateIndexStatic)
      registry.addExtension(ServicesRegistryResponsesSearchtrackRecentStatic)
      registry.addExtension(ServicesRegistryResponsesSearchgetRecentsStatic)
      registry.addExtension(ServicesRegistryResponsesSearchdeleteRecentStatic)
      registry.addExtension(ServicesRegistryResponsesMediastartImageUploadStatic)
      registry.addExtension(ServicesRegistryResponsesMediacompleteImageUploadStatic)
      registry.addExtension(ServicesRegistryResponsesNotificationregisterDeviceStatic)
      registry.addExtension(ServicesRegistryResponsesNotificationgetPreferencesStatic)
      registry.addExtension(ServicesRegistryResponsesNotificationupdatePreferenceStatic)
      registry.addExtension(ServicesRegistryResponsesNotificationsendNotificationStatic)
      registry.addExtension(ServicesRegistryResponsesNotificationnoSearchResultsStatic)
      registry.addExtension(ServicesRegistryResponsesHistoryrecordActionStatic)
      registry.addExtension(ServicesRegistryResponsesPaymentstoreTokenStatic)
      registry.addExtension(ServicesRegistryResponsesPostcreatePostStatic)
      registry.addExtension(ServicesRegistryResponsesPostupdatePostStatic)
      registry.addExtension(ServicesRegistryResponsesPostgetPostStatic)
      registry.addExtension(ServicesRegistryResponsesPostgetPostsStatic)
      registry.addExtension(ServicesRegistryResponsesPostdeletePostStatic)
      registry.addExtension(ServicesRegistryResponsesFeaturegetFlagsStatic)
      registry.addExtension(ServicesRegistryResponsesFilestartUploadStatic)
      registry.addExtension(ServicesRegistryResponsesFilecompleteUploadStatic)
      registry.addExtension(ServicesRegistryResponsesFiledeleteStatic)
      registry.addExtension(ServicesRegistryResponsesFilegetFilesStatic)
      registry.addExtension(ServicesRegistryResponsesFileuploadStatic)
      registry.addExtension(ServicesRegistryResponsesTeamaddMembersStatic)
      registry.addExtension(ServicesRegistryResponsesTeamcreateTeamStatic)
      registry.addExtension(ServicesRegistryResponsesTeamgetTeamStatic)
      registry.addExtension(ServicesRegistryResponsesTeamgetMembersStatic)
      registry.addExtension(ServicesRegistryResponsesTeamjoinTeamStatic)
      registry.addExtension(ServicesRegistryResponsesTeamleaveTeamStatic)
      registry.addExtension(ServicesRegistryResponsesTeamremoveMembersStatic)
      registry.addExtension(ServicesRegistryResponsesTeamupdateMembersStatic)
    }
  }

  final public class User : GeneratedMessage, GeneratedMessageProtocol {
    public class func createUser() -> ConcreateExtensionField {
         return ServicesRegistryResponsesUsercreateUser
    }
    public class func authenticateUser() -> ConcreateExtensionField {
         return ServicesRegistryResponsesUserauthenticateUser
    }
    public class func getUser() -> ConcreateExtensionField {
         return ServicesRegistryResponsesUsergetUser
    }
    public class func completeAuthorization() -> ConcreateExtensionField {
         return ServicesRegistryResponsesUsercompleteAuthorization
    }
    public class func getIdentities() -> ConcreateExtensionField {
         return ServicesRegistryResponsesUsergetIdentities
    }
    public class func bulkCreateUsers() -> ConcreateExtensionField {
         return ServicesRegistryResponsesUserbulkCreateUsers
    }
    public class func recordDevice() -> ConcreateExtensionField {
         return ServicesRegistryResponsesUserrecordDevice
    }
    public class func requestAccess() -> ConcreateExtensionField {
         return ServicesRegistryResponsesUserrequestAccess
    }
    public class func deleteIdentity() -> ConcreateExtensionField {
         return ServicesRegistryResponsesUserdeleteIdentity
    }
    public class func logout() -> ConcreateExtensionField {
         return ServicesRegistryResponsesUserlogout
    }
    public class func getAuthenticationInstructions() -> ConcreateExtensionField {
         return ServicesRegistryResponsesUsergetAuthenticationInstructions
    }
    public class func getActiveDevices() -> ConcreateExtensionField {
         return ServicesRegistryResponsesUsergetActiveDevices
    }
    public class func bulkUpdateUsers() -> ConcreateExtensionField {
         return ServicesRegistryResponsesUserbulkUpdateUsers
    }
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) throws {
      try unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseArrayDelimitedFromInputStream(input:NSInputStream) throws -> Array<Services.Registry.Responses.User> {
      var mergedArray = Array<Services.Registry.Responses.User>()
      while let value = try parseFromDelimitedFromInputStream(input) {
        mergedArray += [value]
      }
      return mergedArray
    }
    public class func parseFromDelimitedFromInputStream(input:NSInputStream) throws -> Services.Registry.Responses.User? {
      return try Services.Registry.Responses.User.Builder().mergeDelimitedFromInputStream(input)?.build()
    }
    public class func parseFromData(data:NSData) throws -> Services.Registry.Responses.User {
      return try Services.Registry.Responses.User.Builder().mergeFromData(data, extensionRegistry:Services.Registry.Responses.ResponsesRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Responses.User {
      return try Services.Registry.Responses.User.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) throws -> Services.Registry.Responses.User {
      return try Services.Registry.Responses.User.Builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Responses.User {
      return try Services.Registry.Responses.User.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) throws -> Services.Registry.Responses.User {
      return try Services.Registry.Responses.User.Builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Responses.User {
      return try Services.Registry.Responses.User.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func getBuilder() -> Services.Registry.Responses.User.Builder {
      return Services.Registry.Responses.User.classBuilder() as! Services.Registry.Responses.User.Builder
    }
    public func getBuilder() -> Services.Registry.Responses.User.Builder {
      return classBuilder() as! Services.Registry.Responses.User.Builder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Services.Registry.Responses.User.Builder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Services.Registry.Responses.User.Builder()
    }
    public func toBuilder() throws -> Services.Registry.Responses.User.Builder {
      return try Services.Registry.Responses.User.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Services.Registry.Responses.User) throws -> Services.Registry.Responses.User.Builder {
      return try Services.Registry.Responses.User.Builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) throws {
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Services.Registry.Responses.User"
    }
    override public func className() -> String {
        return "Services.Registry.Responses.User"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Services.Registry.Responses.User.self
    }
    //Meta information declaration end

    final public class Builder : GeneratedMessageBuilder {
      private var builderResult:Services.Registry.Responses.User = Services.Registry.Responses.User()
      public func getMessage() -> Services.Registry.Responses.User {
          return builderResult
      }

      required override public init () {
         super.init()
      }
      override public var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      public override func clear() -> Services.Registry.Responses.User.Builder {
        builderResult = Services.Registry.Responses.User()
        return self
      }
      public override func clone() throws -> Services.Registry.Responses.User.Builder {
        return try Services.Registry.Responses.User.builderWithPrototype(builderResult)
      }
      public override func build() throws -> Services.Registry.Responses.User {
           try checkInitialized()
           return buildPartial()
      }
      public func buildPartial() -> Services.Registry.Responses.User {
        let returnMe:Services.Registry.Responses.User = builderResult
        return returnMe
      }
      public func mergeFrom(other:Services.Registry.Responses.User) throws -> Services.Registry.Responses.User.Builder {
        if other == Services.Registry.Responses.User() {
         return self
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream) throws -> Services.Registry.Responses.User.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Responses.User.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let tag = try input.readTag()
          switch tag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
    }

  }

  final public class Organization : GeneratedMessage, GeneratedMessageProtocol {
    public class func createOrganization() -> ConcreateExtensionField {
         return ServicesRegistryResponsesOrganizationcreateOrganization
    }
    public class func getOrganization() -> ConcreateExtensionField {
         return ServicesRegistryResponsesOrganizationgetOrganization
    }
    public class func getTeam() -> ConcreateExtensionField {
         return ServicesRegistryResponsesOrganizationgetTeam
    }
    public class func createLocation() -> ConcreateExtensionField {
         return ServicesRegistryResponsesOrganizationcreateLocation
    }
    public class func updateLocation() -> ConcreateExtensionField {
         return ServicesRegistryResponsesOrganizationupdateLocation
    }
    public class func getLocations() -> ConcreateExtensionField {
         return ServicesRegistryResponsesOrganizationgetLocations
    }
    public class func getLocation() -> ConcreateExtensionField {
         return ServicesRegistryResponsesOrganizationgetLocation
    }
    public class func enableIntegration() -> ConcreateExtensionField {
         return ServicesRegistryResponsesOrganizationenableIntegration
    }
    public class func getIntegration() -> ConcreateExtensionField {
         return ServicesRegistryResponsesOrganizationgetIntegration
    }
    public class func disableIntegration() -> ConcreateExtensionField {
         return ServicesRegistryResponsesOrganizationdisableIntegration
    }
    public class func updateTeam() -> ConcreateExtensionField {
         return ServicesRegistryResponsesOrganizationupdateTeam
    }
    public class func addDirectReports() -> ConcreateExtensionField {
         return ServicesRegistryResponsesOrganizationaddDirectReports
    }
    public class func getLocationMembers() -> ConcreateExtensionField {
         return ServicesRegistryResponsesOrganizationgetLocationMembers
    }
    public class func getProfileReportingDetails() -> ConcreateExtensionField {
         return ServicesRegistryResponsesOrganizationgetProfileReportingDetails
    }
    public class func getTeamReportingDetails() -> ConcreateExtensionField {
         return ServicesRegistryResponsesOrganizationgetTeamReportingDetails
    }
    public class func setManager() -> ConcreateExtensionField {
         return ServicesRegistryResponsesOrganizationsetManager
    }
    public class func addLocationMembers() -> ConcreateExtensionField {
         return ServicesRegistryResponsesOrganizationaddLocationMembers
    }
    public class func getTeams() -> ConcreateExtensionField {
         return ServicesRegistryResponsesOrganizationgetTeams
    }
    public class func getDescendants() -> ConcreateExtensionField {
         return ServicesRegistryResponsesOrganizationgetDescendants
    }
    public class func getSso() -> ConcreateExtensionField {
         return ServicesRegistryResponsesOrganizationgetSso
    }
    public class func getTeamsForProfileIds() -> ConcreateExtensionField {
         return ServicesRegistryResponsesOrganizationgetTeamsForProfileIds
    }
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) throws {
      try unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseArrayDelimitedFromInputStream(input:NSInputStream) throws -> Array<Services.Registry.Responses.Organization> {
      var mergedArray = Array<Services.Registry.Responses.Organization>()
      while let value = try parseFromDelimitedFromInputStream(input) {
        mergedArray += [value]
      }
      return mergedArray
    }
    public class func parseFromDelimitedFromInputStream(input:NSInputStream) throws -> Services.Registry.Responses.Organization? {
      return try Services.Registry.Responses.Organization.Builder().mergeDelimitedFromInputStream(input)?.build()
    }
    public class func parseFromData(data:NSData) throws -> Services.Registry.Responses.Organization {
      return try Services.Registry.Responses.Organization.Builder().mergeFromData(data, extensionRegistry:Services.Registry.Responses.ResponsesRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Responses.Organization {
      return try Services.Registry.Responses.Organization.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) throws -> Services.Registry.Responses.Organization {
      return try Services.Registry.Responses.Organization.Builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Responses.Organization {
      return try Services.Registry.Responses.Organization.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) throws -> Services.Registry.Responses.Organization {
      return try Services.Registry.Responses.Organization.Builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Responses.Organization {
      return try Services.Registry.Responses.Organization.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func getBuilder() -> Services.Registry.Responses.Organization.Builder {
      return Services.Registry.Responses.Organization.classBuilder() as! Services.Registry.Responses.Organization.Builder
    }
    public func getBuilder() -> Services.Registry.Responses.Organization.Builder {
      return classBuilder() as! Services.Registry.Responses.Organization.Builder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Services.Registry.Responses.Organization.Builder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Services.Registry.Responses.Organization.Builder()
    }
    public func toBuilder() throws -> Services.Registry.Responses.Organization.Builder {
      return try Services.Registry.Responses.Organization.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Services.Registry.Responses.Organization) throws -> Services.Registry.Responses.Organization.Builder {
      return try Services.Registry.Responses.Organization.Builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) throws {
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Services.Registry.Responses.Organization"
    }
    override public func className() -> String {
        return "Services.Registry.Responses.Organization"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Services.Registry.Responses.Organization.self
    }
    //Meta information declaration end

    final public class Builder : GeneratedMessageBuilder {
      private var builderResult:Services.Registry.Responses.Organization = Services.Registry.Responses.Organization()
      public func getMessage() -> Services.Registry.Responses.Organization {
          return builderResult
      }

      required override public init () {
         super.init()
      }
      override public var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      public override func clear() -> Services.Registry.Responses.Organization.Builder {
        builderResult = Services.Registry.Responses.Organization()
        return self
      }
      public override func clone() throws -> Services.Registry.Responses.Organization.Builder {
        return try Services.Registry.Responses.Organization.builderWithPrototype(builderResult)
      }
      public override func build() throws -> Services.Registry.Responses.Organization {
           try checkInitialized()
           return buildPartial()
      }
      public func buildPartial() -> Services.Registry.Responses.Organization {
        let returnMe:Services.Registry.Responses.Organization = builderResult
        return returnMe
      }
      public func mergeFrom(other:Services.Registry.Responses.Organization) throws -> Services.Registry.Responses.Organization.Builder {
        if other == Services.Registry.Responses.Organization() {
         return self
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream) throws -> Services.Registry.Responses.Organization.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Responses.Organization.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let tag = try input.readTag()
          switch tag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
    }

  }

  final public class Profile : GeneratedMessage, GeneratedMessageProtocol {
    public class func createProfile() -> ConcreateExtensionField {
         return ServicesRegistryResponsesProfilecreateProfile
    }
    public class func getExtendedProfile() -> ConcreateExtensionField {
         return ServicesRegistryResponsesProfilegetExtendedProfile
    }
    public class func getProfile() -> ConcreateExtensionField {
         return ServicesRegistryResponsesProfilegetProfile
    }
    public class func updateProfile() -> ConcreateExtensionField {
         return ServicesRegistryResponsesProfileupdateProfile
    }
    public class func getProfiles() -> ConcreateExtensionField {
         return ServicesRegistryResponsesProfilegetProfiles
    }
    public class func bulkCreateProfiles() -> ConcreateExtensionField {
         return ServicesRegistryResponsesProfilebulkCreateProfiles
    }
    public class func bulkUpdateProfiles() -> ConcreateExtensionField {
         return ServicesRegistryResponsesProfilebulkUpdateProfiles
    }
    public class func profileExists() -> ConcreateExtensionField {
         return ServicesRegistryResponsesProfileprofileExists
    }
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) throws {
      try unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseArrayDelimitedFromInputStream(input:NSInputStream) throws -> Array<Services.Registry.Responses.Profile> {
      var mergedArray = Array<Services.Registry.Responses.Profile>()
      while let value = try parseFromDelimitedFromInputStream(input) {
        mergedArray += [value]
      }
      return mergedArray
    }
    public class func parseFromDelimitedFromInputStream(input:NSInputStream) throws -> Services.Registry.Responses.Profile? {
      return try Services.Registry.Responses.Profile.Builder().mergeDelimitedFromInputStream(input)?.build()
    }
    public class func parseFromData(data:NSData) throws -> Services.Registry.Responses.Profile {
      return try Services.Registry.Responses.Profile.Builder().mergeFromData(data, extensionRegistry:Services.Registry.Responses.ResponsesRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Responses.Profile {
      return try Services.Registry.Responses.Profile.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) throws -> Services.Registry.Responses.Profile {
      return try Services.Registry.Responses.Profile.Builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Responses.Profile {
      return try Services.Registry.Responses.Profile.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) throws -> Services.Registry.Responses.Profile {
      return try Services.Registry.Responses.Profile.Builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Responses.Profile {
      return try Services.Registry.Responses.Profile.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func getBuilder() -> Services.Registry.Responses.Profile.Builder {
      return Services.Registry.Responses.Profile.classBuilder() as! Services.Registry.Responses.Profile.Builder
    }
    public func getBuilder() -> Services.Registry.Responses.Profile.Builder {
      return classBuilder() as! Services.Registry.Responses.Profile.Builder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Services.Registry.Responses.Profile.Builder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Services.Registry.Responses.Profile.Builder()
    }
    public func toBuilder() throws -> Services.Registry.Responses.Profile.Builder {
      return try Services.Registry.Responses.Profile.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Services.Registry.Responses.Profile) throws -> Services.Registry.Responses.Profile.Builder {
      return try Services.Registry.Responses.Profile.Builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) throws {
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Services.Registry.Responses.Profile"
    }
    override public func className() -> String {
        return "Services.Registry.Responses.Profile"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Services.Registry.Responses.Profile.self
    }
    //Meta information declaration end

    final public class Builder : GeneratedMessageBuilder {
      private var builderResult:Services.Registry.Responses.Profile = Services.Registry.Responses.Profile()
      public func getMessage() -> Services.Registry.Responses.Profile {
          return builderResult
      }

      required override public init () {
         super.init()
      }
      override public var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      public override func clear() -> Services.Registry.Responses.Profile.Builder {
        builderResult = Services.Registry.Responses.Profile()
        return self
      }
      public override func clone() throws -> Services.Registry.Responses.Profile.Builder {
        return try Services.Registry.Responses.Profile.builderWithPrototype(builderResult)
      }
      public override func build() throws -> Services.Registry.Responses.Profile {
           try checkInitialized()
           return buildPartial()
      }
      public func buildPartial() -> Services.Registry.Responses.Profile {
        let returnMe:Services.Registry.Responses.Profile = builderResult
        return returnMe
      }
      public func mergeFrom(other:Services.Registry.Responses.Profile) throws -> Services.Registry.Responses.Profile.Builder {
        if other == Services.Registry.Responses.Profile() {
         return self
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream) throws -> Services.Registry.Responses.Profile.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Responses.Profile.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let tag = try input.readTag()
          switch tag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
    }

  }

  final public class Search : GeneratedMessage, GeneratedMessageProtocol {
    public class func search() -> ConcreateExtensionField {
         return ServicesRegistryResponsesSearchsearch
    }
    public class func searchV2() -> ConcreateExtensionField {
         return ServicesRegistryResponsesSearchsearchV2
    }
    public class func updateEntities() -> ConcreateExtensionField {
         return ServicesRegistryResponsesSearchupdateEntities
    }
    public class func deleteEntities() -> ConcreateExtensionField {
         return ServicesRegistryResponsesSearchdeleteEntities
    }
    public class func createIndex() -> ConcreateExtensionField {
         return ServicesRegistryResponsesSearchcreateIndex
    }
    public class func trackRecent() -> ConcreateExtensionField {
         return ServicesRegistryResponsesSearchtrackRecent
    }
    public class func getRecents() -> ConcreateExtensionField {
         return ServicesRegistryResponsesSearchgetRecents
    }
    public class func deleteRecent() -> ConcreateExtensionField {
         return ServicesRegistryResponsesSearchdeleteRecent
    }
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) throws {
      try unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseArrayDelimitedFromInputStream(input:NSInputStream) throws -> Array<Services.Registry.Responses.Search> {
      var mergedArray = Array<Services.Registry.Responses.Search>()
      while let value = try parseFromDelimitedFromInputStream(input) {
        mergedArray += [value]
      }
      return mergedArray
    }
    public class func parseFromDelimitedFromInputStream(input:NSInputStream) throws -> Services.Registry.Responses.Search? {
      return try Services.Registry.Responses.Search.Builder().mergeDelimitedFromInputStream(input)?.build()
    }
    public class func parseFromData(data:NSData) throws -> Services.Registry.Responses.Search {
      return try Services.Registry.Responses.Search.Builder().mergeFromData(data, extensionRegistry:Services.Registry.Responses.ResponsesRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Responses.Search {
      return try Services.Registry.Responses.Search.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) throws -> Services.Registry.Responses.Search {
      return try Services.Registry.Responses.Search.Builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Responses.Search {
      return try Services.Registry.Responses.Search.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) throws -> Services.Registry.Responses.Search {
      return try Services.Registry.Responses.Search.Builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Responses.Search {
      return try Services.Registry.Responses.Search.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func getBuilder() -> Services.Registry.Responses.Search.Builder {
      return Services.Registry.Responses.Search.classBuilder() as! Services.Registry.Responses.Search.Builder
    }
    public func getBuilder() -> Services.Registry.Responses.Search.Builder {
      return classBuilder() as! Services.Registry.Responses.Search.Builder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Services.Registry.Responses.Search.Builder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Services.Registry.Responses.Search.Builder()
    }
    public func toBuilder() throws -> Services.Registry.Responses.Search.Builder {
      return try Services.Registry.Responses.Search.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Services.Registry.Responses.Search) throws -> Services.Registry.Responses.Search.Builder {
      return try Services.Registry.Responses.Search.Builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) throws {
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Services.Registry.Responses.Search"
    }
    override public func className() -> String {
        return "Services.Registry.Responses.Search"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Services.Registry.Responses.Search.self
    }
    //Meta information declaration end

    final public class Builder : GeneratedMessageBuilder {
      private var builderResult:Services.Registry.Responses.Search = Services.Registry.Responses.Search()
      public func getMessage() -> Services.Registry.Responses.Search {
          return builderResult
      }

      required override public init () {
         super.init()
      }
      override public var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      public override func clear() -> Services.Registry.Responses.Search.Builder {
        builderResult = Services.Registry.Responses.Search()
        return self
      }
      public override func clone() throws -> Services.Registry.Responses.Search.Builder {
        return try Services.Registry.Responses.Search.builderWithPrototype(builderResult)
      }
      public override func build() throws -> Services.Registry.Responses.Search {
           try checkInitialized()
           return buildPartial()
      }
      public func buildPartial() -> Services.Registry.Responses.Search {
        let returnMe:Services.Registry.Responses.Search = builderResult
        return returnMe
      }
      public func mergeFrom(other:Services.Registry.Responses.Search) throws -> Services.Registry.Responses.Search.Builder {
        if other == Services.Registry.Responses.Search() {
         return self
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream) throws -> Services.Registry.Responses.Search.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Responses.Search.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let tag = try input.readTag()
          switch tag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
    }

  }

  final public class Media : GeneratedMessage, GeneratedMessageProtocol {
    public class func startImageUpload() -> ConcreateExtensionField {
         return ServicesRegistryResponsesMediastartImageUpload
    }
    public class func completeImageUpload() -> ConcreateExtensionField {
         return ServicesRegistryResponsesMediacompleteImageUpload
    }
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) throws {
      try unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseArrayDelimitedFromInputStream(input:NSInputStream) throws -> Array<Services.Registry.Responses.Media> {
      var mergedArray = Array<Services.Registry.Responses.Media>()
      while let value = try parseFromDelimitedFromInputStream(input) {
        mergedArray += [value]
      }
      return mergedArray
    }
    public class func parseFromDelimitedFromInputStream(input:NSInputStream) throws -> Services.Registry.Responses.Media? {
      return try Services.Registry.Responses.Media.Builder().mergeDelimitedFromInputStream(input)?.build()
    }
    public class func parseFromData(data:NSData) throws -> Services.Registry.Responses.Media {
      return try Services.Registry.Responses.Media.Builder().mergeFromData(data, extensionRegistry:Services.Registry.Responses.ResponsesRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Responses.Media {
      return try Services.Registry.Responses.Media.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) throws -> Services.Registry.Responses.Media {
      return try Services.Registry.Responses.Media.Builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Responses.Media {
      return try Services.Registry.Responses.Media.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) throws -> Services.Registry.Responses.Media {
      return try Services.Registry.Responses.Media.Builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Responses.Media {
      return try Services.Registry.Responses.Media.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func getBuilder() -> Services.Registry.Responses.Media.Builder {
      return Services.Registry.Responses.Media.classBuilder() as! Services.Registry.Responses.Media.Builder
    }
    public func getBuilder() -> Services.Registry.Responses.Media.Builder {
      return classBuilder() as! Services.Registry.Responses.Media.Builder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Services.Registry.Responses.Media.Builder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Services.Registry.Responses.Media.Builder()
    }
    public func toBuilder() throws -> Services.Registry.Responses.Media.Builder {
      return try Services.Registry.Responses.Media.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Services.Registry.Responses.Media) throws -> Services.Registry.Responses.Media.Builder {
      return try Services.Registry.Responses.Media.Builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) throws {
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Services.Registry.Responses.Media"
    }
    override public func className() -> String {
        return "Services.Registry.Responses.Media"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Services.Registry.Responses.Media.self
    }
    //Meta information declaration end

    final public class Builder : GeneratedMessageBuilder {
      private var builderResult:Services.Registry.Responses.Media = Services.Registry.Responses.Media()
      public func getMessage() -> Services.Registry.Responses.Media {
          return builderResult
      }

      required override public init () {
         super.init()
      }
      override public var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      public override func clear() -> Services.Registry.Responses.Media.Builder {
        builderResult = Services.Registry.Responses.Media()
        return self
      }
      public override func clone() throws -> Services.Registry.Responses.Media.Builder {
        return try Services.Registry.Responses.Media.builderWithPrototype(builderResult)
      }
      public override func build() throws -> Services.Registry.Responses.Media {
           try checkInitialized()
           return buildPartial()
      }
      public func buildPartial() -> Services.Registry.Responses.Media {
        let returnMe:Services.Registry.Responses.Media = builderResult
        return returnMe
      }
      public func mergeFrom(other:Services.Registry.Responses.Media) throws -> Services.Registry.Responses.Media.Builder {
        if other == Services.Registry.Responses.Media() {
         return self
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream) throws -> Services.Registry.Responses.Media.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Responses.Media.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let tag = try input.readTag()
          switch tag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
    }

  }

  final public class Notification : GeneratedMessage, GeneratedMessageProtocol {
    public class func registerDevice() -> ConcreateExtensionField {
         return ServicesRegistryResponsesNotificationregisterDevice
    }
    public class func getPreferences() -> ConcreateExtensionField {
         return ServicesRegistryResponsesNotificationgetPreferences
    }
    public class func updatePreference() -> ConcreateExtensionField {
         return ServicesRegistryResponsesNotificationupdatePreference
    }
    public class func sendNotification() -> ConcreateExtensionField {
         return ServicesRegistryResponsesNotificationsendNotification
    }
    public class func noSearchResults() -> ConcreateExtensionField {
         return ServicesRegistryResponsesNotificationnoSearchResults
    }
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) throws {
      try unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseArrayDelimitedFromInputStream(input:NSInputStream) throws -> Array<Services.Registry.Responses.Notification> {
      var mergedArray = Array<Services.Registry.Responses.Notification>()
      while let value = try parseFromDelimitedFromInputStream(input) {
        mergedArray += [value]
      }
      return mergedArray
    }
    public class func parseFromDelimitedFromInputStream(input:NSInputStream) throws -> Services.Registry.Responses.Notification? {
      return try Services.Registry.Responses.Notification.Builder().mergeDelimitedFromInputStream(input)?.build()
    }
    public class func parseFromData(data:NSData) throws -> Services.Registry.Responses.Notification {
      return try Services.Registry.Responses.Notification.Builder().mergeFromData(data, extensionRegistry:Services.Registry.Responses.ResponsesRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Responses.Notification {
      return try Services.Registry.Responses.Notification.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) throws -> Services.Registry.Responses.Notification {
      return try Services.Registry.Responses.Notification.Builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Responses.Notification {
      return try Services.Registry.Responses.Notification.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) throws -> Services.Registry.Responses.Notification {
      return try Services.Registry.Responses.Notification.Builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Responses.Notification {
      return try Services.Registry.Responses.Notification.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func getBuilder() -> Services.Registry.Responses.Notification.Builder {
      return Services.Registry.Responses.Notification.classBuilder() as! Services.Registry.Responses.Notification.Builder
    }
    public func getBuilder() -> Services.Registry.Responses.Notification.Builder {
      return classBuilder() as! Services.Registry.Responses.Notification.Builder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Services.Registry.Responses.Notification.Builder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Services.Registry.Responses.Notification.Builder()
    }
    public func toBuilder() throws -> Services.Registry.Responses.Notification.Builder {
      return try Services.Registry.Responses.Notification.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Services.Registry.Responses.Notification) throws -> Services.Registry.Responses.Notification.Builder {
      return try Services.Registry.Responses.Notification.Builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) throws {
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Services.Registry.Responses.Notification"
    }
    override public func className() -> String {
        return "Services.Registry.Responses.Notification"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Services.Registry.Responses.Notification.self
    }
    //Meta information declaration end

    final public class Builder : GeneratedMessageBuilder {
      private var builderResult:Services.Registry.Responses.Notification = Services.Registry.Responses.Notification()
      public func getMessage() -> Services.Registry.Responses.Notification {
          return builderResult
      }

      required override public init () {
         super.init()
      }
      override public var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      public override func clear() -> Services.Registry.Responses.Notification.Builder {
        builderResult = Services.Registry.Responses.Notification()
        return self
      }
      public override func clone() throws -> Services.Registry.Responses.Notification.Builder {
        return try Services.Registry.Responses.Notification.builderWithPrototype(builderResult)
      }
      public override func build() throws -> Services.Registry.Responses.Notification {
           try checkInitialized()
           return buildPartial()
      }
      public func buildPartial() -> Services.Registry.Responses.Notification {
        let returnMe:Services.Registry.Responses.Notification = builderResult
        return returnMe
      }
      public func mergeFrom(other:Services.Registry.Responses.Notification) throws -> Services.Registry.Responses.Notification.Builder {
        if other == Services.Registry.Responses.Notification() {
         return self
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream) throws -> Services.Registry.Responses.Notification.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Responses.Notification.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let tag = try input.readTag()
          switch tag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
    }

  }

  final public class History : GeneratedMessage, GeneratedMessageProtocol {
    public class func recordAction() -> ConcreateExtensionField {
         return ServicesRegistryResponsesHistoryrecordAction
    }
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) throws {
      try unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseArrayDelimitedFromInputStream(input:NSInputStream) throws -> Array<Services.Registry.Responses.History> {
      var mergedArray = Array<Services.Registry.Responses.History>()
      while let value = try parseFromDelimitedFromInputStream(input) {
        mergedArray += [value]
      }
      return mergedArray
    }
    public class func parseFromDelimitedFromInputStream(input:NSInputStream) throws -> Services.Registry.Responses.History? {
      return try Services.Registry.Responses.History.Builder().mergeDelimitedFromInputStream(input)?.build()
    }
    public class func parseFromData(data:NSData) throws -> Services.Registry.Responses.History {
      return try Services.Registry.Responses.History.Builder().mergeFromData(data, extensionRegistry:Services.Registry.Responses.ResponsesRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Responses.History {
      return try Services.Registry.Responses.History.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) throws -> Services.Registry.Responses.History {
      return try Services.Registry.Responses.History.Builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Responses.History {
      return try Services.Registry.Responses.History.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) throws -> Services.Registry.Responses.History {
      return try Services.Registry.Responses.History.Builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Responses.History {
      return try Services.Registry.Responses.History.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func getBuilder() -> Services.Registry.Responses.History.Builder {
      return Services.Registry.Responses.History.classBuilder() as! Services.Registry.Responses.History.Builder
    }
    public func getBuilder() -> Services.Registry.Responses.History.Builder {
      return classBuilder() as! Services.Registry.Responses.History.Builder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Services.Registry.Responses.History.Builder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Services.Registry.Responses.History.Builder()
    }
    public func toBuilder() throws -> Services.Registry.Responses.History.Builder {
      return try Services.Registry.Responses.History.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Services.Registry.Responses.History) throws -> Services.Registry.Responses.History.Builder {
      return try Services.Registry.Responses.History.Builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) throws {
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Services.Registry.Responses.History"
    }
    override public func className() -> String {
        return "Services.Registry.Responses.History"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Services.Registry.Responses.History.self
    }
    //Meta information declaration end

    final public class Builder : GeneratedMessageBuilder {
      private var builderResult:Services.Registry.Responses.History = Services.Registry.Responses.History()
      public func getMessage() -> Services.Registry.Responses.History {
          return builderResult
      }

      required override public init () {
         super.init()
      }
      override public var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      public override func clear() -> Services.Registry.Responses.History.Builder {
        builderResult = Services.Registry.Responses.History()
        return self
      }
      public override func clone() throws -> Services.Registry.Responses.History.Builder {
        return try Services.Registry.Responses.History.builderWithPrototype(builderResult)
      }
      public override func build() throws -> Services.Registry.Responses.History {
           try checkInitialized()
           return buildPartial()
      }
      public func buildPartial() -> Services.Registry.Responses.History {
        let returnMe:Services.Registry.Responses.History = builderResult
        return returnMe
      }
      public func mergeFrom(other:Services.Registry.Responses.History) throws -> Services.Registry.Responses.History.Builder {
        if other == Services.Registry.Responses.History() {
         return self
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream) throws -> Services.Registry.Responses.History.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Responses.History.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let tag = try input.readTag()
          switch tag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
    }

  }

  final public class Payment : GeneratedMessage, GeneratedMessageProtocol {
    public class func storeToken() -> ConcreateExtensionField {
         return ServicesRegistryResponsesPaymentstoreToken
    }
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) throws {
      try unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseArrayDelimitedFromInputStream(input:NSInputStream) throws -> Array<Services.Registry.Responses.Payment> {
      var mergedArray = Array<Services.Registry.Responses.Payment>()
      while let value = try parseFromDelimitedFromInputStream(input) {
        mergedArray += [value]
      }
      return mergedArray
    }
    public class func parseFromDelimitedFromInputStream(input:NSInputStream) throws -> Services.Registry.Responses.Payment? {
      return try Services.Registry.Responses.Payment.Builder().mergeDelimitedFromInputStream(input)?.build()
    }
    public class func parseFromData(data:NSData) throws -> Services.Registry.Responses.Payment {
      return try Services.Registry.Responses.Payment.Builder().mergeFromData(data, extensionRegistry:Services.Registry.Responses.ResponsesRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Responses.Payment {
      return try Services.Registry.Responses.Payment.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) throws -> Services.Registry.Responses.Payment {
      return try Services.Registry.Responses.Payment.Builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Responses.Payment {
      return try Services.Registry.Responses.Payment.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) throws -> Services.Registry.Responses.Payment {
      return try Services.Registry.Responses.Payment.Builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Responses.Payment {
      return try Services.Registry.Responses.Payment.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func getBuilder() -> Services.Registry.Responses.Payment.Builder {
      return Services.Registry.Responses.Payment.classBuilder() as! Services.Registry.Responses.Payment.Builder
    }
    public func getBuilder() -> Services.Registry.Responses.Payment.Builder {
      return classBuilder() as! Services.Registry.Responses.Payment.Builder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Services.Registry.Responses.Payment.Builder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Services.Registry.Responses.Payment.Builder()
    }
    public func toBuilder() throws -> Services.Registry.Responses.Payment.Builder {
      return try Services.Registry.Responses.Payment.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Services.Registry.Responses.Payment) throws -> Services.Registry.Responses.Payment.Builder {
      return try Services.Registry.Responses.Payment.Builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) throws {
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Services.Registry.Responses.Payment"
    }
    override public func className() -> String {
        return "Services.Registry.Responses.Payment"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Services.Registry.Responses.Payment.self
    }
    //Meta information declaration end

    final public class Builder : GeneratedMessageBuilder {
      private var builderResult:Services.Registry.Responses.Payment = Services.Registry.Responses.Payment()
      public func getMessage() -> Services.Registry.Responses.Payment {
          return builderResult
      }

      required override public init () {
         super.init()
      }
      override public var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      public override func clear() -> Services.Registry.Responses.Payment.Builder {
        builderResult = Services.Registry.Responses.Payment()
        return self
      }
      public override func clone() throws -> Services.Registry.Responses.Payment.Builder {
        return try Services.Registry.Responses.Payment.builderWithPrototype(builderResult)
      }
      public override func build() throws -> Services.Registry.Responses.Payment {
           try checkInitialized()
           return buildPartial()
      }
      public func buildPartial() -> Services.Registry.Responses.Payment {
        let returnMe:Services.Registry.Responses.Payment = builderResult
        return returnMe
      }
      public func mergeFrom(other:Services.Registry.Responses.Payment) throws -> Services.Registry.Responses.Payment.Builder {
        if other == Services.Registry.Responses.Payment() {
         return self
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream) throws -> Services.Registry.Responses.Payment.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Responses.Payment.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let tag = try input.readTag()
          switch tag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
    }

  }

  final public class Post : GeneratedMessage, GeneratedMessageProtocol {
    public class func createPost() -> ConcreateExtensionField {
         return ServicesRegistryResponsesPostcreatePost
    }
    public class func updatePost() -> ConcreateExtensionField {
         return ServicesRegistryResponsesPostupdatePost
    }
    public class func getPost() -> ConcreateExtensionField {
         return ServicesRegistryResponsesPostgetPost
    }
    public class func getPosts() -> ConcreateExtensionField {
         return ServicesRegistryResponsesPostgetPosts
    }
    public class func deletePost() -> ConcreateExtensionField {
         return ServicesRegistryResponsesPostdeletePost
    }
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) throws {
      try unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseArrayDelimitedFromInputStream(input:NSInputStream) throws -> Array<Services.Registry.Responses.Post> {
      var mergedArray = Array<Services.Registry.Responses.Post>()
      while let value = try parseFromDelimitedFromInputStream(input) {
        mergedArray += [value]
      }
      return mergedArray
    }
    public class func parseFromDelimitedFromInputStream(input:NSInputStream) throws -> Services.Registry.Responses.Post? {
      return try Services.Registry.Responses.Post.Builder().mergeDelimitedFromInputStream(input)?.build()
    }
    public class func parseFromData(data:NSData) throws -> Services.Registry.Responses.Post {
      return try Services.Registry.Responses.Post.Builder().mergeFromData(data, extensionRegistry:Services.Registry.Responses.ResponsesRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Responses.Post {
      return try Services.Registry.Responses.Post.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) throws -> Services.Registry.Responses.Post {
      return try Services.Registry.Responses.Post.Builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Responses.Post {
      return try Services.Registry.Responses.Post.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) throws -> Services.Registry.Responses.Post {
      return try Services.Registry.Responses.Post.Builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Responses.Post {
      return try Services.Registry.Responses.Post.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func getBuilder() -> Services.Registry.Responses.Post.Builder {
      return Services.Registry.Responses.Post.classBuilder() as! Services.Registry.Responses.Post.Builder
    }
    public func getBuilder() -> Services.Registry.Responses.Post.Builder {
      return classBuilder() as! Services.Registry.Responses.Post.Builder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Services.Registry.Responses.Post.Builder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Services.Registry.Responses.Post.Builder()
    }
    public func toBuilder() throws -> Services.Registry.Responses.Post.Builder {
      return try Services.Registry.Responses.Post.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Services.Registry.Responses.Post) throws -> Services.Registry.Responses.Post.Builder {
      return try Services.Registry.Responses.Post.Builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) throws {
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Services.Registry.Responses.Post"
    }
    override public func className() -> String {
        return "Services.Registry.Responses.Post"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Services.Registry.Responses.Post.self
    }
    //Meta information declaration end

    final public class Builder : GeneratedMessageBuilder {
      private var builderResult:Services.Registry.Responses.Post = Services.Registry.Responses.Post()
      public func getMessage() -> Services.Registry.Responses.Post {
          return builderResult
      }

      required override public init () {
         super.init()
      }
      override public var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      public override func clear() -> Services.Registry.Responses.Post.Builder {
        builderResult = Services.Registry.Responses.Post()
        return self
      }
      public override func clone() throws -> Services.Registry.Responses.Post.Builder {
        return try Services.Registry.Responses.Post.builderWithPrototype(builderResult)
      }
      public override func build() throws -> Services.Registry.Responses.Post {
           try checkInitialized()
           return buildPartial()
      }
      public func buildPartial() -> Services.Registry.Responses.Post {
        let returnMe:Services.Registry.Responses.Post = builderResult
        return returnMe
      }
      public func mergeFrom(other:Services.Registry.Responses.Post) throws -> Services.Registry.Responses.Post.Builder {
        if other == Services.Registry.Responses.Post() {
         return self
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream) throws -> Services.Registry.Responses.Post.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Responses.Post.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let tag = try input.readTag()
          switch tag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
    }

  }

  final public class Feature : GeneratedMessage, GeneratedMessageProtocol {
    public class func getFlags() -> ConcreateExtensionField {
         return ServicesRegistryResponsesFeaturegetFlags
    }
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) throws {
      try unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseArrayDelimitedFromInputStream(input:NSInputStream) throws -> Array<Services.Registry.Responses.Feature> {
      var mergedArray = Array<Services.Registry.Responses.Feature>()
      while let value = try parseFromDelimitedFromInputStream(input) {
        mergedArray += [value]
      }
      return mergedArray
    }
    public class func parseFromDelimitedFromInputStream(input:NSInputStream) throws -> Services.Registry.Responses.Feature? {
      return try Services.Registry.Responses.Feature.Builder().mergeDelimitedFromInputStream(input)?.build()
    }
    public class func parseFromData(data:NSData) throws -> Services.Registry.Responses.Feature {
      return try Services.Registry.Responses.Feature.Builder().mergeFromData(data, extensionRegistry:Services.Registry.Responses.ResponsesRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Responses.Feature {
      return try Services.Registry.Responses.Feature.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) throws -> Services.Registry.Responses.Feature {
      return try Services.Registry.Responses.Feature.Builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Responses.Feature {
      return try Services.Registry.Responses.Feature.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) throws -> Services.Registry.Responses.Feature {
      return try Services.Registry.Responses.Feature.Builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Responses.Feature {
      return try Services.Registry.Responses.Feature.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func getBuilder() -> Services.Registry.Responses.Feature.Builder {
      return Services.Registry.Responses.Feature.classBuilder() as! Services.Registry.Responses.Feature.Builder
    }
    public func getBuilder() -> Services.Registry.Responses.Feature.Builder {
      return classBuilder() as! Services.Registry.Responses.Feature.Builder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Services.Registry.Responses.Feature.Builder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Services.Registry.Responses.Feature.Builder()
    }
    public func toBuilder() throws -> Services.Registry.Responses.Feature.Builder {
      return try Services.Registry.Responses.Feature.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Services.Registry.Responses.Feature) throws -> Services.Registry.Responses.Feature.Builder {
      return try Services.Registry.Responses.Feature.Builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) throws {
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Services.Registry.Responses.Feature"
    }
    override public func className() -> String {
        return "Services.Registry.Responses.Feature"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Services.Registry.Responses.Feature.self
    }
    //Meta information declaration end

    final public class Builder : GeneratedMessageBuilder {
      private var builderResult:Services.Registry.Responses.Feature = Services.Registry.Responses.Feature()
      public func getMessage() -> Services.Registry.Responses.Feature {
          return builderResult
      }

      required override public init () {
         super.init()
      }
      override public var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      public override func clear() -> Services.Registry.Responses.Feature.Builder {
        builderResult = Services.Registry.Responses.Feature()
        return self
      }
      public override func clone() throws -> Services.Registry.Responses.Feature.Builder {
        return try Services.Registry.Responses.Feature.builderWithPrototype(builderResult)
      }
      public override func build() throws -> Services.Registry.Responses.Feature {
           try checkInitialized()
           return buildPartial()
      }
      public func buildPartial() -> Services.Registry.Responses.Feature {
        let returnMe:Services.Registry.Responses.Feature = builderResult
        return returnMe
      }
      public func mergeFrom(other:Services.Registry.Responses.Feature) throws -> Services.Registry.Responses.Feature.Builder {
        if other == Services.Registry.Responses.Feature() {
         return self
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream) throws -> Services.Registry.Responses.Feature.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Responses.Feature.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let tag = try input.readTag()
          switch tag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
    }

  }

  final public class File : GeneratedMessage, GeneratedMessageProtocol {
    public class func startUpload() -> ConcreateExtensionField {
         return ServicesRegistryResponsesFilestartUpload
    }
    public class func completeUpload() -> ConcreateExtensionField {
         return ServicesRegistryResponsesFilecompleteUpload
    }
    public class func delete() -> ConcreateExtensionField {
         return ServicesRegistryResponsesFiledelete
    }
    public class func getFiles() -> ConcreateExtensionField {
         return ServicesRegistryResponsesFilegetFiles
    }
    public class func upload() -> ConcreateExtensionField {
         return ServicesRegistryResponsesFileupload
    }
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) throws {
      try unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseArrayDelimitedFromInputStream(input:NSInputStream) throws -> Array<Services.Registry.Responses.File> {
      var mergedArray = Array<Services.Registry.Responses.File>()
      while let value = try parseFromDelimitedFromInputStream(input) {
        mergedArray += [value]
      }
      return mergedArray
    }
    public class func parseFromDelimitedFromInputStream(input:NSInputStream) throws -> Services.Registry.Responses.File? {
      return try Services.Registry.Responses.File.Builder().mergeDelimitedFromInputStream(input)?.build()
    }
    public class func parseFromData(data:NSData) throws -> Services.Registry.Responses.File {
      return try Services.Registry.Responses.File.Builder().mergeFromData(data, extensionRegistry:Services.Registry.Responses.ResponsesRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Responses.File {
      return try Services.Registry.Responses.File.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) throws -> Services.Registry.Responses.File {
      return try Services.Registry.Responses.File.Builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Responses.File {
      return try Services.Registry.Responses.File.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) throws -> Services.Registry.Responses.File {
      return try Services.Registry.Responses.File.Builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Responses.File {
      return try Services.Registry.Responses.File.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func getBuilder() -> Services.Registry.Responses.File.Builder {
      return Services.Registry.Responses.File.classBuilder() as! Services.Registry.Responses.File.Builder
    }
    public func getBuilder() -> Services.Registry.Responses.File.Builder {
      return classBuilder() as! Services.Registry.Responses.File.Builder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Services.Registry.Responses.File.Builder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Services.Registry.Responses.File.Builder()
    }
    public func toBuilder() throws -> Services.Registry.Responses.File.Builder {
      return try Services.Registry.Responses.File.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Services.Registry.Responses.File) throws -> Services.Registry.Responses.File.Builder {
      return try Services.Registry.Responses.File.Builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) throws {
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Services.Registry.Responses.File"
    }
    override public func className() -> String {
        return "Services.Registry.Responses.File"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Services.Registry.Responses.File.self
    }
    //Meta information declaration end

    final public class Builder : GeneratedMessageBuilder {
      private var builderResult:Services.Registry.Responses.File = Services.Registry.Responses.File()
      public func getMessage() -> Services.Registry.Responses.File {
          return builderResult
      }

      required override public init () {
         super.init()
      }
      override public var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      public override func clear() -> Services.Registry.Responses.File.Builder {
        builderResult = Services.Registry.Responses.File()
        return self
      }
      public override func clone() throws -> Services.Registry.Responses.File.Builder {
        return try Services.Registry.Responses.File.builderWithPrototype(builderResult)
      }
      public override func build() throws -> Services.Registry.Responses.File {
           try checkInitialized()
           return buildPartial()
      }
      public func buildPartial() -> Services.Registry.Responses.File {
        let returnMe:Services.Registry.Responses.File = builderResult
        return returnMe
      }
      public func mergeFrom(other:Services.Registry.Responses.File) throws -> Services.Registry.Responses.File.Builder {
        if other == Services.Registry.Responses.File() {
         return self
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream) throws -> Services.Registry.Responses.File.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Responses.File.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let tag = try input.readTag()
          switch tag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
    }

  }

  final public class Team : GeneratedMessage, GeneratedMessageProtocol {
    public class func addMembers() -> ConcreateExtensionField {
         return ServicesRegistryResponsesTeamaddMembers
    }
    public class func createTeam() -> ConcreateExtensionField {
         return ServicesRegistryResponsesTeamcreateTeam
    }
    public class func getTeam() -> ConcreateExtensionField {
         return ServicesRegistryResponsesTeamgetTeam
    }
    public class func getMembers() -> ConcreateExtensionField {
         return ServicesRegistryResponsesTeamgetMembers
    }
    public class func joinTeam() -> ConcreateExtensionField {
         return ServicesRegistryResponsesTeamjoinTeam
    }
    public class func leaveTeam() -> ConcreateExtensionField {
         return ServicesRegistryResponsesTeamleaveTeam
    }
    public class func removeMembers() -> ConcreateExtensionField {
         return ServicesRegistryResponsesTeamremoveMembers
    }
    public class func updateMembers() -> ConcreateExtensionField {
         return ServicesRegistryResponsesTeamupdateMembers
    }
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) throws {
      try unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseArrayDelimitedFromInputStream(input:NSInputStream) throws -> Array<Services.Registry.Responses.Team> {
      var mergedArray = Array<Services.Registry.Responses.Team>()
      while let value = try parseFromDelimitedFromInputStream(input) {
        mergedArray += [value]
      }
      return mergedArray
    }
    public class func parseFromDelimitedFromInputStream(input:NSInputStream) throws -> Services.Registry.Responses.Team? {
      return try Services.Registry.Responses.Team.Builder().mergeDelimitedFromInputStream(input)?.build()
    }
    public class func parseFromData(data:NSData) throws -> Services.Registry.Responses.Team {
      return try Services.Registry.Responses.Team.Builder().mergeFromData(data, extensionRegistry:Services.Registry.Responses.ResponsesRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Responses.Team {
      return try Services.Registry.Responses.Team.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) throws -> Services.Registry.Responses.Team {
      return try Services.Registry.Responses.Team.Builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Responses.Team {
      return try Services.Registry.Responses.Team.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) throws -> Services.Registry.Responses.Team {
      return try Services.Registry.Responses.Team.Builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Responses.Team {
      return try Services.Registry.Responses.Team.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func getBuilder() -> Services.Registry.Responses.Team.Builder {
      return Services.Registry.Responses.Team.classBuilder() as! Services.Registry.Responses.Team.Builder
    }
    public func getBuilder() -> Services.Registry.Responses.Team.Builder {
      return classBuilder() as! Services.Registry.Responses.Team.Builder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Services.Registry.Responses.Team.Builder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Services.Registry.Responses.Team.Builder()
    }
    public func toBuilder() throws -> Services.Registry.Responses.Team.Builder {
      return try Services.Registry.Responses.Team.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Services.Registry.Responses.Team) throws -> Services.Registry.Responses.Team.Builder {
      return try Services.Registry.Responses.Team.Builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) throws {
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Services.Registry.Responses.Team"
    }
    override public func className() -> String {
        return "Services.Registry.Responses.Team"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Services.Registry.Responses.Team.self
    }
    //Meta information declaration end

    final public class Builder : GeneratedMessageBuilder {
      private var builderResult:Services.Registry.Responses.Team = Services.Registry.Responses.Team()
      public func getMessage() -> Services.Registry.Responses.Team {
          return builderResult
      }

      required override public init () {
         super.init()
      }
      override public var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      public override func clear() -> Services.Registry.Responses.Team.Builder {
        builderResult = Services.Registry.Responses.Team()
        return self
      }
      public override func clone() throws -> Services.Registry.Responses.Team.Builder {
        return try Services.Registry.Responses.Team.builderWithPrototype(builderResult)
      }
      public override func build() throws -> Services.Registry.Responses.Team {
           try checkInitialized()
           return buildPartial()
      }
      public func buildPartial() -> Services.Registry.Responses.Team {
        let returnMe:Services.Registry.Responses.Team = builderResult
        return returnMe
      }
      public func mergeFrom(other:Services.Registry.Responses.Team) throws -> Services.Registry.Responses.Team.Builder {
        if other == Services.Registry.Responses.Team() {
         return self
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream) throws -> Services.Registry.Responses.Team.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Responses.Team.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let tag = try input.readTag()
          switch tag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
    }

  }

}

// @@protoc_insertion_point(global_scope)
