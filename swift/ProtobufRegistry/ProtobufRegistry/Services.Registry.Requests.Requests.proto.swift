// Generated by the protocol buffer compiler.  DO NOT EDIT!
// Source file requests.proto

import Foundation

public extension Services.Registry{ public struct Requests { }}

public func == (lhs: Services.Registry.Requests.User, rhs: Services.Registry.Requests.User) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

public func == (lhs: Services.Registry.Requests.Organization, rhs: Services.Registry.Requests.Organization) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

public func == (lhs: Services.Registry.Requests.Profile, rhs: Services.Registry.Requests.Profile) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

public func == (lhs: Services.Registry.Requests.Search, rhs: Services.Registry.Requests.Search) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

public func == (lhs: Services.Registry.Requests.Media, rhs: Services.Registry.Requests.Media) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

public func == (lhs: Services.Registry.Requests.Notification, rhs: Services.Registry.Requests.Notification) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

public func == (lhs: Services.Registry.Requests.History, rhs: Services.Registry.Requests.History) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

public func == (lhs: Services.Registry.Requests.Payment, rhs: Services.Registry.Requests.Payment) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

public func == (lhs: Services.Registry.Requests.Post, rhs: Services.Registry.Requests.Post) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

public func == (lhs: Services.Registry.Requests.Feature, rhs: Services.Registry.Requests.Feature) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

public func == (lhs: Services.Registry.Requests.File, rhs: Services.Registry.Requests.File) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

public func == (lhs: Services.Registry.Requests.Team, rhs: Services.Registry.Requests.Team) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

public var ServicesRegistryRequestsUsercreateUser:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsUsercreateUserStatic
   }
}
public var ServicesRegistryRequestsUserauthenticateUser:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsUserauthenticateUserStatic
   }
}
public var ServicesRegistryRequestsUsergetUser:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsUsergetUserStatic
   }
}
public var ServicesRegistryRequestsUsercompleteAuthorization:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsUsercompleteAuthorizationStatic
   }
}
public var ServicesRegistryRequestsUsergetIdentities:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsUsergetIdentitiesStatic
   }
}
public var ServicesRegistryRequestsUserbulkCreateUsers:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsUserbulkCreateUsersStatic
   }
}
public var ServicesRegistryRequestsUserrecordDevice:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsUserrecordDeviceStatic
   }
}
public var ServicesRegistryRequestsUserrequestAccess:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsUserrequestAccessStatic
   }
}
public var ServicesRegistryRequestsUserdeleteIdentity:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsUserdeleteIdentityStatic
   }
}
public var ServicesRegistryRequestsUserlogout:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsUserlogoutStatic
   }
}
public var ServicesRegistryRequestsUsergetAuthenticationInstructions:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsUsergetAuthenticationInstructionsStatic
   }
}
public var ServicesRegistryRequestsUsergetActiveDevices:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsUsergetActiveDevicesStatic
   }
}
public var ServicesRegistryRequestsUserbulkUpdateUsers:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsUserbulkUpdateUsersStatic
   }
}
public var ServicesRegistryRequestsOrganizationcreateOrganization:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationcreateOrganizationStatic
   }
}
public var ServicesRegistryRequestsOrganizationgetOrganization:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationgetOrganizationStatic
   }
}
public var ServicesRegistryRequestsOrganizationgetTeam:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationgetTeamStatic
   }
}
public var ServicesRegistryRequestsOrganizationcreateLocation:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationcreateLocationStatic
   }
}
public var ServicesRegistryRequestsOrganizationupdateLocation:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationupdateLocationStatic
   }
}
public var ServicesRegistryRequestsOrganizationgetLocations:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationgetLocationsStatic
   }
}
public var ServicesRegistryRequestsOrganizationgetLocation:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationgetLocationStatic
   }
}
public var ServicesRegistryRequestsOrganizationenableIntegration:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationenableIntegrationStatic
   }
}
public var ServicesRegistryRequestsOrganizationgetIntegration:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationgetIntegrationStatic
   }
}
public var ServicesRegistryRequestsOrganizationdisableIntegration:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationdisableIntegrationStatic
   }
}
public var ServicesRegistryRequestsOrganizationupdateTeam:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationupdateTeamStatic
   }
}
public var ServicesRegistryRequestsOrganizationaddDirectReports:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationaddDirectReportsStatic
   }
}
public var ServicesRegistryRequestsOrganizationgetLocationMembers:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationgetLocationMembersStatic
   }
}
public var ServicesRegistryRequestsOrganizationgetProfileReportingDetails:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationgetProfileReportingDetailsStatic
   }
}
public var ServicesRegistryRequestsOrganizationgetTeamReportingDetails:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationgetTeamReportingDetailsStatic
   }
}
public var ServicesRegistryRequestsOrganizationsetManager:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationsetManagerStatic
   }
}
public var ServicesRegistryRequestsOrganizationaddLocationMembers:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationaddLocationMembersStatic
   }
}
public var ServicesRegistryRequestsOrganizationgetTeams:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationgetTeamsStatic
   }
}
public var ServicesRegistryRequestsOrganizationgetDescendants:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationgetDescendantsStatic
   }
}
public var ServicesRegistryRequestsOrganizationgetSso:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationgetSsoStatic
   }
}
public var ServicesRegistryRequestsOrganizationgetTeamsForProfileIds:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationgetTeamsForProfileIdsStatic
   }
}
public var ServicesRegistryRequestsProfilecreateProfile:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsProfilecreateProfileStatic
   }
}
public var ServicesRegistryRequestsProfilegetExtendedProfile:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsProfilegetExtendedProfileStatic
   }
}
public var ServicesRegistryRequestsProfilegetProfile:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsProfilegetProfileStatic
   }
}
public var ServicesRegistryRequestsProfileupdateProfile:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsProfileupdateProfileStatic
   }
}
public var ServicesRegistryRequestsProfilegetProfiles:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsProfilegetProfilesStatic
   }
}
public var ServicesRegistryRequestsProfilebulkCreateProfiles:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsProfilebulkCreateProfilesStatic
   }
}
public var ServicesRegistryRequestsProfilebulkUpdateProfiles:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsProfilebulkUpdateProfilesStatic
   }
}
public var ServicesRegistryRequestsProfileprofileExists:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsProfileprofileExistsStatic
   }
}
public var ServicesRegistryRequestsSearchsearch:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsSearchsearchStatic
   }
}
public var ServicesRegistryRequestsSearchsearchV2:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsSearchsearchV2Static
   }
}
public var ServicesRegistryRequestsSearchupdateEntities:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsSearchupdateEntitiesStatic
   }
}
public var ServicesRegistryRequestsSearchdeleteEntities:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsSearchdeleteEntitiesStatic
   }
}
public var ServicesRegistryRequestsSearchcreateIndex:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsSearchcreateIndexStatic
   }
}
public var ServicesRegistryRequestsSearchtrackRecent:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsSearchtrackRecentStatic
   }
}
public var ServicesRegistryRequestsSearchgetRecents:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsSearchgetRecentsStatic
   }
}
public var ServicesRegistryRequestsSearchdeleteRecent:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsSearchdeleteRecentStatic
   }
}
public var ServicesRegistryRequestsMediastartImageUpload:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsMediastartImageUploadStatic
   }
}
public var ServicesRegistryRequestsMediacompleteImageUpload:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsMediacompleteImageUploadStatic
   }
}
public var ServicesRegistryRequestsNotificationregisterDevice:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsNotificationregisterDeviceStatic
   }
}
public var ServicesRegistryRequestsNotificationgetPreferences:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsNotificationgetPreferencesStatic
   }
}
public var ServicesRegistryRequestsNotificationupdatePreference:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsNotificationupdatePreferenceStatic
   }
}
public var ServicesRegistryRequestsNotificationsendNotification:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsNotificationsendNotificationStatic
   }
}
public var ServicesRegistryRequestsNotificationnoSearchResults:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsNotificationnoSearchResultsStatic
   }
}
public var ServicesRegistryRequestsHistoryrecordAction:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsHistoryrecordActionStatic
   }
}
public var ServicesRegistryRequestsPaymentstoreToken:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsPaymentstoreTokenStatic
   }
}
public var ServicesRegistryRequestsPostcreatePost:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsPostcreatePostStatic
   }
}
public var ServicesRegistryRequestsPostupdatePost:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsPostupdatePostStatic
   }
}
public var ServicesRegistryRequestsPostgetPost:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsPostgetPostStatic
   }
}
public var ServicesRegistryRequestsPostgetPosts:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsPostgetPostsStatic
   }
}
public var ServicesRegistryRequestsPostdeletePost:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsPostdeletePostStatic
   }
}
public var ServicesRegistryRequestsFeaturegetFlags:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsFeaturegetFlagsStatic
   }
}
public var ServicesRegistryRequestsFilestartUpload:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsFilestartUploadStatic
   }
}
public var ServicesRegistryRequestsFilecompleteUpload:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsFilecompleteUploadStatic
   }
}
public var ServicesRegistryRequestsFiledelete:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsFiledeleteStatic
   }
}
public var ServicesRegistryRequestsFilegetFiles:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsFilegetFilesStatic
   }
}
public var ServicesRegistryRequestsFileupload:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsFileuploadStatic
   }
}
public var ServicesRegistryRequestsTeamaddMembers:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsTeamaddMembersStatic
   }
}
public var ServicesRegistryRequestsTeamcreateTeam:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsTeamcreateTeamStatic
   }
}
public var ServicesRegistryRequestsTeamgetTeam:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsTeamgetTeamStatic
   }
}
public var ServicesRegistryRequestsTeamgetMembers:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsTeamgetMembersStatic
   }
}
public var ServicesRegistryRequestsTeamjoinTeam:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsTeamjoinTeamStatic
   }
}
public var ServicesRegistryRequestsTeamleaveTeam:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsTeamleaveTeamStatic
   }
}
public var ServicesRegistryRequestsTeamremoveMembers:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsTeamremoveMembersStatic
   }
}
public var ServicesRegistryRequestsTeamupdateMembers:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsTeamupdateMembersStatic
   }
}
public extension Services.Registry.Requests {
  public struct RequestsRoot {
    public static var sharedInstance : RequestsRoot {
     struct Static {
         static let instance : RequestsRoot = RequestsRoot()
     }
     return Static.instance
    }
    var ServicesRegistryRequestsUsercreateUserStatic:ConcreateExtensionField
    var ServicesRegistryRequestsUserauthenticateUserStatic:ConcreateExtensionField
    var ServicesRegistryRequestsUsergetUserStatic:ConcreateExtensionField
    var ServicesRegistryRequestsUsercompleteAuthorizationStatic:ConcreateExtensionField
    var ServicesRegistryRequestsUsergetIdentitiesStatic:ConcreateExtensionField
    var ServicesRegistryRequestsUserbulkCreateUsersStatic:ConcreateExtensionField
    var ServicesRegistryRequestsUserrecordDeviceStatic:ConcreateExtensionField
    var ServicesRegistryRequestsUserrequestAccessStatic:ConcreateExtensionField
    var ServicesRegistryRequestsUserdeleteIdentityStatic:ConcreateExtensionField
    var ServicesRegistryRequestsUserlogoutStatic:ConcreateExtensionField
    var ServicesRegistryRequestsUsergetAuthenticationInstructionsStatic:ConcreateExtensionField
    var ServicesRegistryRequestsUsergetActiveDevicesStatic:ConcreateExtensionField
    var ServicesRegistryRequestsUserbulkUpdateUsersStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationcreateOrganizationStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationgetOrganizationStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationgetTeamStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationcreateLocationStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationupdateLocationStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationgetLocationsStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationgetLocationStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationenableIntegrationStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationgetIntegrationStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationdisableIntegrationStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationupdateTeamStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationaddDirectReportsStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationgetLocationMembersStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationgetProfileReportingDetailsStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationgetTeamReportingDetailsStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationsetManagerStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationaddLocationMembersStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationgetTeamsStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationgetDescendantsStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationgetSsoStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationgetTeamsForProfileIdsStatic:ConcreateExtensionField
    var ServicesRegistryRequestsProfilecreateProfileStatic:ConcreateExtensionField
    var ServicesRegistryRequestsProfilegetExtendedProfileStatic:ConcreateExtensionField
    var ServicesRegistryRequestsProfilegetProfileStatic:ConcreateExtensionField
    var ServicesRegistryRequestsProfileupdateProfileStatic:ConcreateExtensionField
    var ServicesRegistryRequestsProfilegetProfilesStatic:ConcreateExtensionField
    var ServicesRegistryRequestsProfilebulkCreateProfilesStatic:ConcreateExtensionField
    var ServicesRegistryRequestsProfilebulkUpdateProfilesStatic:ConcreateExtensionField
    var ServicesRegistryRequestsProfileprofileExistsStatic:ConcreateExtensionField
    var ServicesRegistryRequestsSearchsearchStatic:ConcreateExtensionField
    var ServicesRegistryRequestsSearchsearchV2Static:ConcreateExtensionField
    var ServicesRegistryRequestsSearchupdateEntitiesStatic:ConcreateExtensionField
    var ServicesRegistryRequestsSearchdeleteEntitiesStatic:ConcreateExtensionField
    var ServicesRegistryRequestsSearchcreateIndexStatic:ConcreateExtensionField
    var ServicesRegistryRequestsSearchtrackRecentStatic:ConcreateExtensionField
    var ServicesRegistryRequestsSearchgetRecentsStatic:ConcreateExtensionField
    var ServicesRegistryRequestsSearchdeleteRecentStatic:ConcreateExtensionField
    var ServicesRegistryRequestsMediastartImageUploadStatic:ConcreateExtensionField
    var ServicesRegistryRequestsMediacompleteImageUploadStatic:ConcreateExtensionField
    var ServicesRegistryRequestsNotificationregisterDeviceStatic:ConcreateExtensionField
    var ServicesRegistryRequestsNotificationgetPreferencesStatic:ConcreateExtensionField
    var ServicesRegistryRequestsNotificationupdatePreferenceStatic:ConcreateExtensionField
    var ServicesRegistryRequestsNotificationsendNotificationStatic:ConcreateExtensionField
    var ServicesRegistryRequestsNotificationnoSearchResultsStatic:ConcreateExtensionField
    var ServicesRegistryRequestsHistoryrecordActionStatic:ConcreateExtensionField
    var ServicesRegistryRequestsPaymentstoreTokenStatic:ConcreateExtensionField
    var ServicesRegistryRequestsPostcreatePostStatic:ConcreateExtensionField
    var ServicesRegistryRequestsPostupdatePostStatic:ConcreateExtensionField
    var ServicesRegistryRequestsPostgetPostStatic:ConcreateExtensionField
    var ServicesRegistryRequestsPostgetPostsStatic:ConcreateExtensionField
    var ServicesRegistryRequestsPostdeletePostStatic:ConcreateExtensionField
    var ServicesRegistryRequestsFeaturegetFlagsStatic:ConcreateExtensionField
    var ServicesRegistryRequestsFilestartUploadStatic:ConcreateExtensionField
    var ServicesRegistryRequestsFilecompleteUploadStatic:ConcreateExtensionField
    var ServicesRegistryRequestsFiledeleteStatic:ConcreateExtensionField
    var ServicesRegistryRequestsFilegetFilesStatic:ConcreateExtensionField
    var ServicesRegistryRequestsFileuploadStatic:ConcreateExtensionField
    var ServicesRegistryRequestsTeamaddMembersStatic:ConcreateExtensionField
    var ServicesRegistryRequestsTeamcreateTeamStatic:ConcreateExtensionField
    var ServicesRegistryRequestsTeamgetTeamStatic:ConcreateExtensionField
    var ServicesRegistryRequestsTeamgetMembersStatic:ConcreateExtensionField
    var ServicesRegistryRequestsTeamjoinTeamStatic:ConcreateExtensionField
    var ServicesRegistryRequestsTeamleaveTeamStatic:ConcreateExtensionField
    var ServicesRegistryRequestsTeamremoveMembersStatic:ConcreateExtensionField
    var ServicesRegistryRequestsTeamupdateMembersStatic:ConcreateExtensionField
    public var extensionRegistry:ExtensionRegistry

    init() {
      ServicesRegistryRequestsUsercreateUserStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 100, defaultValue:Services.User.Actions.CreateUser.RequestV1(), messageOrGroupClass:Services.User.Actions.CreateUser.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsUserauthenticateUserStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 102, defaultValue:Services.User.Actions.AuthenticateUser.RequestV1(), messageOrGroupClass:Services.User.Actions.AuthenticateUser.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsUsergetUserStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 103, defaultValue:Services.User.Actions.GetUser.RequestV1(), messageOrGroupClass:Services.User.Actions.GetUser.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsUsercompleteAuthorizationStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 108, defaultValue:Services.User.Actions.CompleteAuthorization.RequestV1(), messageOrGroupClass:Services.User.Actions.CompleteAuthorization.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsUsergetIdentitiesStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 109, defaultValue:Services.User.Actions.GetIdentities.RequestV1(), messageOrGroupClass:Services.User.Actions.GetIdentities.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsUserbulkCreateUsersStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 110, defaultValue:Services.User.Actions.BulkCreateUsers.RequestV1(), messageOrGroupClass:Services.User.Actions.BulkCreateUsers.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsUserrecordDeviceStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 111, defaultValue:Services.User.Actions.RecordDevice.RequestV1(), messageOrGroupClass:Services.User.Actions.RecordDevice.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsUserrequestAccessStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 112, defaultValue:Services.User.Actions.RequestAccess.RequestV1(), messageOrGroupClass:Services.User.Actions.RequestAccess.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsUserdeleteIdentityStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 113, defaultValue:Services.User.Actions.DeleteIdentity.RequestV1(), messageOrGroupClass:Services.User.Actions.DeleteIdentity.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsUserlogoutStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 114, defaultValue:Services.User.Actions.Logout.RequestV1(), messageOrGroupClass:Services.User.Actions.Logout.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsUsergetAuthenticationInstructionsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 115, defaultValue:Services.User.Actions.GetAuthenticationInstructions.RequestV1(), messageOrGroupClass:Services.User.Actions.GetAuthenticationInstructions.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsUsergetActiveDevicesStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 116, defaultValue:Services.User.Actions.GetActiveDevices.RequestV1(), messageOrGroupClass:Services.User.Actions.GetActiveDevices.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsUserbulkUpdateUsersStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 118, defaultValue:Services.User.Actions.BulkUpdateUsers.RequestV1(), messageOrGroupClass:Services.User.Actions.BulkUpdateUsers.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationcreateOrganizationStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 200, defaultValue:Services.Organization.Actions.CreateOrganization.RequestV1(), messageOrGroupClass:Services.Organization.Actions.CreateOrganization.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationgetOrganizationStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 201, defaultValue:Services.Organization.Actions.GetOrganization.RequestV1(), messageOrGroupClass:Services.Organization.Actions.GetOrganization.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationgetTeamStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 202, defaultValue:Services.Organization.Actions.GetTeam.RequestV1(), messageOrGroupClass:Services.Organization.Actions.GetTeam.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationcreateLocationStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 203, defaultValue:Services.Organization.Actions.CreateLocation.RequestV1(), messageOrGroupClass:Services.Organization.Actions.CreateLocation.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationupdateLocationStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 204, defaultValue:Services.Organization.Actions.UpdateLocation.RequestV1(), messageOrGroupClass:Services.Organization.Actions.UpdateLocation.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationgetLocationsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 205, defaultValue:Services.Organization.Actions.GetLocations.RequestV1(), messageOrGroupClass:Services.Organization.Actions.GetLocations.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationgetLocationStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 206, defaultValue:Services.Organization.Actions.GetLocation.RequestV1(), messageOrGroupClass:Services.Organization.Actions.GetLocation.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationenableIntegrationStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 209, defaultValue:Services.Organization.Actions.EnableIntegration.RequestV1(), messageOrGroupClass:Services.Organization.Actions.EnableIntegration.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationgetIntegrationStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 210, defaultValue:Services.Organization.Actions.GetIntegration.RequestV1(), messageOrGroupClass:Services.Organization.Actions.GetIntegration.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationdisableIntegrationStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 211, defaultValue:Services.Organization.Actions.DisableIntegration.RequestV1(), messageOrGroupClass:Services.Organization.Actions.DisableIntegration.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationupdateTeamStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 212, defaultValue:Services.Organization.Actions.UpdateTeam.RequestV1(), messageOrGroupClass:Services.Organization.Actions.UpdateTeam.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationaddDirectReportsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 213, defaultValue:Services.Organization.Actions.AddDirectReports.RequestV1(), messageOrGroupClass:Services.Organization.Actions.AddDirectReports.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationgetLocationMembersStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 214, defaultValue:Services.Organization.Actions.GetLocationMembers.RequestV1(), messageOrGroupClass:Services.Organization.Actions.GetLocationMembers.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationgetProfileReportingDetailsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 215, defaultValue:Services.Organization.Actions.GetProfileReportingDetails.RequestV1(), messageOrGroupClass:Services.Organization.Actions.GetProfileReportingDetails.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationgetTeamReportingDetailsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 216, defaultValue:Services.Organization.Actions.GetTeamReportingDetails.RequestV1(), messageOrGroupClass:Services.Organization.Actions.GetTeamReportingDetails.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationsetManagerStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 217, defaultValue:Services.Organization.Actions.SetManager.RequestV1(), messageOrGroupClass:Services.Organization.Actions.SetManager.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationaddLocationMembersStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 218, defaultValue:Services.Organization.Actions.AddLocationMembers.RequestV1(), messageOrGroupClass:Services.Organization.Actions.AddLocationMembers.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationgetTeamsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 219, defaultValue:Services.Organization.Actions.GetTeams.RequestV1(), messageOrGroupClass:Services.Organization.Actions.GetTeams.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationgetDescendantsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 220, defaultValue:Services.Organization.Actions.GetDescendants.RequestV1(), messageOrGroupClass:Services.Organization.Actions.GetDescendants.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationgetSsoStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 221, defaultValue:Services.Organization.Actions.GetSso.RequestV1(), messageOrGroupClass:Services.Organization.Actions.GetSso.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationgetTeamsForProfileIdsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 222, defaultValue:Services.Organization.Actions.GetTeamsForProfileIds.RequestV1(), messageOrGroupClass:Services.Organization.Actions.GetTeamsForProfileIds.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsProfilecreateProfileStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 300, defaultValue:Services.Profile.Actions.CreateProfile.RequestV1(), messageOrGroupClass:Services.Profile.Actions.CreateProfile.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsProfilegetExtendedProfileStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 301, defaultValue:Services.Profile.Actions.GetExtendedProfile.RequestV1(), messageOrGroupClass:Services.Profile.Actions.GetExtendedProfile.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsProfilegetProfileStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 302, defaultValue:Services.Profile.Actions.GetProfile.RequestV1(), messageOrGroupClass:Services.Profile.Actions.GetProfile.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsProfileupdateProfileStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 306, defaultValue:Services.Profile.Actions.UpdateProfile.RequestV1(), messageOrGroupClass:Services.Profile.Actions.UpdateProfile.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsProfilegetProfilesStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 307, defaultValue:Services.Profile.Actions.GetProfiles.RequestV1(), messageOrGroupClass:Services.Profile.Actions.GetProfiles.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsProfilebulkCreateProfilesStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 312, defaultValue:Services.Profile.Actions.BulkCreateProfiles.RequestV1(), messageOrGroupClass:Services.Profile.Actions.BulkCreateProfiles.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsProfilebulkUpdateProfilesStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 313, defaultValue:Services.Profile.Actions.BulkUpdateProfiles.RequestV1(), messageOrGroupClass:Services.Profile.Actions.BulkUpdateProfiles.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsProfileprofileExistsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 315, defaultValue:Services.Profile.Actions.ProfileExists.RequestV1(), messageOrGroupClass:Services.Profile.Actions.ProfileExists.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsSearchsearchStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 400, defaultValue:Services.Search.Actions.Search.RequestV1(), messageOrGroupClass:Services.Search.Actions.Search.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsSearchsearchV2Static = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 401, defaultValue:Services.Search.Actions.SearchV2.RequestV1(), messageOrGroupClass:Services.Search.Actions.SearchV2.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsSearchupdateEntitiesStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 402, defaultValue:Services.Search.Actions.UpdateEntities.RequestV1(), messageOrGroupClass:Services.Search.Actions.UpdateEntities.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsSearchdeleteEntitiesStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 403, defaultValue:Services.Search.Actions.DeleteEntities.RequestV1(), messageOrGroupClass:Services.Search.Actions.DeleteEntities.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsSearchcreateIndexStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 404, defaultValue:Services.Search.Actions.CreateIndex.RequestV1(), messageOrGroupClass:Services.Search.Actions.CreateIndex.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsSearchtrackRecentStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 405, defaultValue:Services.Search.Actions.TrackRecent.RequestV1(), messageOrGroupClass:Services.Search.Actions.TrackRecent.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsSearchgetRecentsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 406, defaultValue:Services.Search.Actions.GetRecents.RequestV1(), messageOrGroupClass:Services.Search.Actions.GetRecents.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsSearchdeleteRecentStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 407, defaultValue:Services.Search.Actions.DeleteRecent.RequestV1(), messageOrGroupClass:Services.Search.Actions.DeleteRecent.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsMediastartImageUploadStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 600, defaultValue:Services.Media.Actions.StartImageUpload.RequestV1(), messageOrGroupClass:Services.Media.Actions.StartImageUpload.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsMediacompleteImageUploadStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 601, defaultValue:Services.Media.Actions.CompleteImageUpload.RequestV1(), messageOrGroupClass:Services.Media.Actions.CompleteImageUpload.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsNotificationregisterDeviceStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1300, defaultValue:Services.Notification.Actions.RegisterDevice.RequestV1(), messageOrGroupClass:Services.Notification.Actions.RegisterDevice.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsNotificationgetPreferencesStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1301, defaultValue:Services.Notification.Actions.GetPreferences.RequestV1(), messageOrGroupClass:Services.Notification.Actions.GetPreferences.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsNotificationupdatePreferenceStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1302, defaultValue:Services.Notification.Actions.UpdatePreference.RequestV1(), messageOrGroupClass:Services.Notification.Actions.UpdatePreference.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsNotificationsendNotificationStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1303, defaultValue:Services.Notification.Actions.SendNotification.RequestV1(), messageOrGroupClass:Services.Notification.Actions.SendNotification.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsNotificationnoSearchResultsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1304, defaultValue:Services.Notification.Actions.NoSearchResults.RequestV1(), messageOrGroupClass:Services.Notification.Actions.NoSearchResults.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsHistoryrecordActionStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1400, defaultValue:Services.History.Actions.RecordAction.RequestV1(), messageOrGroupClass:Services.History.Actions.RecordAction.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsPaymentstoreTokenStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1500, defaultValue:Services.Payment.Actions.StoreToken.RequestV1(), messageOrGroupClass:Services.Payment.Actions.StoreToken.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsPostcreatePostStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1600, defaultValue:Services.Post.Actions.CreatePost.RequestV1(), messageOrGroupClass:Services.Post.Actions.CreatePost.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsPostupdatePostStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1601, defaultValue:Services.Post.Actions.UpdatePost.RequestV1(), messageOrGroupClass:Services.Post.Actions.UpdatePost.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsPostgetPostStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1602, defaultValue:Services.Post.Actions.GetPost.RequestV1(), messageOrGroupClass:Services.Post.Actions.GetPost.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsPostgetPostsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1603, defaultValue:Services.Post.Actions.GetPosts.RequestV1(), messageOrGroupClass:Services.Post.Actions.GetPosts.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsPostdeletePostStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1604, defaultValue:Services.Post.Actions.DeletePost.RequestV1(), messageOrGroupClass:Services.Post.Actions.DeletePost.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsFeaturegetFlagsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1700, defaultValue:Services.Feature.Actions.GetFlags.RequestV1(), messageOrGroupClass:Services.Feature.Actions.GetFlags.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsFilestartUploadStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1800, defaultValue:Services.File.Actions.StartUpload.RequestV1(), messageOrGroupClass:Services.File.Actions.StartUpload.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsFilecompleteUploadStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1801, defaultValue:Services.File.Actions.CompleteUpload.RequestV1(), messageOrGroupClass:Services.File.Actions.CompleteUpload.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsFiledeleteStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1802, defaultValue:Services.File.Actions.Delete.RequestV1(), messageOrGroupClass:Services.File.Actions.Delete.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsFilegetFilesStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1803, defaultValue:Services.File.Actions.GetFiles.RequestV1(), messageOrGroupClass:Services.File.Actions.GetFiles.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsFileuploadStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1804, defaultValue:Services.File.Actions.Upload.RequestV1(), messageOrGroupClass:Services.File.Actions.Upload.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsTeamaddMembersStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1900, defaultValue:Services.Team.Actions.AddMembers.RequestV1(), messageOrGroupClass:Services.Team.Actions.AddMembers.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsTeamcreateTeamStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1901, defaultValue:Services.Team.Actions.CreateTeam.RequestV1(), messageOrGroupClass:Services.Team.Actions.CreateTeam.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsTeamgetTeamStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1902, defaultValue:Services.Team.Actions.GetTeam.RequestV1(), messageOrGroupClass:Services.Team.Actions.GetTeam.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsTeamgetMembersStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1903, defaultValue:Services.Team.Actions.GetMembers.RequestV1(), messageOrGroupClass:Services.Team.Actions.GetMembers.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsTeamjoinTeamStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1904, defaultValue:Services.Team.Actions.JoinTeam.RequestV1(), messageOrGroupClass:Services.Team.Actions.JoinTeam.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsTeamleaveTeamStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1905, defaultValue:Services.Team.Actions.LeaveTeam.RequestV1(), messageOrGroupClass:Services.Team.Actions.LeaveTeam.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsTeamremoveMembersStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1906, defaultValue:Services.Team.Actions.RemoveMembers.RequestV1(), messageOrGroupClass:Services.Team.Actions.RemoveMembers.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsTeamupdateMembersStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1907, defaultValue:Services.Team.Actions.UpdateMembers.RequestV1(), messageOrGroupClass:Services.Team.Actions.UpdateMembers.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      extensionRegistry = ExtensionRegistry()
      registerAllExtensions(extensionRegistry)
      Soa.SoaRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.CreateUser.CreateUserRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.AuthenticateUser.AuthenticateUserRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.GetUser.GetUserRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.CompleteAuthorization.CompleteAuthorizationRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.GetIdentities.GetIdentitiesRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.BulkCreateUsers.BulkCreateUsersRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.RecordDevice.RecordDeviceRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.RequestAccess.RequestAccessRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.DeleteIdentity.DeleteIdentityRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.Logout.LogoutRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.GetAuthenticationInstructions.GetAuthenticationInstructionsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.GetActiveDevices.GetActiveDevicesRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.BulkUpdateUsers.BulkUpdateUsersRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.CreateOrganization.CreateOrganizationRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.GetTeam.GetTeamRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.GetOrganization.GetOrganizationRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.CreateLocation.CreateLocationRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.UpdateLocation.UpdateLocationRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.GetLocations.GetLocationsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.GetLocation.GetLocationRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.EnableIntegration.EnableIntegrationRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.GetIntegration.GetIntegrationRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.DisableIntegration.DisableIntegrationRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.UpdateTeam.UpdateTeamRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.AddDirectReports.AddDirectReportsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.GetLocationMembers.GetLocationMembersRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.GetProfileReportingDetails.GetProfileReportingDetailsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.GetTeamReportingDetails.GetTeamReportingDetailsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.SetManager.SetManagerRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.AddLocationMembers.AddLocationMembersRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.GetTeams.GetTeamsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.GetDescendants.GetDescendantsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.GetSso.GetSsoRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.GetTeamsForProfileIds.GetTeamsForProfileIdsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.CreateProfile.CreateProfileRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.GetExtendedProfile.GetExtendedProfileRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.GetProfile.GetProfileRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.UpdateProfile.UpdateProfileRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.GetProfiles.GetProfilesRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.BulkCreateProfiles.BulkCreateProfilesRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.BulkUpdateProfiles.BulkUpdateProfilesRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.ProfileExists.ProfileExistsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Search.Actions.Search.SearchRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Search.Actions.UpdateEntities.UpdateEntitiesRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Search.Actions.SearchV2.SearchV2Root.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Search.Actions.DeleteEntities.DeleteEntitiesRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Search.Actions.CreateIndex.CreateIndexRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Search.Actions.TrackRecent.TrackRecentRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Search.Actions.GetRecents.GetRecentsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Search.Actions.DeleteRecent.DeleteRecentRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Media.Actions.StartImageUpload.StartImageUploadRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Media.Actions.CompleteImageUpload.CompleteImageUploadRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Notification.Actions.RegisterDevice.RegisterDeviceRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Notification.Actions.GetPreferences.GetPreferencesRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Notification.Actions.UpdatePreference.UpdatePreferenceRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Notification.Actions.SendNotification.SendNotificationRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Notification.Actions.NoSearchResults.NoSearchResultsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.History.Actions.RecordAction.RecordActionRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Payment.Actions.StoreToken.StoreTokenRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Post.Actions.CreatePost.CreatePostRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Post.Actions.GetPost.GetPostRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Post.Actions.GetPosts.GetPostsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Post.Actions.UpdatePost.UpdatePostRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Post.Actions.DeletePost.DeletePostRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Feature.Actions.GetFlags.GetFlagsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.File.Actions.StartUpload.StartUploadRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.File.Actions.CompleteUpload.CompleteUploadRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.File.Actions.Delete.DeleteRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.File.Actions.GetFiles.GetFilesRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.File.Actions.Upload.UploadRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Team.Actions.AddMembers.AddMembersRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Team.Actions.CreateTeam.CreateTeamRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Team.Actions.GetTeam.GetTeamRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Team.Actions.GetMembers.GetMembersRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Team.Actions.JoinTeam.JoinTeamRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Team.Actions.LeaveTeam.LeaveTeamRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Team.Actions.RemoveMembers.RemoveMembersRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Team.Actions.UpdateMembers.UpdateMembersRoot.sharedInstance.registerAllExtensions(extensionRegistry)
    }
    public func registerAllExtensions(registry:ExtensionRegistry) {
      registry.addExtension(ServicesRegistryRequestsUsercreateUserStatic)
      registry.addExtension(ServicesRegistryRequestsUserauthenticateUserStatic)
      registry.addExtension(ServicesRegistryRequestsUsergetUserStatic)
      registry.addExtension(ServicesRegistryRequestsUsercompleteAuthorizationStatic)
      registry.addExtension(ServicesRegistryRequestsUsergetIdentitiesStatic)
      registry.addExtension(ServicesRegistryRequestsUserbulkCreateUsersStatic)
      registry.addExtension(ServicesRegistryRequestsUserrecordDeviceStatic)
      registry.addExtension(ServicesRegistryRequestsUserrequestAccessStatic)
      registry.addExtension(ServicesRegistryRequestsUserdeleteIdentityStatic)
      registry.addExtension(ServicesRegistryRequestsUserlogoutStatic)
      registry.addExtension(ServicesRegistryRequestsUsergetAuthenticationInstructionsStatic)
      registry.addExtension(ServicesRegistryRequestsUsergetActiveDevicesStatic)
      registry.addExtension(ServicesRegistryRequestsUserbulkUpdateUsersStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationcreateOrganizationStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationgetOrganizationStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationgetTeamStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationcreateLocationStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationupdateLocationStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationgetLocationsStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationgetLocationStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationenableIntegrationStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationgetIntegrationStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationdisableIntegrationStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationupdateTeamStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationaddDirectReportsStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationgetLocationMembersStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationgetProfileReportingDetailsStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationgetTeamReportingDetailsStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationsetManagerStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationaddLocationMembersStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationgetTeamsStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationgetDescendantsStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationgetSsoStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationgetTeamsForProfileIdsStatic)
      registry.addExtension(ServicesRegistryRequestsProfilecreateProfileStatic)
      registry.addExtension(ServicesRegistryRequestsProfilegetExtendedProfileStatic)
      registry.addExtension(ServicesRegistryRequestsProfilegetProfileStatic)
      registry.addExtension(ServicesRegistryRequestsProfileupdateProfileStatic)
      registry.addExtension(ServicesRegistryRequestsProfilegetProfilesStatic)
      registry.addExtension(ServicesRegistryRequestsProfilebulkCreateProfilesStatic)
      registry.addExtension(ServicesRegistryRequestsProfilebulkUpdateProfilesStatic)
      registry.addExtension(ServicesRegistryRequestsProfileprofileExistsStatic)
      registry.addExtension(ServicesRegistryRequestsSearchsearchStatic)
      registry.addExtension(ServicesRegistryRequestsSearchsearchV2Static)
      registry.addExtension(ServicesRegistryRequestsSearchupdateEntitiesStatic)
      registry.addExtension(ServicesRegistryRequestsSearchdeleteEntitiesStatic)
      registry.addExtension(ServicesRegistryRequestsSearchcreateIndexStatic)
      registry.addExtension(ServicesRegistryRequestsSearchtrackRecentStatic)
      registry.addExtension(ServicesRegistryRequestsSearchgetRecentsStatic)
      registry.addExtension(ServicesRegistryRequestsSearchdeleteRecentStatic)
      registry.addExtension(ServicesRegistryRequestsMediastartImageUploadStatic)
      registry.addExtension(ServicesRegistryRequestsMediacompleteImageUploadStatic)
      registry.addExtension(ServicesRegistryRequestsNotificationregisterDeviceStatic)
      registry.addExtension(ServicesRegistryRequestsNotificationgetPreferencesStatic)
      registry.addExtension(ServicesRegistryRequestsNotificationupdatePreferenceStatic)
      registry.addExtension(ServicesRegistryRequestsNotificationsendNotificationStatic)
      registry.addExtension(ServicesRegistryRequestsNotificationnoSearchResultsStatic)
      registry.addExtension(ServicesRegistryRequestsHistoryrecordActionStatic)
      registry.addExtension(ServicesRegistryRequestsPaymentstoreTokenStatic)
      registry.addExtension(ServicesRegistryRequestsPostcreatePostStatic)
      registry.addExtension(ServicesRegistryRequestsPostupdatePostStatic)
      registry.addExtension(ServicesRegistryRequestsPostgetPostStatic)
      registry.addExtension(ServicesRegistryRequestsPostgetPostsStatic)
      registry.addExtension(ServicesRegistryRequestsPostdeletePostStatic)
      registry.addExtension(ServicesRegistryRequestsFeaturegetFlagsStatic)
      registry.addExtension(ServicesRegistryRequestsFilestartUploadStatic)
      registry.addExtension(ServicesRegistryRequestsFilecompleteUploadStatic)
      registry.addExtension(ServicesRegistryRequestsFiledeleteStatic)
      registry.addExtension(ServicesRegistryRequestsFilegetFilesStatic)
      registry.addExtension(ServicesRegistryRequestsFileuploadStatic)
      registry.addExtension(ServicesRegistryRequestsTeamaddMembersStatic)
      registry.addExtension(ServicesRegistryRequestsTeamcreateTeamStatic)
      registry.addExtension(ServicesRegistryRequestsTeamgetTeamStatic)
      registry.addExtension(ServicesRegistryRequestsTeamgetMembersStatic)
      registry.addExtension(ServicesRegistryRequestsTeamjoinTeamStatic)
      registry.addExtension(ServicesRegistryRequestsTeamleaveTeamStatic)
      registry.addExtension(ServicesRegistryRequestsTeamremoveMembersStatic)
      registry.addExtension(ServicesRegistryRequestsTeamupdateMembersStatic)
    }
  }

  final public class User : GeneratedMessage, GeneratedMessageProtocol {
    public class func createUser() -> ConcreateExtensionField {
         return ServicesRegistryRequestsUsercreateUser
    }
    public class func authenticateUser() -> ConcreateExtensionField {
         return ServicesRegistryRequestsUserauthenticateUser
    }
    public class func getUser() -> ConcreateExtensionField {
         return ServicesRegistryRequestsUsergetUser
    }
    public class func completeAuthorization() -> ConcreateExtensionField {
         return ServicesRegistryRequestsUsercompleteAuthorization
    }
    public class func getIdentities() -> ConcreateExtensionField {
         return ServicesRegistryRequestsUsergetIdentities
    }
    public class func bulkCreateUsers() -> ConcreateExtensionField {
         return ServicesRegistryRequestsUserbulkCreateUsers
    }
    public class func recordDevice() -> ConcreateExtensionField {
         return ServicesRegistryRequestsUserrecordDevice
    }
    public class func requestAccess() -> ConcreateExtensionField {
         return ServicesRegistryRequestsUserrequestAccess
    }
    public class func deleteIdentity() -> ConcreateExtensionField {
         return ServicesRegistryRequestsUserdeleteIdentity
    }
    public class func logout() -> ConcreateExtensionField {
         return ServicesRegistryRequestsUserlogout
    }
    public class func getAuthenticationInstructions() -> ConcreateExtensionField {
         return ServicesRegistryRequestsUsergetAuthenticationInstructions
    }
    public class func getActiveDevices() -> ConcreateExtensionField {
         return ServicesRegistryRequestsUsergetActiveDevices
    }
    public class func bulkUpdateUsers() -> ConcreateExtensionField {
         return ServicesRegistryRequestsUserbulkUpdateUsers
    }
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) throws {
      try unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseArrayDelimitedFromInputStream(input:NSInputStream) throws -> Array<Services.Registry.Requests.User> {
      var mergedArray = Array<Services.Registry.Requests.User>()
      while let value = try parseFromDelimitedFromInputStream(input) {
        mergedArray += [value]
      }
      return mergedArray
    }
    public class func parseFromDelimitedFromInputStream(input:NSInputStream) throws -> Services.Registry.Requests.User? {
      return try Services.Registry.Requests.User.Builder().mergeDelimitedFromInputStream(input)?.build()
    }
    public class func parseFromData(data:NSData) throws -> Services.Registry.Requests.User {
      return try Services.Registry.Requests.User.Builder().mergeFromData(data, extensionRegistry:Services.Registry.Requests.RequestsRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Requests.User {
      return try Services.Registry.Requests.User.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) throws -> Services.Registry.Requests.User {
      return try Services.Registry.Requests.User.Builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Requests.User {
      return try Services.Registry.Requests.User.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) throws -> Services.Registry.Requests.User {
      return try Services.Registry.Requests.User.Builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Requests.User {
      return try Services.Registry.Requests.User.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func getBuilder() -> Services.Registry.Requests.User.Builder {
      return Services.Registry.Requests.User.classBuilder() as! Services.Registry.Requests.User.Builder
    }
    public func getBuilder() -> Services.Registry.Requests.User.Builder {
      return classBuilder() as! Services.Registry.Requests.User.Builder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.User.Builder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.User.Builder()
    }
    public func toBuilder() throws -> Services.Registry.Requests.User.Builder {
      return try Services.Registry.Requests.User.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Services.Registry.Requests.User) throws -> Services.Registry.Requests.User.Builder {
      return try Services.Registry.Requests.User.Builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) throws {
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Services.Registry.Requests.User"
    }
    override public func className() -> String {
        return "Services.Registry.Requests.User"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Services.Registry.Requests.User.self
    }
    //Meta information declaration end

    final public class Builder : GeneratedMessageBuilder {
      private var builderResult:Services.Registry.Requests.User = Services.Registry.Requests.User()
      public func getMessage() -> Services.Registry.Requests.User {
          return builderResult
      }

      required override public init () {
         super.init()
      }
      override public var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      public override func clear() -> Services.Registry.Requests.User.Builder {
        builderResult = Services.Registry.Requests.User()
        return self
      }
      public override func clone() throws -> Services.Registry.Requests.User.Builder {
        return try Services.Registry.Requests.User.builderWithPrototype(builderResult)
      }
      public override func build() throws -> Services.Registry.Requests.User {
           try checkInitialized()
           return buildPartial()
      }
      public func buildPartial() -> Services.Registry.Requests.User {
        let returnMe:Services.Registry.Requests.User = builderResult
        return returnMe
      }
      public func mergeFrom(other:Services.Registry.Requests.User) throws -> Services.Registry.Requests.User.Builder {
        if other == Services.Registry.Requests.User() {
         return self
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream) throws -> Services.Registry.Requests.User.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Requests.User.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let tag = try input.readTag()
          switch tag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
    }

  }

  final public class Organization : GeneratedMessage, GeneratedMessageProtocol {
    public class func createOrganization() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationcreateOrganization
    }
    public class func getOrganization() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationgetOrganization
    }
    public class func getTeam() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationgetTeam
    }
    public class func createLocation() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationcreateLocation
    }
    public class func updateLocation() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationupdateLocation
    }
    public class func getLocations() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationgetLocations
    }
    public class func getLocation() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationgetLocation
    }
    public class func enableIntegration() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationenableIntegration
    }
    public class func getIntegration() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationgetIntegration
    }
    public class func disableIntegration() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationdisableIntegration
    }
    public class func updateTeam() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationupdateTeam
    }
    public class func addDirectReports() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationaddDirectReports
    }
    public class func getLocationMembers() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationgetLocationMembers
    }
    public class func getProfileReportingDetails() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationgetProfileReportingDetails
    }
    public class func getTeamReportingDetails() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationgetTeamReportingDetails
    }
    public class func setManager() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationsetManager
    }
    public class func addLocationMembers() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationaddLocationMembers
    }
    public class func getTeams() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationgetTeams
    }
    public class func getDescendants() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationgetDescendants
    }
    public class func getSso() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationgetSso
    }
    public class func getTeamsForProfileIds() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationgetTeamsForProfileIds
    }
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) throws {
      try unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseArrayDelimitedFromInputStream(input:NSInputStream) throws -> Array<Services.Registry.Requests.Organization> {
      var mergedArray = Array<Services.Registry.Requests.Organization>()
      while let value = try parseFromDelimitedFromInputStream(input) {
        mergedArray += [value]
      }
      return mergedArray
    }
    public class func parseFromDelimitedFromInputStream(input:NSInputStream) throws -> Services.Registry.Requests.Organization? {
      return try Services.Registry.Requests.Organization.Builder().mergeDelimitedFromInputStream(input)?.build()
    }
    public class func parseFromData(data:NSData) throws -> Services.Registry.Requests.Organization {
      return try Services.Registry.Requests.Organization.Builder().mergeFromData(data, extensionRegistry:Services.Registry.Requests.RequestsRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Requests.Organization {
      return try Services.Registry.Requests.Organization.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) throws -> Services.Registry.Requests.Organization {
      return try Services.Registry.Requests.Organization.Builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Requests.Organization {
      return try Services.Registry.Requests.Organization.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) throws -> Services.Registry.Requests.Organization {
      return try Services.Registry.Requests.Organization.Builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Requests.Organization {
      return try Services.Registry.Requests.Organization.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func getBuilder() -> Services.Registry.Requests.Organization.Builder {
      return Services.Registry.Requests.Organization.classBuilder() as! Services.Registry.Requests.Organization.Builder
    }
    public func getBuilder() -> Services.Registry.Requests.Organization.Builder {
      return classBuilder() as! Services.Registry.Requests.Organization.Builder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.Organization.Builder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.Organization.Builder()
    }
    public func toBuilder() throws -> Services.Registry.Requests.Organization.Builder {
      return try Services.Registry.Requests.Organization.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Services.Registry.Requests.Organization) throws -> Services.Registry.Requests.Organization.Builder {
      return try Services.Registry.Requests.Organization.Builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) throws {
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Services.Registry.Requests.Organization"
    }
    override public func className() -> String {
        return "Services.Registry.Requests.Organization"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Services.Registry.Requests.Organization.self
    }
    //Meta information declaration end

    final public class Builder : GeneratedMessageBuilder {
      private var builderResult:Services.Registry.Requests.Organization = Services.Registry.Requests.Organization()
      public func getMessage() -> Services.Registry.Requests.Organization {
          return builderResult
      }

      required override public init () {
         super.init()
      }
      override public var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      public override func clear() -> Services.Registry.Requests.Organization.Builder {
        builderResult = Services.Registry.Requests.Organization()
        return self
      }
      public override func clone() throws -> Services.Registry.Requests.Organization.Builder {
        return try Services.Registry.Requests.Organization.builderWithPrototype(builderResult)
      }
      public override func build() throws -> Services.Registry.Requests.Organization {
           try checkInitialized()
           return buildPartial()
      }
      public func buildPartial() -> Services.Registry.Requests.Organization {
        let returnMe:Services.Registry.Requests.Organization = builderResult
        return returnMe
      }
      public func mergeFrom(other:Services.Registry.Requests.Organization) throws -> Services.Registry.Requests.Organization.Builder {
        if other == Services.Registry.Requests.Organization() {
         return self
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream) throws -> Services.Registry.Requests.Organization.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Requests.Organization.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let tag = try input.readTag()
          switch tag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
    }

  }

  final public class Profile : GeneratedMessage, GeneratedMessageProtocol {
    public class func createProfile() -> ConcreateExtensionField {
         return ServicesRegistryRequestsProfilecreateProfile
    }
    public class func getExtendedProfile() -> ConcreateExtensionField {
         return ServicesRegistryRequestsProfilegetExtendedProfile
    }
    public class func getProfile() -> ConcreateExtensionField {
         return ServicesRegistryRequestsProfilegetProfile
    }
    public class func updateProfile() -> ConcreateExtensionField {
         return ServicesRegistryRequestsProfileupdateProfile
    }
    public class func getProfiles() -> ConcreateExtensionField {
         return ServicesRegistryRequestsProfilegetProfiles
    }
    public class func bulkCreateProfiles() -> ConcreateExtensionField {
         return ServicesRegistryRequestsProfilebulkCreateProfiles
    }
    public class func bulkUpdateProfiles() -> ConcreateExtensionField {
         return ServicesRegistryRequestsProfilebulkUpdateProfiles
    }
    public class func profileExists() -> ConcreateExtensionField {
         return ServicesRegistryRequestsProfileprofileExists
    }
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) throws {
      try unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseArrayDelimitedFromInputStream(input:NSInputStream) throws -> Array<Services.Registry.Requests.Profile> {
      var mergedArray = Array<Services.Registry.Requests.Profile>()
      while let value = try parseFromDelimitedFromInputStream(input) {
        mergedArray += [value]
      }
      return mergedArray
    }
    public class func parseFromDelimitedFromInputStream(input:NSInputStream) throws -> Services.Registry.Requests.Profile? {
      return try Services.Registry.Requests.Profile.Builder().mergeDelimitedFromInputStream(input)?.build()
    }
    public class func parseFromData(data:NSData) throws -> Services.Registry.Requests.Profile {
      return try Services.Registry.Requests.Profile.Builder().mergeFromData(data, extensionRegistry:Services.Registry.Requests.RequestsRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Requests.Profile {
      return try Services.Registry.Requests.Profile.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) throws -> Services.Registry.Requests.Profile {
      return try Services.Registry.Requests.Profile.Builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Requests.Profile {
      return try Services.Registry.Requests.Profile.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) throws -> Services.Registry.Requests.Profile {
      return try Services.Registry.Requests.Profile.Builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Requests.Profile {
      return try Services.Registry.Requests.Profile.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func getBuilder() -> Services.Registry.Requests.Profile.Builder {
      return Services.Registry.Requests.Profile.classBuilder() as! Services.Registry.Requests.Profile.Builder
    }
    public func getBuilder() -> Services.Registry.Requests.Profile.Builder {
      return classBuilder() as! Services.Registry.Requests.Profile.Builder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.Profile.Builder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.Profile.Builder()
    }
    public func toBuilder() throws -> Services.Registry.Requests.Profile.Builder {
      return try Services.Registry.Requests.Profile.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Services.Registry.Requests.Profile) throws -> Services.Registry.Requests.Profile.Builder {
      return try Services.Registry.Requests.Profile.Builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) throws {
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Services.Registry.Requests.Profile"
    }
    override public func className() -> String {
        return "Services.Registry.Requests.Profile"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Services.Registry.Requests.Profile.self
    }
    //Meta information declaration end

    final public class Builder : GeneratedMessageBuilder {
      private var builderResult:Services.Registry.Requests.Profile = Services.Registry.Requests.Profile()
      public func getMessage() -> Services.Registry.Requests.Profile {
          return builderResult
      }

      required override public init () {
         super.init()
      }
      override public var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      public override func clear() -> Services.Registry.Requests.Profile.Builder {
        builderResult = Services.Registry.Requests.Profile()
        return self
      }
      public override func clone() throws -> Services.Registry.Requests.Profile.Builder {
        return try Services.Registry.Requests.Profile.builderWithPrototype(builderResult)
      }
      public override func build() throws -> Services.Registry.Requests.Profile {
           try checkInitialized()
           return buildPartial()
      }
      public func buildPartial() -> Services.Registry.Requests.Profile {
        let returnMe:Services.Registry.Requests.Profile = builderResult
        return returnMe
      }
      public func mergeFrom(other:Services.Registry.Requests.Profile) throws -> Services.Registry.Requests.Profile.Builder {
        if other == Services.Registry.Requests.Profile() {
         return self
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream) throws -> Services.Registry.Requests.Profile.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Requests.Profile.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let tag = try input.readTag()
          switch tag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
    }

  }

  final public class Search : GeneratedMessage, GeneratedMessageProtocol {
    public class func search() -> ConcreateExtensionField {
         return ServicesRegistryRequestsSearchsearch
    }
    public class func searchV2() -> ConcreateExtensionField {
         return ServicesRegistryRequestsSearchsearchV2
    }
    public class func updateEntities() -> ConcreateExtensionField {
         return ServicesRegistryRequestsSearchupdateEntities
    }
    public class func deleteEntities() -> ConcreateExtensionField {
         return ServicesRegistryRequestsSearchdeleteEntities
    }
    public class func createIndex() -> ConcreateExtensionField {
         return ServicesRegistryRequestsSearchcreateIndex
    }
    public class func trackRecent() -> ConcreateExtensionField {
         return ServicesRegistryRequestsSearchtrackRecent
    }
    public class func getRecents() -> ConcreateExtensionField {
         return ServicesRegistryRequestsSearchgetRecents
    }
    public class func deleteRecent() -> ConcreateExtensionField {
         return ServicesRegistryRequestsSearchdeleteRecent
    }
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) throws {
      try unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseArrayDelimitedFromInputStream(input:NSInputStream) throws -> Array<Services.Registry.Requests.Search> {
      var mergedArray = Array<Services.Registry.Requests.Search>()
      while let value = try parseFromDelimitedFromInputStream(input) {
        mergedArray += [value]
      }
      return mergedArray
    }
    public class func parseFromDelimitedFromInputStream(input:NSInputStream) throws -> Services.Registry.Requests.Search? {
      return try Services.Registry.Requests.Search.Builder().mergeDelimitedFromInputStream(input)?.build()
    }
    public class func parseFromData(data:NSData) throws -> Services.Registry.Requests.Search {
      return try Services.Registry.Requests.Search.Builder().mergeFromData(data, extensionRegistry:Services.Registry.Requests.RequestsRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Requests.Search {
      return try Services.Registry.Requests.Search.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) throws -> Services.Registry.Requests.Search {
      return try Services.Registry.Requests.Search.Builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Requests.Search {
      return try Services.Registry.Requests.Search.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) throws -> Services.Registry.Requests.Search {
      return try Services.Registry.Requests.Search.Builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Requests.Search {
      return try Services.Registry.Requests.Search.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func getBuilder() -> Services.Registry.Requests.Search.Builder {
      return Services.Registry.Requests.Search.classBuilder() as! Services.Registry.Requests.Search.Builder
    }
    public func getBuilder() -> Services.Registry.Requests.Search.Builder {
      return classBuilder() as! Services.Registry.Requests.Search.Builder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.Search.Builder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.Search.Builder()
    }
    public func toBuilder() throws -> Services.Registry.Requests.Search.Builder {
      return try Services.Registry.Requests.Search.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Services.Registry.Requests.Search) throws -> Services.Registry.Requests.Search.Builder {
      return try Services.Registry.Requests.Search.Builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) throws {
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Services.Registry.Requests.Search"
    }
    override public func className() -> String {
        return "Services.Registry.Requests.Search"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Services.Registry.Requests.Search.self
    }
    //Meta information declaration end

    final public class Builder : GeneratedMessageBuilder {
      private var builderResult:Services.Registry.Requests.Search = Services.Registry.Requests.Search()
      public func getMessage() -> Services.Registry.Requests.Search {
          return builderResult
      }

      required override public init () {
         super.init()
      }
      override public var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      public override func clear() -> Services.Registry.Requests.Search.Builder {
        builderResult = Services.Registry.Requests.Search()
        return self
      }
      public override func clone() throws -> Services.Registry.Requests.Search.Builder {
        return try Services.Registry.Requests.Search.builderWithPrototype(builderResult)
      }
      public override func build() throws -> Services.Registry.Requests.Search {
           try checkInitialized()
           return buildPartial()
      }
      public func buildPartial() -> Services.Registry.Requests.Search {
        let returnMe:Services.Registry.Requests.Search = builderResult
        return returnMe
      }
      public func mergeFrom(other:Services.Registry.Requests.Search) throws -> Services.Registry.Requests.Search.Builder {
        if other == Services.Registry.Requests.Search() {
         return self
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream) throws -> Services.Registry.Requests.Search.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Requests.Search.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let tag = try input.readTag()
          switch tag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
    }

  }

  final public class Media : GeneratedMessage, GeneratedMessageProtocol {
    public class func startImageUpload() -> ConcreateExtensionField {
         return ServicesRegistryRequestsMediastartImageUpload
    }
    public class func completeImageUpload() -> ConcreateExtensionField {
         return ServicesRegistryRequestsMediacompleteImageUpload
    }
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) throws {
      try unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseArrayDelimitedFromInputStream(input:NSInputStream) throws -> Array<Services.Registry.Requests.Media> {
      var mergedArray = Array<Services.Registry.Requests.Media>()
      while let value = try parseFromDelimitedFromInputStream(input) {
        mergedArray += [value]
      }
      return mergedArray
    }
    public class func parseFromDelimitedFromInputStream(input:NSInputStream) throws -> Services.Registry.Requests.Media? {
      return try Services.Registry.Requests.Media.Builder().mergeDelimitedFromInputStream(input)?.build()
    }
    public class func parseFromData(data:NSData) throws -> Services.Registry.Requests.Media {
      return try Services.Registry.Requests.Media.Builder().mergeFromData(data, extensionRegistry:Services.Registry.Requests.RequestsRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Requests.Media {
      return try Services.Registry.Requests.Media.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) throws -> Services.Registry.Requests.Media {
      return try Services.Registry.Requests.Media.Builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Requests.Media {
      return try Services.Registry.Requests.Media.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) throws -> Services.Registry.Requests.Media {
      return try Services.Registry.Requests.Media.Builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Requests.Media {
      return try Services.Registry.Requests.Media.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func getBuilder() -> Services.Registry.Requests.Media.Builder {
      return Services.Registry.Requests.Media.classBuilder() as! Services.Registry.Requests.Media.Builder
    }
    public func getBuilder() -> Services.Registry.Requests.Media.Builder {
      return classBuilder() as! Services.Registry.Requests.Media.Builder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.Media.Builder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.Media.Builder()
    }
    public func toBuilder() throws -> Services.Registry.Requests.Media.Builder {
      return try Services.Registry.Requests.Media.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Services.Registry.Requests.Media) throws -> Services.Registry.Requests.Media.Builder {
      return try Services.Registry.Requests.Media.Builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) throws {
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Services.Registry.Requests.Media"
    }
    override public func className() -> String {
        return "Services.Registry.Requests.Media"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Services.Registry.Requests.Media.self
    }
    //Meta information declaration end

    final public class Builder : GeneratedMessageBuilder {
      private var builderResult:Services.Registry.Requests.Media = Services.Registry.Requests.Media()
      public func getMessage() -> Services.Registry.Requests.Media {
          return builderResult
      }

      required override public init () {
         super.init()
      }
      override public var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      public override func clear() -> Services.Registry.Requests.Media.Builder {
        builderResult = Services.Registry.Requests.Media()
        return self
      }
      public override func clone() throws -> Services.Registry.Requests.Media.Builder {
        return try Services.Registry.Requests.Media.builderWithPrototype(builderResult)
      }
      public override func build() throws -> Services.Registry.Requests.Media {
           try checkInitialized()
           return buildPartial()
      }
      public func buildPartial() -> Services.Registry.Requests.Media {
        let returnMe:Services.Registry.Requests.Media = builderResult
        return returnMe
      }
      public func mergeFrom(other:Services.Registry.Requests.Media) throws -> Services.Registry.Requests.Media.Builder {
        if other == Services.Registry.Requests.Media() {
         return self
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream) throws -> Services.Registry.Requests.Media.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Requests.Media.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let tag = try input.readTag()
          switch tag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
    }

  }

  final public class Notification : GeneratedMessage, GeneratedMessageProtocol {
    public class func registerDevice() -> ConcreateExtensionField {
         return ServicesRegistryRequestsNotificationregisterDevice
    }
    public class func getPreferences() -> ConcreateExtensionField {
         return ServicesRegistryRequestsNotificationgetPreferences
    }
    public class func updatePreference() -> ConcreateExtensionField {
         return ServicesRegistryRequestsNotificationupdatePreference
    }
    public class func sendNotification() -> ConcreateExtensionField {
         return ServicesRegistryRequestsNotificationsendNotification
    }
    public class func noSearchResults() -> ConcreateExtensionField {
         return ServicesRegistryRequestsNotificationnoSearchResults
    }
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) throws {
      try unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseArrayDelimitedFromInputStream(input:NSInputStream) throws -> Array<Services.Registry.Requests.Notification> {
      var mergedArray = Array<Services.Registry.Requests.Notification>()
      while let value = try parseFromDelimitedFromInputStream(input) {
        mergedArray += [value]
      }
      return mergedArray
    }
    public class func parseFromDelimitedFromInputStream(input:NSInputStream) throws -> Services.Registry.Requests.Notification? {
      return try Services.Registry.Requests.Notification.Builder().mergeDelimitedFromInputStream(input)?.build()
    }
    public class func parseFromData(data:NSData) throws -> Services.Registry.Requests.Notification {
      return try Services.Registry.Requests.Notification.Builder().mergeFromData(data, extensionRegistry:Services.Registry.Requests.RequestsRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Requests.Notification {
      return try Services.Registry.Requests.Notification.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) throws -> Services.Registry.Requests.Notification {
      return try Services.Registry.Requests.Notification.Builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Requests.Notification {
      return try Services.Registry.Requests.Notification.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) throws -> Services.Registry.Requests.Notification {
      return try Services.Registry.Requests.Notification.Builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Requests.Notification {
      return try Services.Registry.Requests.Notification.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func getBuilder() -> Services.Registry.Requests.Notification.Builder {
      return Services.Registry.Requests.Notification.classBuilder() as! Services.Registry.Requests.Notification.Builder
    }
    public func getBuilder() -> Services.Registry.Requests.Notification.Builder {
      return classBuilder() as! Services.Registry.Requests.Notification.Builder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.Notification.Builder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.Notification.Builder()
    }
    public func toBuilder() throws -> Services.Registry.Requests.Notification.Builder {
      return try Services.Registry.Requests.Notification.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Services.Registry.Requests.Notification) throws -> Services.Registry.Requests.Notification.Builder {
      return try Services.Registry.Requests.Notification.Builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) throws {
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Services.Registry.Requests.Notification"
    }
    override public func className() -> String {
        return "Services.Registry.Requests.Notification"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Services.Registry.Requests.Notification.self
    }
    //Meta information declaration end

    final public class Builder : GeneratedMessageBuilder {
      private var builderResult:Services.Registry.Requests.Notification = Services.Registry.Requests.Notification()
      public func getMessage() -> Services.Registry.Requests.Notification {
          return builderResult
      }

      required override public init () {
         super.init()
      }
      override public var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      public override func clear() -> Services.Registry.Requests.Notification.Builder {
        builderResult = Services.Registry.Requests.Notification()
        return self
      }
      public override func clone() throws -> Services.Registry.Requests.Notification.Builder {
        return try Services.Registry.Requests.Notification.builderWithPrototype(builderResult)
      }
      public override func build() throws -> Services.Registry.Requests.Notification {
           try checkInitialized()
           return buildPartial()
      }
      public func buildPartial() -> Services.Registry.Requests.Notification {
        let returnMe:Services.Registry.Requests.Notification = builderResult
        return returnMe
      }
      public func mergeFrom(other:Services.Registry.Requests.Notification) throws -> Services.Registry.Requests.Notification.Builder {
        if other == Services.Registry.Requests.Notification() {
         return self
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream) throws -> Services.Registry.Requests.Notification.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Requests.Notification.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let tag = try input.readTag()
          switch tag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
    }

  }

  final public class History : GeneratedMessage, GeneratedMessageProtocol {
    public class func recordAction() -> ConcreateExtensionField {
         return ServicesRegistryRequestsHistoryrecordAction
    }
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) throws {
      try unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseArrayDelimitedFromInputStream(input:NSInputStream) throws -> Array<Services.Registry.Requests.History> {
      var mergedArray = Array<Services.Registry.Requests.History>()
      while let value = try parseFromDelimitedFromInputStream(input) {
        mergedArray += [value]
      }
      return mergedArray
    }
    public class func parseFromDelimitedFromInputStream(input:NSInputStream) throws -> Services.Registry.Requests.History? {
      return try Services.Registry.Requests.History.Builder().mergeDelimitedFromInputStream(input)?.build()
    }
    public class func parseFromData(data:NSData) throws -> Services.Registry.Requests.History {
      return try Services.Registry.Requests.History.Builder().mergeFromData(data, extensionRegistry:Services.Registry.Requests.RequestsRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Requests.History {
      return try Services.Registry.Requests.History.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) throws -> Services.Registry.Requests.History {
      return try Services.Registry.Requests.History.Builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Requests.History {
      return try Services.Registry.Requests.History.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) throws -> Services.Registry.Requests.History {
      return try Services.Registry.Requests.History.Builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Requests.History {
      return try Services.Registry.Requests.History.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func getBuilder() -> Services.Registry.Requests.History.Builder {
      return Services.Registry.Requests.History.classBuilder() as! Services.Registry.Requests.History.Builder
    }
    public func getBuilder() -> Services.Registry.Requests.History.Builder {
      return classBuilder() as! Services.Registry.Requests.History.Builder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.History.Builder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.History.Builder()
    }
    public func toBuilder() throws -> Services.Registry.Requests.History.Builder {
      return try Services.Registry.Requests.History.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Services.Registry.Requests.History) throws -> Services.Registry.Requests.History.Builder {
      return try Services.Registry.Requests.History.Builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) throws {
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Services.Registry.Requests.History"
    }
    override public func className() -> String {
        return "Services.Registry.Requests.History"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Services.Registry.Requests.History.self
    }
    //Meta information declaration end

    final public class Builder : GeneratedMessageBuilder {
      private var builderResult:Services.Registry.Requests.History = Services.Registry.Requests.History()
      public func getMessage() -> Services.Registry.Requests.History {
          return builderResult
      }

      required override public init () {
         super.init()
      }
      override public var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      public override func clear() -> Services.Registry.Requests.History.Builder {
        builderResult = Services.Registry.Requests.History()
        return self
      }
      public override func clone() throws -> Services.Registry.Requests.History.Builder {
        return try Services.Registry.Requests.History.builderWithPrototype(builderResult)
      }
      public override func build() throws -> Services.Registry.Requests.History {
           try checkInitialized()
           return buildPartial()
      }
      public func buildPartial() -> Services.Registry.Requests.History {
        let returnMe:Services.Registry.Requests.History = builderResult
        return returnMe
      }
      public func mergeFrom(other:Services.Registry.Requests.History) throws -> Services.Registry.Requests.History.Builder {
        if other == Services.Registry.Requests.History() {
         return self
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream) throws -> Services.Registry.Requests.History.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Requests.History.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let tag = try input.readTag()
          switch tag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
    }

  }

  final public class Payment : GeneratedMessage, GeneratedMessageProtocol {
    public class func storeToken() -> ConcreateExtensionField {
         return ServicesRegistryRequestsPaymentstoreToken
    }
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) throws {
      try unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseArrayDelimitedFromInputStream(input:NSInputStream) throws -> Array<Services.Registry.Requests.Payment> {
      var mergedArray = Array<Services.Registry.Requests.Payment>()
      while let value = try parseFromDelimitedFromInputStream(input) {
        mergedArray += [value]
      }
      return mergedArray
    }
    public class func parseFromDelimitedFromInputStream(input:NSInputStream) throws -> Services.Registry.Requests.Payment? {
      return try Services.Registry.Requests.Payment.Builder().mergeDelimitedFromInputStream(input)?.build()
    }
    public class func parseFromData(data:NSData) throws -> Services.Registry.Requests.Payment {
      return try Services.Registry.Requests.Payment.Builder().mergeFromData(data, extensionRegistry:Services.Registry.Requests.RequestsRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Requests.Payment {
      return try Services.Registry.Requests.Payment.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) throws -> Services.Registry.Requests.Payment {
      return try Services.Registry.Requests.Payment.Builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Requests.Payment {
      return try Services.Registry.Requests.Payment.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) throws -> Services.Registry.Requests.Payment {
      return try Services.Registry.Requests.Payment.Builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Requests.Payment {
      return try Services.Registry.Requests.Payment.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func getBuilder() -> Services.Registry.Requests.Payment.Builder {
      return Services.Registry.Requests.Payment.classBuilder() as! Services.Registry.Requests.Payment.Builder
    }
    public func getBuilder() -> Services.Registry.Requests.Payment.Builder {
      return classBuilder() as! Services.Registry.Requests.Payment.Builder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.Payment.Builder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.Payment.Builder()
    }
    public func toBuilder() throws -> Services.Registry.Requests.Payment.Builder {
      return try Services.Registry.Requests.Payment.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Services.Registry.Requests.Payment) throws -> Services.Registry.Requests.Payment.Builder {
      return try Services.Registry.Requests.Payment.Builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) throws {
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Services.Registry.Requests.Payment"
    }
    override public func className() -> String {
        return "Services.Registry.Requests.Payment"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Services.Registry.Requests.Payment.self
    }
    //Meta information declaration end

    final public class Builder : GeneratedMessageBuilder {
      private var builderResult:Services.Registry.Requests.Payment = Services.Registry.Requests.Payment()
      public func getMessage() -> Services.Registry.Requests.Payment {
          return builderResult
      }

      required override public init () {
         super.init()
      }
      override public var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      public override func clear() -> Services.Registry.Requests.Payment.Builder {
        builderResult = Services.Registry.Requests.Payment()
        return self
      }
      public override func clone() throws -> Services.Registry.Requests.Payment.Builder {
        return try Services.Registry.Requests.Payment.builderWithPrototype(builderResult)
      }
      public override func build() throws -> Services.Registry.Requests.Payment {
           try checkInitialized()
           return buildPartial()
      }
      public func buildPartial() -> Services.Registry.Requests.Payment {
        let returnMe:Services.Registry.Requests.Payment = builderResult
        return returnMe
      }
      public func mergeFrom(other:Services.Registry.Requests.Payment) throws -> Services.Registry.Requests.Payment.Builder {
        if other == Services.Registry.Requests.Payment() {
         return self
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream) throws -> Services.Registry.Requests.Payment.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Requests.Payment.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let tag = try input.readTag()
          switch tag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
    }

  }

  final public class Post : GeneratedMessage, GeneratedMessageProtocol {
    public class func createPost() -> ConcreateExtensionField {
         return ServicesRegistryRequestsPostcreatePost
    }
    public class func updatePost() -> ConcreateExtensionField {
         return ServicesRegistryRequestsPostupdatePost
    }
    public class func getPost() -> ConcreateExtensionField {
         return ServicesRegistryRequestsPostgetPost
    }
    public class func getPosts() -> ConcreateExtensionField {
         return ServicesRegistryRequestsPostgetPosts
    }
    public class func deletePost() -> ConcreateExtensionField {
         return ServicesRegistryRequestsPostdeletePost
    }
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) throws {
      try unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseArrayDelimitedFromInputStream(input:NSInputStream) throws -> Array<Services.Registry.Requests.Post> {
      var mergedArray = Array<Services.Registry.Requests.Post>()
      while let value = try parseFromDelimitedFromInputStream(input) {
        mergedArray += [value]
      }
      return mergedArray
    }
    public class func parseFromDelimitedFromInputStream(input:NSInputStream) throws -> Services.Registry.Requests.Post? {
      return try Services.Registry.Requests.Post.Builder().mergeDelimitedFromInputStream(input)?.build()
    }
    public class func parseFromData(data:NSData) throws -> Services.Registry.Requests.Post {
      return try Services.Registry.Requests.Post.Builder().mergeFromData(data, extensionRegistry:Services.Registry.Requests.RequestsRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Requests.Post {
      return try Services.Registry.Requests.Post.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) throws -> Services.Registry.Requests.Post {
      return try Services.Registry.Requests.Post.Builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Requests.Post {
      return try Services.Registry.Requests.Post.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) throws -> Services.Registry.Requests.Post {
      return try Services.Registry.Requests.Post.Builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Requests.Post {
      return try Services.Registry.Requests.Post.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func getBuilder() -> Services.Registry.Requests.Post.Builder {
      return Services.Registry.Requests.Post.classBuilder() as! Services.Registry.Requests.Post.Builder
    }
    public func getBuilder() -> Services.Registry.Requests.Post.Builder {
      return classBuilder() as! Services.Registry.Requests.Post.Builder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.Post.Builder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.Post.Builder()
    }
    public func toBuilder() throws -> Services.Registry.Requests.Post.Builder {
      return try Services.Registry.Requests.Post.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Services.Registry.Requests.Post) throws -> Services.Registry.Requests.Post.Builder {
      return try Services.Registry.Requests.Post.Builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) throws {
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Services.Registry.Requests.Post"
    }
    override public func className() -> String {
        return "Services.Registry.Requests.Post"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Services.Registry.Requests.Post.self
    }
    //Meta information declaration end

    final public class Builder : GeneratedMessageBuilder {
      private var builderResult:Services.Registry.Requests.Post = Services.Registry.Requests.Post()
      public func getMessage() -> Services.Registry.Requests.Post {
          return builderResult
      }

      required override public init () {
         super.init()
      }
      override public var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      public override func clear() -> Services.Registry.Requests.Post.Builder {
        builderResult = Services.Registry.Requests.Post()
        return self
      }
      public override func clone() throws -> Services.Registry.Requests.Post.Builder {
        return try Services.Registry.Requests.Post.builderWithPrototype(builderResult)
      }
      public override func build() throws -> Services.Registry.Requests.Post {
           try checkInitialized()
           return buildPartial()
      }
      public func buildPartial() -> Services.Registry.Requests.Post {
        let returnMe:Services.Registry.Requests.Post = builderResult
        return returnMe
      }
      public func mergeFrom(other:Services.Registry.Requests.Post) throws -> Services.Registry.Requests.Post.Builder {
        if other == Services.Registry.Requests.Post() {
         return self
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream) throws -> Services.Registry.Requests.Post.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Requests.Post.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let tag = try input.readTag()
          switch tag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
    }

  }

  final public class Feature : GeneratedMessage, GeneratedMessageProtocol {
    public class func getFlags() -> ConcreateExtensionField {
         return ServicesRegistryRequestsFeaturegetFlags
    }
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) throws {
      try unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseArrayDelimitedFromInputStream(input:NSInputStream) throws -> Array<Services.Registry.Requests.Feature> {
      var mergedArray = Array<Services.Registry.Requests.Feature>()
      while let value = try parseFromDelimitedFromInputStream(input) {
        mergedArray += [value]
      }
      return mergedArray
    }
    public class func parseFromDelimitedFromInputStream(input:NSInputStream) throws -> Services.Registry.Requests.Feature? {
      return try Services.Registry.Requests.Feature.Builder().mergeDelimitedFromInputStream(input)?.build()
    }
    public class func parseFromData(data:NSData) throws -> Services.Registry.Requests.Feature {
      return try Services.Registry.Requests.Feature.Builder().mergeFromData(data, extensionRegistry:Services.Registry.Requests.RequestsRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Requests.Feature {
      return try Services.Registry.Requests.Feature.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) throws -> Services.Registry.Requests.Feature {
      return try Services.Registry.Requests.Feature.Builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Requests.Feature {
      return try Services.Registry.Requests.Feature.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) throws -> Services.Registry.Requests.Feature {
      return try Services.Registry.Requests.Feature.Builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Requests.Feature {
      return try Services.Registry.Requests.Feature.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func getBuilder() -> Services.Registry.Requests.Feature.Builder {
      return Services.Registry.Requests.Feature.classBuilder() as! Services.Registry.Requests.Feature.Builder
    }
    public func getBuilder() -> Services.Registry.Requests.Feature.Builder {
      return classBuilder() as! Services.Registry.Requests.Feature.Builder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.Feature.Builder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.Feature.Builder()
    }
    public func toBuilder() throws -> Services.Registry.Requests.Feature.Builder {
      return try Services.Registry.Requests.Feature.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Services.Registry.Requests.Feature) throws -> Services.Registry.Requests.Feature.Builder {
      return try Services.Registry.Requests.Feature.Builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) throws {
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Services.Registry.Requests.Feature"
    }
    override public func className() -> String {
        return "Services.Registry.Requests.Feature"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Services.Registry.Requests.Feature.self
    }
    //Meta information declaration end

    final public class Builder : GeneratedMessageBuilder {
      private var builderResult:Services.Registry.Requests.Feature = Services.Registry.Requests.Feature()
      public func getMessage() -> Services.Registry.Requests.Feature {
          return builderResult
      }

      required override public init () {
         super.init()
      }
      override public var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      public override func clear() -> Services.Registry.Requests.Feature.Builder {
        builderResult = Services.Registry.Requests.Feature()
        return self
      }
      public override func clone() throws -> Services.Registry.Requests.Feature.Builder {
        return try Services.Registry.Requests.Feature.builderWithPrototype(builderResult)
      }
      public override func build() throws -> Services.Registry.Requests.Feature {
           try checkInitialized()
           return buildPartial()
      }
      public func buildPartial() -> Services.Registry.Requests.Feature {
        let returnMe:Services.Registry.Requests.Feature = builderResult
        return returnMe
      }
      public func mergeFrom(other:Services.Registry.Requests.Feature) throws -> Services.Registry.Requests.Feature.Builder {
        if other == Services.Registry.Requests.Feature() {
         return self
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream) throws -> Services.Registry.Requests.Feature.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Requests.Feature.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let tag = try input.readTag()
          switch tag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
    }

  }

  final public class File : GeneratedMessage, GeneratedMessageProtocol {
    public class func startUpload() -> ConcreateExtensionField {
         return ServicesRegistryRequestsFilestartUpload
    }
    public class func completeUpload() -> ConcreateExtensionField {
         return ServicesRegistryRequestsFilecompleteUpload
    }
    public class func delete() -> ConcreateExtensionField {
         return ServicesRegistryRequestsFiledelete
    }
    public class func getFiles() -> ConcreateExtensionField {
         return ServicesRegistryRequestsFilegetFiles
    }
    public class func upload() -> ConcreateExtensionField {
         return ServicesRegistryRequestsFileupload
    }
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) throws {
      try unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseArrayDelimitedFromInputStream(input:NSInputStream) throws -> Array<Services.Registry.Requests.File> {
      var mergedArray = Array<Services.Registry.Requests.File>()
      while let value = try parseFromDelimitedFromInputStream(input) {
        mergedArray += [value]
      }
      return mergedArray
    }
    public class func parseFromDelimitedFromInputStream(input:NSInputStream) throws -> Services.Registry.Requests.File? {
      return try Services.Registry.Requests.File.Builder().mergeDelimitedFromInputStream(input)?.build()
    }
    public class func parseFromData(data:NSData) throws -> Services.Registry.Requests.File {
      return try Services.Registry.Requests.File.Builder().mergeFromData(data, extensionRegistry:Services.Registry.Requests.RequestsRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Requests.File {
      return try Services.Registry.Requests.File.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) throws -> Services.Registry.Requests.File {
      return try Services.Registry.Requests.File.Builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Requests.File {
      return try Services.Registry.Requests.File.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) throws -> Services.Registry.Requests.File {
      return try Services.Registry.Requests.File.Builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Requests.File {
      return try Services.Registry.Requests.File.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func getBuilder() -> Services.Registry.Requests.File.Builder {
      return Services.Registry.Requests.File.classBuilder() as! Services.Registry.Requests.File.Builder
    }
    public func getBuilder() -> Services.Registry.Requests.File.Builder {
      return classBuilder() as! Services.Registry.Requests.File.Builder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.File.Builder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.File.Builder()
    }
    public func toBuilder() throws -> Services.Registry.Requests.File.Builder {
      return try Services.Registry.Requests.File.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Services.Registry.Requests.File) throws -> Services.Registry.Requests.File.Builder {
      return try Services.Registry.Requests.File.Builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) throws {
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Services.Registry.Requests.File"
    }
    override public func className() -> String {
        return "Services.Registry.Requests.File"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Services.Registry.Requests.File.self
    }
    //Meta information declaration end

    final public class Builder : GeneratedMessageBuilder {
      private var builderResult:Services.Registry.Requests.File = Services.Registry.Requests.File()
      public func getMessage() -> Services.Registry.Requests.File {
          return builderResult
      }

      required override public init () {
         super.init()
      }
      override public var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      public override func clear() -> Services.Registry.Requests.File.Builder {
        builderResult = Services.Registry.Requests.File()
        return self
      }
      public override func clone() throws -> Services.Registry.Requests.File.Builder {
        return try Services.Registry.Requests.File.builderWithPrototype(builderResult)
      }
      public override func build() throws -> Services.Registry.Requests.File {
           try checkInitialized()
           return buildPartial()
      }
      public func buildPartial() -> Services.Registry.Requests.File {
        let returnMe:Services.Registry.Requests.File = builderResult
        return returnMe
      }
      public func mergeFrom(other:Services.Registry.Requests.File) throws -> Services.Registry.Requests.File.Builder {
        if other == Services.Registry.Requests.File() {
         return self
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream) throws -> Services.Registry.Requests.File.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Requests.File.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let tag = try input.readTag()
          switch tag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
    }

  }

  final public class Team : GeneratedMessage, GeneratedMessageProtocol {
    public class func addMembers() -> ConcreateExtensionField {
         return ServicesRegistryRequestsTeamaddMembers
    }
    public class func createTeam() -> ConcreateExtensionField {
         return ServicesRegistryRequestsTeamcreateTeam
    }
    public class func getTeam() -> ConcreateExtensionField {
         return ServicesRegistryRequestsTeamgetTeam
    }
    public class func getMembers() -> ConcreateExtensionField {
         return ServicesRegistryRequestsTeamgetMembers
    }
    public class func joinTeam() -> ConcreateExtensionField {
         return ServicesRegistryRequestsTeamjoinTeam
    }
    public class func leaveTeam() -> ConcreateExtensionField {
         return ServicesRegistryRequestsTeamleaveTeam
    }
    public class func removeMembers() -> ConcreateExtensionField {
         return ServicesRegistryRequestsTeamremoveMembers
    }
    public class func updateMembers() -> ConcreateExtensionField {
         return ServicesRegistryRequestsTeamupdateMembers
    }
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) throws {
      try unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseArrayDelimitedFromInputStream(input:NSInputStream) throws -> Array<Services.Registry.Requests.Team> {
      var mergedArray = Array<Services.Registry.Requests.Team>()
      while let value = try parseFromDelimitedFromInputStream(input) {
        mergedArray += [value]
      }
      return mergedArray
    }
    public class func parseFromDelimitedFromInputStream(input:NSInputStream) throws -> Services.Registry.Requests.Team? {
      return try Services.Registry.Requests.Team.Builder().mergeDelimitedFromInputStream(input)?.build()
    }
    public class func parseFromData(data:NSData) throws -> Services.Registry.Requests.Team {
      return try Services.Registry.Requests.Team.Builder().mergeFromData(data, extensionRegistry:Services.Registry.Requests.RequestsRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Requests.Team {
      return try Services.Registry.Requests.Team.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) throws -> Services.Registry.Requests.Team {
      return try Services.Registry.Requests.Team.Builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Requests.Team {
      return try Services.Registry.Requests.Team.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) throws -> Services.Registry.Requests.Team {
      return try Services.Registry.Requests.Team.Builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Requests.Team {
      return try Services.Registry.Requests.Team.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func getBuilder() -> Services.Registry.Requests.Team.Builder {
      return Services.Registry.Requests.Team.classBuilder() as! Services.Registry.Requests.Team.Builder
    }
    public func getBuilder() -> Services.Registry.Requests.Team.Builder {
      return classBuilder() as! Services.Registry.Requests.Team.Builder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.Team.Builder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.Team.Builder()
    }
    public func toBuilder() throws -> Services.Registry.Requests.Team.Builder {
      return try Services.Registry.Requests.Team.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Services.Registry.Requests.Team) throws -> Services.Registry.Requests.Team.Builder {
      return try Services.Registry.Requests.Team.Builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) throws {
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Services.Registry.Requests.Team"
    }
    override public func className() -> String {
        return "Services.Registry.Requests.Team"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Services.Registry.Requests.Team.self
    }
    //Meta information declaration end

    final public class Builder : GeneratedMessageBuilder {
      private var builderResult:Services.Registry.Requests.Team = Services.Registry.Requests.Team()
      public func getMessage() -> Services.Registry.Requests.Team {
          return builderResult
      }

      required override public init () {
         super.init()
      }
      override public var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      public override func clear() -> Services.Registry.Requests.Team.Builder {
        builderResult = Services.Registry.Requests.Team()
        return self
      }
      public override func clone() throws -> Services.Registry.Requests.Team.Builder {
        return try Services.Registry.Requests.Team.builderWithPrototype(builderResult)
      }
      public override func build() throws -> Services.Registry.Requests.Team {
           try checkInitialized()
           return buildPartial()
      }
      public func buildPartial() -> Services.Registry.Requests.Team {
        let returnMe:Services.Registry.Requests.Team = builderResult
        return returnMe
      }
      public func mergeFrom(other:Services.Registry.Requests.Team) throws -> Services.Registry.Requests.Team.Builder {
        if other == Services.Registry.Requests.Team() {
         return self
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream) throws -> Services.Registry.Requests.Team.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Services.Registry.Requests.Team.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let tag = try input.readTag()
          switch tag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
    }

  }

}

// @@protoc_insertion_point(global_scope)
