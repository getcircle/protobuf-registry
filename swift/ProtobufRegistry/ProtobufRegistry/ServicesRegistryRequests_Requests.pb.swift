// Generated by the protocol buffer compiler.  DO NOT EDIT!

import Foundation
public extension Services.Registry{ public struct Requests { }}

public func == (lhs: Services.Registry.Requests.User, rhs: Services.Registry.Requests.User) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  return (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
}

public func == (lhs: Services.Registry.Requests.Organization, rhs: Services.Registry.Requests.Organization) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  return (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
}

public func == (lhs: Services.Registry.Requests.Profile, rhs: Services.Registry.Requests.Profile) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  return (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
}

public func == (lhs: Services.Registry.Requests.Search, rhs: Services.Registry.Requests.Search) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  return (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
}

public func == (lhs: Services.Registry.Requests.Feed, rhs: Services.Registry.Requests.Feed) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  return (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
}

public func == (lhs: Services.Registry.Requests.Media, rhs: Services.Registry.Requests.Media) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  return (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
}

public func == (lhs: Services.Registry.Requests.Note, rhs: Services.Registry.Requests.Note) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  return (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
}

public func == (lhs: Services.Registry.Requests.Resume, rhs: Services.Registry.Requests.Resume) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  return (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
}

public func == (lhs: Services.Registry.Requests.Appreciation, rhs: Services.Registry.Requests.Appreciation) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  return (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
}

public func == (lhs: Services.Registry.Requests.Sync, rhs: Services.Registry.Requests.Sync) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  return (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
}

public func == (lhs: Services.Registry.Requests.Group, rhs: Services.Registry.Requests.Group) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  return (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
}

public func == (lhs: Services.Registry.Requests.Glossary, rhs: Services.Registry.Requests.Glossary) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  return (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
}

public var ServicesRegistryRequestsUsercreateUser:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsUsercreateUserStatic
   }
}
public var ServicesRegistryRequestsUservalidUser:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsUservalidUserStatic
   }
}
public var ServicesRegistryRequestsUserauthenticateUser:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsUserauthenticateUserStatic
   }
}
public var ServicesRegistryRequestsUsergetUser:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsUsergetUserStatic
   }
}
public var ServicesRegistryRequestsUsersendVerificationCode:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsUsersendVerificationCodeStatic
   }
}
public var ServicesRegistryRequestsUserverifyVerificationCode:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsUserverifyVerificationCodeStatic
   }
}
public var ServicesRegistryRequestsUserupdateUser:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsUserupdateUserStatic
   }
}
public var ServicesRegistryRequestsUsergetAuthorizationInstructions:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsUsergetAuthorizationInstructionsStatic
   }
}
public var ServicesRegistryRequestsUsercompleteAuthorization:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsUsercompleteAuthorizationStatic
   }
}
public var ServicesRegistryRequestsUsergetIdentities:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsUsergetIdentitiesStatic
   }
}
public var ServicesRegistryRequestsUserbulkCreateUsers:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsUserbulkCreateUsersStatic
   }
}
public var ServicesRegistryRequestsUserrecordDevice:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsUserrecordDeviceStatic
   }
}
public var ServicesRegistryRequestsUserrequestAccess:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsUserrequestAccessStatic
   }
}
public var ServicesRegistryRequestsUserdeleteIdentity:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsUserdeleteIdentityStatic
   }
}
public var ServicesRegistryRequestsUserlogout:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsUserlogoutStatic
   }
}
public var ServicesRegistryRequestsUsergetAuthenticationInstructions:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsUsergetAuthenticationInstructionsStatic
   }
}
public var ServicesRegistryRequestsOrganizationcreateOrganization:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationcreateOrganizationStatic
   }
}
public var ServicesRegistryRequestsOrganizationgetOrganization:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationgetOrganizationStatic
   }
}
public var ServicesRegistryRequestsOrganizationcreateTeam:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationcreateTeamStatic
   }
}
public var ServicesRegistryRequestsOrganizationcreateAddress:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationcreateAddressStatic
   }
}
public var ServicesRegistryRequestsOrganizationdeleteAddress:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationdeleteAddressStatic
   }
}
public var ServicesRegistryRequestsOrganizationgetAddress:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationgetAddressStatic
   }
}
public var ServicesRegistryRequestsOrganizationgetTeam:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationgetTeamStatic
   }
}
public var ServicesRegistryRequestsOrganizationgetTeams:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationgetTeamsStatic
   }
}
public var ServicesRegistryRequestsOrganizationgetAddresses:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationgetAddressesStatic
   }
}
public var ServicesRegistryRequestsOrganizationgetTeamDescendants:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationgetTeamDescendantsStatic
   }
}
public var ServicesRegistryRequestsOrganizationgetTopLevelTeam:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationgetTopLevelTeamStatic
   }
}
public var ServicesRegistryRequestsOrganizationcreateLocation:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationcreateLocationStatic
   }
}
public var ServicesRegistryRequestsOrganizationupdateLocation:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationupdateLocationStatic
   }
}
public var ServicesRegistryRequestsOrganizationgetLocations:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationgetLocationsStatic
   }
}
public var ServicesRegistryRequestsOrganizationgetLocation:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationgetLocationStatic
   }
}
public var ServicesRegistryRequestsOrganizationcreateToken:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationcreateTokenStatic
   }
}
public var ServicesRegistryRequestsOrganizationgetTokens:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationgetTokensStatic
   }
}
public var ServicesRegistryRequestsOrganizationenableIntegration:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationenableIntegrationStatic
   }
}
public var ServicesRegistryRequestsOrganizationgetIntegration:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationgetIntegrationStatic
   }
}
public var ServicesRegistryRequestsOrganizationdisableIntegration:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationdisableIntegrationStatic
   }
}
public var ServicesRegistryRequestsProfilecreateProfile:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsProfilecreateProfileStatic
   }
}
public var ServicesRegistryRequestsProfilegetExtendedProfile:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsProfilegetExtendedProfileStatic
   }
}
public var ServicesRegistryRequestsProfilegetProfile:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsProfilegetProfileStatic
   }
}
public var ServicesRegistryRequestsProfilecreateTags:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsProfilecreateTagsStatic
   }
}
public var ServicesRegistryRequestsProfilegetTags:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsProfilegetTagsStatic
   }
}
public var ServicesRegistryRequestsProfileaddTags:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsProfileaddTagsStatic
   }
}
public var ServicesRegistryRequestsProfileupdateProfile:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsProfileupdateProfileStatic
   }
}
public var ServicesRegistryRequestsProfilegetProfiles:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsProfilegetProfilesStatic
   }
}
public var ServicesRegistryRequestsProfilegetDirectReports:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsProfilegetDirectReportsStatic
   }
}
public var ServicesRegistryRequestsProfilegetPeers:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsProfilegetPeersStatic
   }
}
public var ServicesRegistryRequestsProfilegetProfileStats:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsProfilegetProfileStatsStatic
   }
}
public var ServicesRegistryRequestsProfilegetUpcomingAnniversaries:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsProfilegetUpcomingAnniversariesStatic
   }
}
public var ServicesRegistryRequestsProfilegetUpcomingBirthdays:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsProfilegetUpcomingBirthdaysStatic
   }
}
public var ServicesRegistryRequestsProfilegetRecentHires:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsProfilegetRecentHiresStatic
   }
}
public var ServicesRegistryRequestsProfilegetActiveTags:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsProfilegetActiveTagsStatic
   }
}
public var ServicesRegistryRequestsProfilebulkCreateProfiles:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsProfilebulkCreateProfilesStatic
   }
}
public var ServicesRegistryRequestsProfilebulkUpdateProfiles:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsProfilebulkUpdateProfilesStatic
   }
}
public var ServicesRegistryRequestsProfilegetAttributesForProfiles:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsProfilegetAttributesForProfilesStatic
   }
}
public var ServicesRegistryRequestsProfileremoveTags:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsProfileremoveTagsStatic
   }
}
public var ServicesRegistryRequestsSearchsearch:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsSearchsearchStatic
   }
}
public var ServicesRegistryRequestsFeedgetProfileFeed:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsFeedgetProfileFeedStatic
   }
}
public var ServicesRegistryRequestsFeedgetOrganizationFeed:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsFeedgetOrganizationFeedStatic
   }
}
public var ServicesRegistryRequestsMediastartImageUpload:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsMediastartImageUploadStatic
   }
}
public var ServicesRegistryRequestsMediacompleteImageUpload:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsMediacompleteImageUploadStatic
   }
}
public var ServicesRegistryRequestsNotecreateNote:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsNotecreateNoteStatic
   }
}
public var ServicesRegistryRequestsNotegetNotes:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsNotegetNotesStatic
   }
}
public var ServicesRegistryRequestsNotedeleteNote:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsNotedeleteNoteStatic
   }
}
public var ServicesRegistryRequestsNoteupdateNote:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsNoteupdateNoteStatic
   }
}
public var ServicesRegistryRequestsResumebulkCreateEducations:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsResumebulkCreateEducationsStatic
   }
}
public var ServicesRegistryRequestsResumebulkCreatePositions:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsResumebulkCreatePositionsStatic
   }
}
public var ServicesRegistryRequestsResumecreateCompany:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsResumecreateCompanyStatic
   }
}
public var ServicesRegistryRequestsResumegetResume:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsResumegetResumeStatic
   }
}
public var ServicesRegistryRequestsResumebulkCreateCompanies:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsResumebulkCreateCompaniesStatic
   }
}
public var ServicesRegistryRequestsAppreciationcreateAppreciation:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsAppreciationcreateAppreciationStatic
   }
}
public var ServicesRegistryRequestsAppreciationgetAppreciation:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsAppreciationgetAppreciationStatic
   }
}
public var ServicesRegistryRequestsAppreciationdeleteAppreciation:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsAppreciationdeleteAppreciationStatic
   }
}
public var ServicesRegistryRequestsAppreciationupdateAppreciation:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsAppreciationupdateAppreciationStatic
   }
}
public var ServicesRegistryRequestsSyncstartSync:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsSyncstartSyncStatic
   }
}
public var ServicesRegistryRequestsSyncsyncPayloads:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsSyncsyncPayloadsStatic
   }
}
public var ServicesRegistryRequestsSynccompleteSync:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsSynccompleteSyncStatic
   }
}
public var ServicesRegistryRequestsGroupgetGroups:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsGroupgetGroupsStatic
   }
}
public var ServicesRegistryRequestsGroupjoinGroup:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsGroupjoinGroupStatic
   }
}
public var ServicesRegistryRequestsGrouprespondToMembershipRequest:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsGrouprespondToMembershipRequestStatic
   }
}
public var ServicesRegistryRequestsGroupleaveGroup:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsGroupleaveGroupStatic
   }
}
public var ServicesRegistryRequestsGroupgetMembers:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsGroupgetMembersStatic
   }
}
public var ServicesRegistryRequestsGroupgetGroup:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsGroupgetGroupStatic
   }
}
public var ServicesRegistryRequestsGroupaddToGroup:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsGroupaddToGroupStatic
   }
}
public var ServicesRegistryRequestsGroupgetMembershipRequests:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsGroupgetMembershipRequestsStatic
   }
}
public var ServicesRegistryRequestsGlossarycreateTerm:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsGlossarycreateTermStatic
   }
}
public var ServicesRegistryRequestsGlossarygetTerm:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsGlossarygetTermStatic
   }
}
public var ServicesRegistryRequestsGlossarygetTerms:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsGlossarygetTermsStatic
   }
}
public var ServicesRegistryRequestsGlossaryupdateTerm:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsGlossaryupdateTermStatic
   }
}
public var ServicesRegistryRequestsGlossarydeleteTerm:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsGlossarydeleteTermStatic
   }
}
public extension Services.Registry.Requests {
  public struct RequestsRoot {
    public static var sharedInstance : RequestsRoot {
     struct Static {
         static let instance : RequestsRoot = RequestsRoot()
     }
     return Static.instance
    }
    var ServicesRegistryRequestsUsercreateUserStatic:ConcreateExtensionField
    var ServicesRegistryRequestsUservalidUserStatic:ConcreateExtensionField
    var ServicesRegistryRequestsUserauthenticateUserStatic:ConcreateExtensionField
    var ServicesRegistryRequestsUsergetUserStatic:ConcreateExtensionField
    var ServicesRegistryRequestsUsersendVerificationCodeStatic:ConcreateExtensionField
    var ServicesRegistryRequestsUserverifyVerificationCodeStatic:ConcreateExtensionField
    var ServicesRegistryRequestsUserupdateUserStatic:ConcreateExtensionField
    var ServicesRegistryRequestsUsergetAuthorizationInstructionsStatic:ConcreateExtensionField
    var ServicesRegistryRequestsUsercompleteAuthorizationStatic:ConcreateExtensionField
    var ServicesRegistryRequestsUsergetIdentitiesStatic:ConcreateExtensionField
    var ServicesRegistryRequestsUserbulkCreateUsersStatic:ConcreateExtensionField
    var ServicesRegistryRequestsUserrecordDeviceStatic:ConcreateExtensionField
    var ServicesRegistryRequestsUserrequestAccessStatic:ConcreateExtensionField
    var ServicesRegistryRequestsUserdeleteIdentityStatic:ConcreateExtensionField
    var ServicesRegistryRequestsUserlogoutStatic:ConcreateExtensionField
    var ServicesRegistryRequestsUsergetAuthenticationInstructionsStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationcreateOrganizationStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationgetOrganizationStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationcreateTeamStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationcreateAddressStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationdeleteAddressStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationgetAddressStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationgetTeamStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationgetTeamsStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationgetAddressesStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationgetTeamDescendantsStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationgetTopLevelTeamStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationcreateLocationStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationupdateLocationStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationgetLocationsStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationgetLocationStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationcreateTokenStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationgetTokensStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationenableIntegrationStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationgetIntegrationStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationdisableIntegrationStatic:ConcreateExtensionField
    var ServicesRegistryRequestsProfilecreateProfileStatic:ConcreateExtensionField
    var ServicesRegistryRequestsProfilegetExtendedProfileStatic:ConcreateExtensionField
    var ServicesRegistryRequestsProfilegetProfileStatic:ConcreateExtensionField
    var ServicesRegistryRequestsProfilecreateTagsStatic:ConcreateExtensionField
    var ServicesRegistryRequestsProfilegetTagsStatic:ConcreateExtensionField
    var ServicesRegistryRequestsProfileaddTagsStatic:ConcreateExtensionField
    var ServicesRegistryRequestsProfileupdateProfileStatic:ConcreateExtensionField
    var ServicesRegistryRequestsProfilegetProfilesStatic:ConcreateExtensionField
    var ServicesRegistryRequestsProfilegetDirectReportsStatic:ConcreateExtensionField
    var ServicesRegistryRequestsProfilegetPeersStatic:ConcreateExtensionField
    var ServicesRegistryRequestsProfilegetProfileStatsStatic:ConcreateExtensionField
    var ServicesRegistryRequestsProfilegetUpcomingAnniversariesStatic:ConcreateExtensionField
    var ServicesRegistryRequestsProfilegetUpcomingBirthdaysStatic:ConcreateExtensionField
    var ServicesRegistryRequestsProfilegetRecentHiresStatic:ConcreateExtensionField
    var ServicesRegistryRequestsProfilegetActiveTagsStatic:ConcreateExtensionField
    var ServicesRegistryRequestsProfilebulkCreateProfilesStatic:ConcreateExtensionField
    var ServicesRegistryRequestsProfilebulkUpdateProfilesStatic:ConcreateExtensionField
    var ServicesRegistryRequestsProfilegetAttributesForProfilesStatic:ConcreateExtensionField
    var ServicesRegistryRequestsProfileremoveTagsStatic:ConcreateExtensionField
    var ServicesRegistryRequestsSearchsearchStatic:ConcreateExtensionField
    var ServicesRegistryRequestsFeedgetProfileFeedStatic:ConcreateExtensionField
    var ServicesRegistryRequestsFeedgetOrganizationFeedStatic:ConcreateExtensionField
    var ServicesRegistryRequestsMediastartImageUploadStatic:ConcreateExtensionField
    var ServicesRegistryRequestsMediacompleteImageUploadStatic:ConcreateExtensionField
    var ServicesRegistryRequestsNotecreateNoteStatic:ConcreateExtensionField
    var ServicesRegistryRequestsNotegetNotesStatic:ConcreateExtensionField
    var ServicesRegistryRequestsNotedeleteNoteStatic:ConcreateExtensionField
    var ServicesRegistryRequestsNoteupdateNoteStatic:ConcreateExtensionField
    var ServicesRegistryRequestsResumebulkCreateEducationsStatic:ConcreateExtensionField
    var ServicesRegistryRequestsResumebulkCreatePositionsStatic:ConcreateExtensionField
    var ServicesRegistryRequestsResumecreateCompanyStatic:ConcreateExtensionField
    var ServicesRegistryRequestsResumegetResumeStatic:ConcreateExtensionField
    var ServicesRegistryRequestsResumebulkCreateCompaniesStatic:ConcreateExtensionField
    var ServicesRegistryRequestsAppreciationcreateAppreciationStatic:ConcreateExtensionField
    var ServicesRegistryRequestsAppreciationgetAppreciationStatic:ConcreateExtensionField
    var ServicesRegistryRequestsAppreciationdeleteAppreciationStatic:ConcreateExtensionField
    var ServicesRegistryRequestsAppreciationupdateAppreciationStatic:ConcreateExtensionField
    var ServicesRegistryRequestsSyncstartSyncStatic:ConcreateExtensionField
    var ServicesRegistryRequestsSyncsyncPayloadsStatic:ConcreateExtensionField
    var ServicesRegistryRequestsSynccompleteSyncStatic:ConcreateExtensionField
    var ServicesRegistryRequestsGroupgetGroupsStatic:ConcreateExtensionField
    var ServicesRegistryRequestsGroupjoinGroupStatic:ConcreateExtensionField
    var ServicesRegistryRequestsGrouprespondToMembershipRequestStatic:ConcreateExtensionField
    var ServicesRegistryRequestsGroupleaveGroupStatic:ConcreateExtensionField
    var ServicesRegistryRequestsGroupgetMembersStatic:ConcreateExtensionField
    var ServicesRegistryRequestsGroupgetGroupStatic:ConcreateExtensionField
    var ServicesRegistryRequestsGroupaddToGroupStatic:ConcreateExtensionField
    var ServicesRegistryRequestsGroupgetMembershipRequestsStatic:ConcreateExtensionField
    var ServicesRegistryRequestsGlossarycreateTermStatic:ConcreateExtensionField
    var ServicesRegistryRequestsGlossarygetTermStatic:ConcreateExtensionField
    var ServicesRegistryRequestsGlossarygetTermsStatic:ConcreateExtensionField
    var ServicesRegistryRequestsGlossaryupdateTermStatic:ConcreateExtensionField
    var ServicesRegistryRequestsGlossarydeleteTermStatic:ConcreateExtensionField
    public var extensionRegistry:ExtensionRegistry

    init() {
      ServicesRegistryRequestsUsercreateUserStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 100, defaultValue:Services.User.Actions.CreateUser.RequestV1(), messageOrGroupClass:Services.User.Actions.CreateUser.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsUservalidUserStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 101, defaultValue:Services.User.Actions.ValidUser.RequestV1(), messageOrGroupClass:Services.User.Actions.ValidUser.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsUserauthenticateUserStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 102, defaultValue:Services.User.Actions.AuthenticateUser.RequestV1(), messageOrGroupClass:Services.User.Actions.AuthenticateUser.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsUsergetUserStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 103, defaultValue:Services.User.Actions.GetUser.RequestV1(), messageOrGroupClass:Services.User.Actions.GetUser.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsUsersendVerificationCodeStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 104, defaultValue:Services.User.Actions.SendVerificationCode.RequestV1(), messageOrGroupClass:Services.User.Actions.SendVerificationCode.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsUserverifyVerificationCodeStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 105, defaultValue:Services.User.Actions.VerifyVerificationCode.RequestV1(), messageOrGroupClass:Services.User.Actions.VerifyVerificationCode.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsUserupdateUserStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 106, defaultValue:Services.User.Actions.UpdateUser.RequestV1(), messageOrGroupClass:Services.User.Actions.UpdateUser.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsUsergetAuthorizationInstructionsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 107, defaultValue:Services.User.Actions.GetAuthorizationInstructions.RequestV1(), messageOrGroupClass:Services.User.Actions.GetAuthorizationInstructions.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsUsercompleteAuthorizationStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 108, defaultValue:Services.User.Actions.CompleteAuthorization.RequestV1(), messageOrGroupClass:Services.User.Actions.CompleteAuthorization.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsUsergetIdentitiesStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 109, defaultValue:Services.User.Actions.GetIdentities.RequestV1(), messageOrGroupClass:Services.User.Actions.GetIdentities.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsUserbulkCreateUsersStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 110, defaultValue:Services.User.Actions.BulkCreateUsers.RequestV1(), messageOrGroupClass:Services.User.Actions.BulkCreateUsers.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsUserrecordDeviceStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 111, defaultValue:Services.User.Actions.RecordDevice.RequestV1(), messageOrGroupClass:Services.User.Actions.RecordDevice.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsUserrequestAccessStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 112, defaultValue:Services.User.Actions.RequestAccess.RequestV1(), messageOrGroupClass:Services.User.Actions.RequestAccess.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsUserdeleteIdentityStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 113, defaultValue:Services.User.Actions.DeleteIdentity.RequestV1(), messageOrGroupClass:Services.User.Actions.DeleteIdentity.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsUserlogoutStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 114, defaultValue:Services.User.Actions.Logout.RequestV1(), messageOrGroupClass:Services.User.Actions.Logout.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsUsergetAuthenticationInstructionsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 115, defaultValue:Services.User.Actions.GetAuthenticationInstructions.RequestV1(), messageOrGroupClass:Services.User.Actions.GetAuthenticationInstructions.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationcreateOrganizationStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 200, defaultValue:Services.Organization.Actions.CreateOrganization.RequestV1(), messageOrGroupClass:Services.Organization.Actions.CreateOrganization.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationgetOrganizationStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 201, defaultValue:Services.Organization.Actions.GetOrganization.RequestV1(), messageOrGroupClass:Services.Organization.Actions.GetOrganization.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationcreateTeamStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 202, defaultValue:Services.Organization.Actions.CreateTeam.RequestV1(), messageOrGroupClass:Services.Organization.Actions.CreateTeam.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationcreateAddressStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 203, defaultValue:Services.Organization.Actions.CreateAddress.RequestV1(), messageOrGroupClass:Services.Organization.Actions.CreateAddress.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationdeleteAddressStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 204, defaultValue:Services.Organization.Actions.DeleteAddress.RequestV1(), messageOrGroupClass:Services.Organization.Actions.DeleteAddress.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationgetAddressStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 205, defaultValue:Services.Organization.Actions.GetAddress.RequestV1(), messageOrGroupClass:Services.Organization.Actions.GetAddress.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationgetTeamStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 206, defaultValue:Services.Organization.Actions.GetTeam.RequestV1(), messageOrGroupClass:Services.Organization.Actions.GetTeam.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationgetTeamsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 207, defaultValue:Services.Organization.Actions.GetTeams.RequestV1(), messageOrGroupClass:Services.Organization.Actions.GetTeams.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationgetAddressesStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 208, defaultValue:Services.Organization.Actions.GetAddresses.RequestV1(), messageOrGroupClass:Services.Organization.Actions.GetAddresses.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationgetTeamDescendantsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 209, defaultValue:Services.Organization.Actions.GetTeamDescendants.RequestV1(), messageOrGroupClass:Services.Organization.Actions.GetTeamDescendants.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationgetTopLevelTeamStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 210, defaultValue:Services.Organization.Actions.GetTopLevelTeam.RequestV1(), messageOrGroupClass:Services.Organization.Actions.GetTopLevelTeam.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationcreateLocationStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 211, defaultValue:Services.Organization.Actions.CreateLocation.RequestV1(), messageOrGroupClass:Services.Organization.Actions.CreateLocation.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationupdateLocationStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 212, defaultValue:Services.Organization.Actions.UpdateLocation.RequestV1(), messageOrGroupClass:Services.Organization.Actions.UpdateLocation.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationgetLocationsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 213, defaultValue:Services.Organization.Actions.GetLocations.RequestV1(), messageOrGroupClass:Services.Organization.Actions.GetLocations.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationgetLocationStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 214, defaultValue:Services.Organization.Actions.GetLocation.RequestV1(), messageOrGroupClass:Services.Organization.Actions.GetLocation.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationcreateTokenStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 215, defaultValue:Services.Organization.Actions.CreateToken.RequestV1(), messageOrGroupClass:Services.Organization.Actions.CreateToken.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationgetTokensStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 216, defaultValue:Services.Organization.Actions.GetTokens.RequestV1(), messageOrGroupClass:Services.Organization.Actions.GetTokens.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationenableIntegrationStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 217, defaultValue:Services.Organization.Actions.EnableIntegration.RequestV1(), messageOrGroupClass:Services.Organization.Actions.EnableIntegration.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationgetIntegrationStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 218, defaultValue:Services.Organization.Actions.GetIntegration.RequestV1(), messageOrGroupClass:Services.Organization.Actions.GetIntegration.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationdisableIntegrationStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 219, defaultValue:Services.Organization.Actions.DisableIntegration.RequestV1(), messageOrGroupClass:Services.Organization.Actions.DisableIntegration.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsProfilecreateProfileStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 300, defaultValue:Services.Profile.Actions.CreateProfile.RequestV1(), messageOrGroupClass:Services.Profile.Actions.CreateProfile.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsProfilegetExtendedProfileStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 301, defaultValue:Services.Profile.Actions.GetExtendedProfile.RequestV1(), messageOrGroupClass:Services.Profile.Actions.GetExtendedProfile.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsProfilegetProfileStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 302, defaultValue:Services.Profile.Actions.GetProfile.RequestV1(), messageOrGroupClass:Services.Profile.Actions.GetProfile.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsProfilecreateTagsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 303, defaultValue:Services.Profile.Actions.CreateTags.RequestV1(), messageOrGroupClass:Services.Profile.Actions.CreateTags.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsProfilegetTagsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 304, defaultValue:Services.Profile.Actions.GetTags.RequestV1(), messageOrGroupClass:Services.Profile.Actions.GetTags.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsProfileaddTagsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 305, defaultValue:Services.Profile.Actions.AddTags.RequestV1(), messageOrGroupClass:Services.Profile.Actions.AddTags.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsProfileupdateProfileStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 306, defaultValue:Services.Profile.Actions.UpdateProfile.RequestV1(), messageOrGroupClass:Services.Profile.Actions.UpdateProfile.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsProfilegetProfilesStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 307, defaultValue:Services.Profile.Actions.GetProfiles.RequestV1(), messageOrGroupClass:Services.Profile.Actions.GetProfiles.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsProfilegetDirectReportsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 308, defaultValue:Services.Profile.Actions.GetDirectReports.RequestV1(), messageOrGroupClass:Services.Profile.Actions.GetDirectReports.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsProfilegetPeersStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 309, defaultValue:Services.Profile.Actions.GetPeers.RequestV1(), messageOrGroupClass:Services.Profile.Actions.GetPeers.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsProfilegetProfileStatsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 310, defaultValue:Services.Profile.Actions.GetProfileStats.RequestV1(), messageOrGroupClass:Services.Profile.Actions.GetProfileStats.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsProfilegetUpcomingAnniversariesStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 311, defaultValue:Services.Profile.Actions.GetUpcomingAnniversaries.RequestV1(), messageOrGroupClass:Services.Profile.Actions.GetUpcomingAnniversaries.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsProfilegetUpcomingBirthdaysStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 312, defaultValue:Services.Profile.Actions.GetUpcomingBirthdays.RequestV1(), messageOrGroupClass:Services.Profile.Actions.GetUpcomingBirthdays.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsProfilegetRecentHiresStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 313, defaultValue:Services.Profile.Actions.GetRecentHires.RequestV1(), messageOrGroupClass:Services.Profile.Actions.GetRecentHires.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsProfilegetActiveTagsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 314, defaultValue:Services.Profile.Actions.GetActiveTags.RequestV1(), messageOrGroupClass:Services.Profile.Actions.GetActiveTags.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsProfilebulkCreateProfilesStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 315, defaultValue:Services.Profile.Actions.BulkCreateProfiles.RequestV1(), messageOrGroupClass:Services.Profile.Actions.BulkCreateProfiles.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsProfilebulkUpdateProfilesStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 316, defaultValue:Services.Profile.Actions.BulkUpdateProfiles.RequestV1(), messageOrGroupClass:Services.Profile.Actions.BulkUpdateProfiles.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsProfilegetAttributesForProfilesStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 317, defaultValue:Services.Profile.Actions.GetAttributesForProfiles.RequestV1(), messageOrGroupClass:Services.Profile.Actions.GetAttributesForProfiles.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsProfileremoveTagsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 318, defaultValue:Services.Profile.Actions.RemoveTags.RequestV1(), messageOrGroupClass:Services.Profile.Actions.RemoveTags.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsSearchsearchStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 400, defaultValue:Services.Search.Actions.Search.RequestV1(), messageOrGroupClass:Services.Search.Actions.Search.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsFeedgetProfileFeedStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 500, defaultValue:Services.Feed.Actions.GetProfileFeed.RequestV1(), messageOrGroupClass:Services.Feed.Actions.GetProfileFeed.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsFeedgetOrganizationFeedStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 501, defaultValue:Services.Feed.Actions.GetOrganizationFeed.RequestV1(), messageOrGroupClass:Services.Feed.Actions.GetOrganizationFeed.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsMediastartImageUploadStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 600, defaultValue:Services.Media.Actions.StartImageUpload.RequestV1(), messageOrGroupClass:Services.Media.Actions.StartImageUpload.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsMediacompleteImageUploadStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 601, defaultValue:Services.Media.Actions.CompleteImageUpload.RequestV1(), messageOrGroupClass:Services.Media.Actions.CompleteImageUpload.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsNotecreateNoteStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 700, defaultValue:Services.Note.Actions.CreateNote.RequestV1(), messageOrGroupClass:Services.Note.Actions.CreateNote.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsNotegetNotesStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 701, defaultValue:Services.Note.Actions.GetNotes.RequestV1(), messageOrGroupClass:Services.Note.Actions.GetNotes.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsNotedeleteNoteStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 702, defaultValue:Services.Note.Actions.DeleteNote.RequestV1(), messageOrGroupClass:Services.Note.Actions.DeleteNote.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsNoteupdateNoteStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 703, defaultValue:Services.Note.Actions.UpdateNote.RequestV1(), messageOrGroupClass:Services.Note.Actions.UpdateNote.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsResumebulkCreateEducationsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 800, defaultValue:Services.Resume.Actions.BulkCreateEducations.RequestV1(), messageOrGroupClass:Services.Resume.Actions.BulkCreateEducations.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsResumebulkCreatePositionsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 801, defaultValue:Services.Resume.Actions.BulkCreatePositions.RequestV1(), messageOrGroupClass:Services.Resume.Actions.BulkCreatePositions.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsResumecreateCompanyStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 802, defaultValue:Services.Resume.Actions.CreateCompany.RequestV1(), messageOrGroupClass:Services.Resume.Actions.CreateCompany.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsResumegetResumeStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 803, defaultValue:Services.Resume.Actions.GetResume.RequestV1(), messageOrGroupClass:Services.Resume.Actions.GetResume.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsResumebulkCreateCompaniesStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 804, defaultValue:Services.Resume.Actions.BulkCreateCompanies.RequestV1(), messageOrGroupClass:Services.Resume.Actions.BulkCreateCompanies.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsAppreciationcreateAppreciationStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 900, defaultValue:Services.Appreciation.Actions.CreateAppreciation.RequestV1(), messageOrGroupClass:Services.Appreciation.Actions.CreateAppreciation.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsAppreciationgetAppreciationStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 901, defaultValue:Services.Appreciation.Actions.GetAppreciation.RequestV1(), messageOrGroupClass:Services.Appreciation.Actions.GetAppreciation.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsAppreciationdeleteAppreciationStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 902, defaultValue:Services.Appreciation.Actions.DeleteAppreciation.RequestV1(), messageOrGroupClass:Services.Appreciation.Actions.DeleteAppreciation.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsAppreciationupdateAppreciationStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 903, defaultValue:Services.Appreciation.Actions.UpdateAppreciation.RequestV1(), messageOrGroupClass:Services.Appreciation.Actions.UpdateAppreciation.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsSyncstartSyncStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1000, defaultValue:Services.Sync.Actions.StartSync.RequestV1(), messageOrGroupClass:Services.Sync.Actions.StartSync.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsSyncsyncPayloadsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1001, defaultValue:Services.Sync.Actions.Sync.RequestV1(), messageOrGroupClass:Services.Sync.Actions.Sync.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsSynccompleteSyncStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1002, defaultValue:Services.Sync.Actions.CompleteSync.RequestV1(), messageOrGroupClass:Services.Sync.Actions.CompleteSync.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsGroupgetGroupsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1100, defaultValue:Services.Group.Actions.GetGroups.RequestV1(), messageOrGroupClass:Services.Group.Actions.GetGroups.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsGroupjoinGroupStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1101, defaultValue:Services.Group.Actions.JoinGroup.RequestV1(), messageOrGroupClass:Services.Group.Actions.JoinGroup.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsGrouprespondToMembershipRequestStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1102, defaultValue:Services.Group.Actions.RespondToMembershipRequest.RequestV1(), messageOrGroupClass:Services.Group.Actions.RespondToMembershipRequest.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsGroupleaveGroupStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1103, defaultValue:Services.Group.Actions.LeaveGroup.RequestV1(), messageOrGroupClass:Services.Group.Actions.LeaveGroup.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsGroupgetMembersStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1104, defaultValue:Services.Group.Actions.GetMembers.RequestV1(), messageOrGroupClass:Services.Group.Actions.GetMembers.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsGroupgetGroupStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1105, defaultValue:Services.Group.Actions.GetGroup.RequestV1(), messageOrGroupClass:Services.Group.Actions.GetGroup.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsGroupaddToGroupStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1106, defaultValue:Services.Group.Actions.AddToGroup.RequestV1(), messageOrGroupClass:Services.Group.Actions.AddToGroup.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsGroupgetMembershipRequestsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1107, defaultValue:Services.Group.Actions.GetMembershipRequests.RequestV1(), messageOrGroupClass:Services.Group.Actions.GetMembershipRequests.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsGlossarycreateTermStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1200, defaultValue:Services.Glossary.Actions.CreateTerm.RequestV1(), messageOrGroupClass:Services.Glossary.Actions.CreateTerm.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsGlossarygetTermStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1201, defaultValue:Services.Glossary.Actions.GetTerm.RequestV1(), messageOrGroupClass:Services.Glossary.Actions.GetTerm.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsGlossarygetTermsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1202, defaultValue:Services.Glossary.Actions.GetTerms.RequestV1(), messageOrGroupClass:Services.Glossary.Actions.GetTerms.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsGlossaryupdateTermStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1203, defaultValue:Services.Glossary.Actions.UpdateTerm.RequestV1(), messageOrGroupClass:Services.Glossary.Actions.UpdateTerm.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsGlossarydeleteTermStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1204, defaultValue:Services.Glossary.Actions.DeleteTerm.RequestV1(), messageOrGroupClass:Services.Glossary.Actions.DeleteTerm.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      extensionRegistry = ExtensionRegistry()
      registerAllExtensions(extensionRegistry)
      Soa.SoaRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.CreateUser.CreateUserRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.ValidUser.ValidUserRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.AuthenticateUser.AuthenticateUserRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.GetUser.GetUserRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.SendVerificationCode.SendVerificationCodeRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.VerifyVerificationCode.VerifyVerificationCodeRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.UpdateUser.UpdateUserRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.GetAuthorizationInstructions.GetAuthorizationInstructionsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.CompleteAuthorization.CompleteAuthorizationRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.GetIdentities.GetIdentitiesRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.BulkCreateUsers.BulkCreateUsersRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.RecordDevice.RecordDeviceRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.RequestAccess.RequestAccessRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.DeleteIdentity.DeleteIdentityRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.Logout.LogoutRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.GetAuthenticationInstructions.GetAuthenticationInstructionsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.CreateOrganization.CreateOrganizationRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.CreateTeam.CreateTeamRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.CreateAddress.CreateAddressRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.DeleteAddress.DeleteAddressRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.GetAddress.GetAddressRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.GetTeam.GetTeamRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.GetOrganization.GetOrganizationRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.GetTeams.GetTeamsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.GetAddresses.GetAddressesRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.GetTeamDescendants.GetTeamDescendantsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.GetTopLevelTeam.GetTopLevelTeamRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.CreateLocation.CreateLocationRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.UpdateLocation.UpdateLocationRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.GetLocations.GetLocationsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.GetLocation.GetLocationRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.CreateToken.CreateTokenRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.GetTokens.GetTokensRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.EnableIntegration.EnableIntegrationRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.GetIntegration.GetIntegrationRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.DisableIntegration.DisableIntegrationRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.CreateProfile.CreateProfileRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.GetExtendedProfile.GetExtendedProfileRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.GetProfile.GetProfileRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.CreateTags.CreateTagsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.GetTags.GetTagsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.AddTags.AddTagsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.UpdateProfile.UpdateProfileRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.GetProfiles.GetProfilesRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.GetDirectReports.GetDirectReportsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.GetPeers.GetPeersRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.GetProfileStats.GetProfileStatsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.GetUpcomingAnniversaries.GetUpcomingAnniversariesRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.GetUpcomingBirthdays.GetUpcomingBirthdaysRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.GetRecentHires.GetRecentHiresRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.GetActiveTags.GetActiveTagsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.BulkCreateProfiles.BulkCreateProfilesRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.BulkUpdateProfiles.BulkUpdateProfilesRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.GetAttributesForProfiles.GetAttributesForProfilesRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.RemoveTags.RemoveTagsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Search.Actions.Search.SearchRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Feed.Actions.GetProfileFeed.GetProfileFeedRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Feed.Actions.GetOrganizationFeed.GetOrganizationFeedRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Media.Actions.StartImageUpload.StartImageUploadRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Media.Actions.CompleteImageUpload.CompleteImageUploadRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Note.Actions.CreateNote.CreateNoteRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Note.Actions.GetNotes.GetNotesRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Note.Actions.DeleteNote.DeleteNoteRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Note.Actions.UpdateNote.UpdateNoteRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Resume.Actions.BulkCreateEducations.BulkCreateEducationsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Resume.Actions.BulkCreatePositions.BulkCreatePositionsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Resume.Actions.CreateCompany.CreateCompanyRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Resume.Actions.GetResume.GetResumeRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Resume.Actions.BulkCreateCompanies.BulkCreateCompaniesRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Appreciation.Actions.CreateAppreciation.CreateAppreciationRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Appreciation.Actions.GetAppreciation.GetAppreciationRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Appreciation.Actions.DeleteAppreciation.DeleteAppreciationRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Appreciation.Actions.UpdateAppreciation.UpdateAppreciationRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Sync.Actions.StartSync.StartSyncRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Sync.Actions.Sync.SyncRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Sync.Actions.CompleteSync.CompleteSyncRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Group.Actions.GetGroups.GetGroupsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Group.Actions.JoinGroup.JoinGroupRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Group.Actions.RespondToMembershipRequest.RespondToMembershipRequestRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Group.Actions.LeaveGroup.LeaveGroupRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Group.Actions.GetMembers.GetMembersRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Group.Actions.GetGroup.GetGroupRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Group.Actions.AddToGroup.AddToGroupRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Group.Actions.GetMembershipRequests.GetMembershipRequestsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Glossary.Actions.CreateTerm.CreateTermRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Glossary.Actions.GetTerm.GetTermRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Glossary.Actions.GetTerms.GetTermsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Glossary.Actions.UpdateTerm.UpdateTermRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Glossary.Actions.DeleteTerm.DeleteTermRoot.sharedInstance.registerAllExtensions(extensionRegistry)
    }
    public func registerAllExtensions(registry:ExtensionRegistry) {
      registry.addExtension(ServicesRegistryRequestsUsercreateUserStatic)
      registry.addExtension(ServicesRegistryRequestsUservalidUserStatic)
      registry.addExtension(ServicesRegistryRequestsUserauthenticateUserStatic)
      registry.addExtension(ServicesRegistryRequestsUsergetUserStatic)
      registry.addExtension(ServicesRegistryRequestsUsersendVerificationCodeStatic)
      registry.addExtension(ServicesRegistryRequestsUserverifyVerificationCodeStatic)
      registry.addExtension(ServicesRegistryRequestsUserupdateUserStatic)
      registry.addExtension(ServicesRegistryRequestsUsergetAuthorizationInstructionsStatic)
      registry.addExtension(ServicesRegistryRequestsUsercompleteAuthorizationStatic)
      registry.addExtension(ServicesRegistryRequestsUsergetIdentitiesStatic)
      registry.addExtension(ServicesRegistryRequestsUserbulkCreateUsersStatic)
      registry.addExtension(ServicesRegistryRequestsUserrecordDeviceStatic)
      registry.addExtension(ServicesRegistryRequestsUserrequestAccessStatic)
      registry.addExtension(ServicesRegistryRequestsUserdeleteIdentityStatic)
      registry.addExtension(ServicesRegistryRequestsUserlogoutStatic)
      registry.addExtension(ServicesRegistryRequestsUsergetAuthenticationInstructionsStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationcreateOrganizationStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationgetOrganizationStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationcreateTeamStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationcreateAddressStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationdeleteAddressStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationgetAddressStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationgetTeamStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationgetTeamsStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationgetAddressesStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationgetTeamDescendantsStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationgetTopLevelTeamStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationcreateLocationStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationupdateLocationStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationgetLocationsStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationgetLocationStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationcreateTokenStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationgetTokensStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationenableIntegrationStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationgetIntegrationStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationdisableIntegrationStatic)
      registry.addExtension(ServicesRegistryRequestsProfilecreateProfileStatic)
      registry.addExtension(ServicesRegistryRequestsProfilegetExtendedProfileStatic)
      registry.addExtension(ServicesRegistryRequestsProfilegetProfileStatic)
      registry.addExtension(ServicesRegistryRequestsProfilecreateTagsStatic)
      registry.addExtension(ServicesRegistryRequestsProfilegetTagsStatic)
      registry.addExtension(ServicesRegistryRequestsProfileaddTagsStatic)
      registry.addExtension(ServicesRegistryRequestsProfileupdateProfileStatic)
      registry.addExtension(ServicesRegistryRequestsProfilegetProfilesStatic)
      registry.addExtension(ServicesRegistryRequestsProfilegetDirectReportsStatic)
      registry.addExtension(ServicesRegistryRequestsProfilegetPeersStatic)
      registry.addExtension(ServicesRegistryRequestsProfilegetProfileStatsStatic)
      registry.addExtension(ServicesRegistryRequestsProfilegetUpcomingAnniversariesStatic)
      registry.addExtension(ServicesRegistryRequestsProfilegetUpcomingBirthdaysStatic)
      registry.addExtension(ServicesRegistryRequestsProfilegetRecentHiresStatic)
      registry.addExtension(ServicesRegistryRequestsProfilegetActiveTagsStatic)
      registry.addExtension(ServicesRegistryRequestsProfilebulkCreateProfilesStatic)
      registry.addExtension(ServicesRegistryRequestsProfilebulkUpdateProfilesStatic)
      registry.addExtension(ServicesRegistryRequestsProfilegetAttributesForProfilesStatic)
      registry.addExtension(ServicesRegistryRequestsProfileremoveTagsStatic)
      registry.addExtension(ServicesRegistryRequestsSearchsearchStatic)
      registry.addExtension(ServicesRegistryRequestsFeedgetProfileFeedStatic)
      registry.addExtension(ServicesRegistryRequestsFeedgetOrganizationFeedStatic)
      registry.addExtension(ServicesRegistryRequestsMediastartImageUploadStatic)
      registry.addExtension(ServicesRegistryRequestsMediacompleteImageUploadStatic)
      registry.addExtension(ServicesRegistryRequestsNotecreateNoteStatic)
      registry.addExtension(ServicesRegistryRequestsNotegetNotesStatic)
      registry.addExtension(ServicesRegistryRequestsNotedeleteNoteStatic)
      registry.addExtension(ServicesRegistryRequestsNoteupdateNoteStatic)
      registry.addExtension(ServicesRegistryRequestsResumebulkCreateEducationsStatic)
      registry.addExtension(ServicesRegistryRequestsResumebulkCreatePositionsStatic)
      registry.addExtension(ServicesRegistryRequestsResumecreateCompanyStatic)
      registry.addExtension(ServicesRegistryRequestsResumegetResumeStatic)
      registry.addExtension(ServicesRegistryRequestsResumebulkCreateCompaniesStatic)
      registry.addExtension(ServicesRegistryRequestsAppreciationcreateAppreciationStatic)
      registry.addExtension(ServicesRegistryRequestsAppreciationgetAppreciationStatic)
      registry.addExtension(ServicesRegistryRequestsAppreciationdeleteAppreciationStatic)
      registry.addExtension(ServicesRegistryRequestsAppreciationupdateAppreciationStatic)
      registry.addExtension(ServicesRegistryRequestsSyncstartSyncStatic)
      registry.addExtension(ServicesRegistryRequestsSyncsyncPayloadsStatic)
      registry.addExtension(ServicesRegistryRequestsSynccompleteSyncStatic)
      registry.addExtension(ServicesRegistryRequestsGroupgetGroupsStatic)
      registry.addExtension(ServicesRegistryRequestsGroupjoinGroupStatic)
      registry.addExtension(ServicesRegistryRequestsGrouprespondToMembershipRequestStatic)
      registry.addExtension(ServicesRegistryRequestsGroupleaveGroupStatic)
      registry.addExtension(ServicesRegistryRequestsGroupgetMembersStatic)
      registry.addExtension(ServicesRegistryRequestsGroupgetGroupStatic)
      registry.addExtension(ServicesRegistryRequestsGroupaddToGroupStatic)
      registry.addExtension(ServicesRegistryRequestsGroupgetMembershipRequestsStatic)
      registry.addExtension(ServicesRegistryRequestsGlossarycreateTermStatic)
      registry.addExtension(ServicesRegistryRequestsGlossarygetTermStatic)
      registry.addExtension(ServicesRegistryRequestsGlossarygetTermsStatic)
      registry.addExtension(ServicesRegistryRequestsGlossaryupdateTermStatic)
      registry.addExtension(ServicesRegistryRequestsGlossarydeleteTermStatic)
    }
  }

  final public class User : GeneratedMessage, GeneratedMessageProtocol {
    override public subscript(key: String) -> Any? {
           switch key {
           default: return nil
           }
    }

    public class func createUser() -> ConcreateExtensionField {
         return ServicesRegistryRequestsUsercreateUser
    }
    public class func validUser() -> ConcreateExtensionField {
         return ServicesRegistryRequestsUservalidUser
    }
    public class func authenticateUser() -> ConcreateExtensionField {
         return ServicesRegistryRequestsUserauthenticateUser
    }
    public class func getUser() -> ConcreateExtensionField {
         return ServicesRegistryRequestsUsergetUser
    }
    public class func sendVerificationCode() -> ConcreateExtensionField {
         return ServicesRegistryRequestsUsersendVerificationCode
    }
    public class func verifyVerificationCode() -> ConcreateExtensionField {
         return ServicesRegistryRequestsUserverifyVerificationCode
    }
    public class func updateUser() -> ConcreateExtensionField {
         return ServicesRegistryRequestsUserupdateUser
    }
    public class func getAuthorizationInstructions() -> ConcreateExtensionField {
         return ServicesRegistryRequestsUsergetAuthorizationInstructions
    }
    public class func completeAuthorization() -> ConcreateExtensionField {
         return ServicesRegistryRequestsUsercompleteAuthorization
    }
    public class func getIdentities() -> ConcreateExtensionField {
         return ServicesRegistryRequestsUsergetIdentities
    }
    public class func bulkCreateUsers() -> ConcreateExtensionField {
         return ServicesRegistryRequestsUserbulkCreateUsers
    }
    public class func recordDevice() -> ConcreateExtensionField {
         return ServicesRegistryRequestsUserrecordDevice
    }
    public class func requestAccess() -> ConcreateExtensionField {
         return ServicesRegistryRequestsUserrequestAccess
    }
    public class func deleteIdentity() -> ConcreateExtensionField {
         return ServicesRegistryRequestsUserdeleteIdentity
    }
    public class func logout() -> ConcreateExtensionField {
         return ServicesRegistryRequestsUserlogout
    }
    public class func getAuthenticationInstructions() -> ConcreateExtensionField {
         return ServicesRegistryRequestsUsergetAuthenticationInstructions
    }
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) {
      unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseFromData(data:NSData) -> Services.Registry.Requests.User {
      return Services.Registry.Requests.User.builder().mergeFromData(data, extensionRegistry:Services.Registry.Requests.RequestsRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.User {
      return Services.Registry.Requests.User.builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) -> Services.Registry.Requests.User {
      return Services.Registry.Requests.User.builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) ->Services.Registry.Requests.User {
      return Services.Registry.Requests.User.builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) -> Services.Registry.Requests.User {
      return Services.Registry.Requests.User.builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.User {
      return Services.Registry.Requests.User.builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func builder() -> Services.Registry.Requests.UserBuilder {
      return Services.Registry.Requests.User.classBuilder() as! Services.Registry.Requests.UserBuilder
    }
    public func builder() -> Services.Registry.Requests.UserBuilder {
      return classBuilder() as! Services.Registry.Requests.UserBuilder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.UserBuilder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.User.builder()
    }
    public func toBuilder() -> Services.Registry.Requests.UserBuilder {
      return Services.Registry.Requests.User.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Services.Registry.Requests.User) -> Services.Registry.Requests.UserBuilder {
      return Services.Registry.Requests.User.builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) {
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Services.Registry.Requests.User"
    }
    override public func className() -> String {
        return "Services.Registry.Requests.User"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Services.Registry.Requests.User.self
    }
    //Meta information declaration end

  }

  final public class UserBuilder : GeneratedMessageBuilder {
    private var builderResult:Services.Registry.Requests.User

    required override public init () {
       builderResult = Services.Registry.Requests.User()
       super.init()
    }
    override public var internalGetResult:GeneratedMessage {
         get {
            return builderResult
         }
    }
    public override func clear() -> Services.Registry.Requests.UserBuilder {
      builderResult = Services.Registry.Requests.User()
      return self
    }
    public override func clone() -> Services.Registry.Requests.UserBuilder {
      return Services.Registry.Requests.User.builderWithPrototype(builderResult)
    }
    public override func build() -> Services.Registry.Requests.User {
         checkInitialized()
         return buildPartial()
    }
    public func buildPartial() -> Services.Registry.Requests.User {
      var returnMe:Services.Registry.Requests.User = builderResult
      return returnMe
    }
    public func mergeFrom(other:Services.Registry.Requests.User) -> Services.Registry.Requests.UserBuilder {
      if (other == Services.Registry.Requests.User()) {
       return self
      }
      mergeUnknownFields(other.unknownFields)
      return self
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream) ->Services.Registry.Requests.UserBuilder {
         return mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.UserBuilder {
      var unknownFieldsBuilder:UnknownFieldSetBuilder = UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
      while (true) {
        var tag = input.readTag()
        switch tag {
        case 0: 
          self.unknownFields = unknownFieldsBuilder.build()
          return self

        default:
          if (!parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag)) {
             unknownFields = unknownFieldsBuilder.build()
             return self
          }
        }
      }
    }
  }

  final public class Organization : GeneratedMessage, GeneratedMessageProtocol {
    override public subscript(key: String) -> Any? {
           switch key {
           default: return nil
           }
    }

    public class func createOrganization() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationcreateOrganization
    }
    public class func getOrganization() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationgetOrganization
    }
    public class func createTeam() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationcreateTeam
    }
    public class func createAddress() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationcreateAddress
    }
    public class func deleteAddress() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationdeleteAddress
    }
    public class func getAddress() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationgetAddress
    }
    public class func getTeam() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationgetTeam
    }
    public class func getTeams() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationgetTeams
    }
    public class func getAddresses() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationgetAddresses
    }
    public class func getTeamDescendants() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationgetTeamDescendants
    }
    public class func getTopLevelTeam() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationgetTopLevelTeam
    }
    public class func createLocation() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationcreateLocation
    }
    public class func updateLocation() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationupdateLocation
    }
    public class func getLocations() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationgetLocations
    }
    public class func getLocation() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationgetLocation
    }
    public class func createToken() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationcreateToken
    }
    public class func getTokens() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationgetTokens
    }
    public class func enableIntegration() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationenableIntegration
    }
    public class func getIntegration() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationgetIntegration
    }
    public class func disableIntegration() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationdisableIntegration
    }
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) {
      unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseFromData(data:NSData) -> Services.Registry.Requests.Organization {
      return Services.Registry.Requests.Organization.builder().mergeFromData(data, extensionRegistry:Services.Registry.Requests.RequestsRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.Organization {
      return Services.Registry.Requests.Organization.builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) -> Services.Registry.Requests.Organization {
      return Services.Registry.Requests.Organization.builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) ->Services.Registry.Requests.Organization {
      return Services.Registry.Requests.Organization.builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) -> Services.Registry.Requests.Organization {
      return Services.Registry.Requests.Organization.builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.Organization {
      return Services.Registry.Requests.Organization.builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func builder() -> Services.Registry.Requests.OrganizationBuilder {
      return Services.Registry.Requests.Organization.classBuilder() as! Services.Registry.Requests.OrganizationBuilder
    }
    public func builder() -> Services.Registry.Requests.OrganizationBuilder {
      return classBuilder() as! Services.Registry.Requests.OrganizationBuilder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.OrganizationBuilder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.Organization.builder()
    }
    public func toBuilder() -> Services.Registry.Requests.OrganizationBuilder {
      return Services.Registry.Requests.Organization.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Services.Registry.Requests.Organization) -> Services.Registry.Requests.OrganizationBuilder {
      return Services.Registry.Requests.Organization.builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) {
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Services.Registry.Requests.Organization"
    }
    override public func className() -> String {
        return "Services.Registry.Requests.Organization"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Services.Registry.Requests.Organization.self
    }
    //Meta information declaration end

  }

  final public class OrganizationBuilder : GeneratedMessageBuilder {
    private var builderResult:Services.Registry.Requests.Organization

    required override public init () {
       builderResult = Services.Registry.Requests.Organization()
       super.init()
    }
    override public var internalGetResult:GeneratedMessage {
         get {
            return builderResult
         }
    }
    public override func clear() -> Services.Registry.Requests.OrganizationBuilder {
      builderResult = Services.Registry.Requests.Organization()
      return self
    }
    public override func clone() -> Services.Registry.Requests.OrganizationBuilder {
      return Services.Registry.Requests.Organization.builderWithPrototype(builderResult)
    }
    public override func build() -> Services.Registry.Requests.Organization {
         checkInitialized()
         return buildPartial()
    }
    public func buildPartial() -> Services.Registry.Requests.Organization {
      var returnMe:Services.Registry.Requests.Organization = builderResult
      return returnMe
    }
    public func mergeFrom(other:Services.Registry.Requests.Organization) -> Services.Registry.Requests.OrganizationBuilder {
      if (other == Services.Registry.Requests.Organization()) {
       return self
      }
      mergeUnknownFields(other.unknownFields)
      return self
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream) ->Services.Registry.Requests.OrganizationBuilder {
         return mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.OrganizationBuilder {
      var unknownFieldsBuilder:UnknownFieldSetBuilder = UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
      while (true) {
        var tag = input.readTag()
        switch tag {
        case 0: 
          self.unknownFields = unknownFieldsBuilder.build()
          return self

        default:
          if (!parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag)) {
             unknownFields = unknownFieldsBuilder.build()
             return self
          }
        }
      }
    }
  }

  final public class Profile : GeneratedMessage, GeneratedMessageProtocol {
    override public subscript(key: String) -> Any? {
           switch key {
           default: return nil
           }
    }

    public class func createProfile() -> ConcreateExtensionField {
         return ServicesRegistryRequestsProfilecreateProfile
    }
    public class func getExtendedProfile() -> ConcreateExtensionField {
         return ServicesRegistryRequestsProfilegetExtendedProfile
    }
    public class func getProfile() -> ConcreateExtensionField {
         return ServicesRegistryRequestsProfilegetProfile
    }
    public class func createTags() -> ConcreateExtensionField {
         return ServicesRegistryRequestsProfilecreateTags
    }
    public class func getTags() -> ConcreateExtensionField {
         return ServicesRegistryRequestsProfilegetTags
    }
    public class func addTags() -> ConcreateExtensionField {
         return ServicesRegistryRequestsProfileaddTags
    }
    public class func updateProfile() -> ConcreateExtensionField {
         return ServicesRegistryRequestsProfileupdateProfile
    }
    public class func getProfiles() -> ConcreateExtensionField {
         return ServicesRegistryRequestsProfilegetProfiles
    }
    public class func getDirectReports() -> ConcreateExtensionField {
         return ServicesRegistryRequestsProfilegetDirectReports
    }
    public class func getPeers() -> ConcreateExtensionField {
         return ServicesRegistryRequestsProfilegetPeers
    }
    public class func getProfileStats() -> ConcreateExtensionField {
         return ServicesRegistryRequestsProfilegetProfileStats
    }
    public class func getUpcomingAnniversaries() -> ConcreateExtensionField {
         return ServicesRegistryRequestsProfilegetUpcomingAnniversaries
    }
    public class func getUpcomingBirthdays() -> ConcreateExtensionField {
         return ServicesRegistryRequestsProfilegetUpcomingBirthdays
    }
    public class func getRecentHires() -> ConcreateExtensionField {
         return ServicesRegistryRequestsProfilegetRecentHires
    }
    public class func getActiveTags() -> ConcreateExtensionField {
         return ServicesRegistryRequestsProfilegetActiveTags
    }
    public class func bulkCreateProfiles() -> ConcreateExtensionField {
         return ServicesRegistryRequestsProfilebulkCreateProfiles
    }
    public class func bulkUpdateProfiles() -> ConcreateExtensionField {
         return ServicesRegistryRequestsProfilebulkUpdateProfiles
    }
    public class func getAttributesForProfiles() -> ConcreateExtensionField {
         return ServicesRegistryRequestsProfilegetAttributesForProfiles
    }
    public class func removeTags() -> ConcreateExtensionField {
         return ServicesRegistryRequestsProfileremoveTags
    }
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) {
      unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseFromData(data:NSData) -> Services.Registry.Requests.Profile {
      return Services.Registry.Requests.Profile.builder().mergeFromData(data, extensionRegistry:Services.Registry.Requests.RequestsRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.Profile {
      return Services.Registry.Requests.Profile.builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) -> Services.Registry.Requests.Profile {
      return Services.Registry.Requests.Profile.builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) ->Services.Registry.Requests.Profile {
      return Services.Registry.Requests.Profile.builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) -> Services.Registry.Requests.Profile {
      return Services.Registry.Requests.Profile.builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.Profile {
      return Services.Registry.Requests.Profile.builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func builder() -> Services.Registry.Requests.ProfileBuilder {
      return Services.Registry.Requests.Profile.classBuilder() as! Services.Registry.Requests.ProfileBuilder
    }
    public func builder() -> Services.Registry.Requests.ProfileBuilder {
      return classBuilder() as! Services.Registry.Requests.ProfileBuilder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.ProfileBuilder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.Profile.builder()
    }
    public func toBuilder() -> Services.Registry.Requests.ProfileBuilder {
      return Services.Registry.Requests.Profile.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Services.Registry.Requests.Profile) -> Services.Registry.Requests.ProfileBuilder {
      return Services.Registry.Requests.Profile.builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) {
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Services.Registry.Requests.Profile"
    }
    override public func className() -> String {
        return "Services.Registry.Requests.Profile"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Services.Registry.Requests.Profile.self
    }
    //Meta information declaration end

  }

  final public class ProfileBuilder : GeneratedMessageBuilder {
    private var builderResult:Services.Registry.Requests.Profile

    required override public init () {
       builderResult = Services.Registry.Requests.Profile()
       super.init()
    }
    override public var internalGetResult:GeneratedMessage {
         get {
            return builderResult
         }
    }
    public override func clear() -> Services.Registry.Requests.ProfileBuilder {
      builderResult = Services.Registry.Requests.Profile()
      return self
    }
    public override func clone() -> Services.Registry.Requests.ProfileBuilder {
      return Services.Registry.Requests.Profile.builderWithPrototype(builderResult)
    }
    public override func build() -> Services.Registry.Requests.Profile {
         checkInitialized()
         return buildPartial()
    }
    public func buildPartial() -> Services.Registry.Requests.Profile {
      var returnMe:Services.Registry.Requests.Profile = builderResult
      return returnMe
    }
    public func mergeFrom(other:Services.Registry.Requests.Profile) -> Services.Registry.Requests.ProfileBuilder {
      if (other == Services.Registry.Requests.Profile()) {
       return self
      }
      mergeUnknownFields(other.unknownFields)
      return self
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream) ->Services.Registry.Requests.ProfileBuilder {
         return mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.ProfileBuilder {
      var unknownFieldsBuilder:UnknownFieldSetBuilder = UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
      while (true) {
        var tag = input.readTag()
        switch tag {
        case 0: 
          self.unknownFields = unknownFieldsBuilder.build()
          return self

        default:
          if (!parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag)) {
             unknownFields = unknownFieldsBuilder.build()
             return self
          }
        }
      }
    }
  }

  final public class Search : GeneratedMessage, GeneratedMessageProtocol {
    override public subscript(key: String) -> Any? {
           switch key {
           default: return nil
           }
    }

    public class func search() -> ConcreateExtensionField {
         return ServicesRegistryRequestsSearchsearch
    }
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) {
      unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseFromData(data:NSData) -> Services.Registry.Requests.Search {
      return Services.Registry.Requests.Search.builder().mergeFromData(data, extensionRegistry:Services.Registry.Requests.RequestsRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.Search {
      return Services.Registry.Requests.Search.builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) -> Services.Registry.Requests.Search {
      return Services.Registry.Requests.Search.builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) ->Services.Registry.Requests.Search {
      return Services.Registry.Requests.Search.builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) -> Services.Registry.Requests.Search {
      return Services.Registry.Requests.Search.builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.Search {
      return Services.Registry.Requests.Search.builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func builder() -> Services.Registry.Requests.SearchBuilder {
      return Services.Registry.Requests.Search.classBuilder() as! Services.Registry.Requests.SearchBuilder
    }
    public func builder() -> Services.Registry.Requests.SearchBuilder {
      return classBuilder() as! Services.Registry.Requests.SearchBuilder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.SearchBuilder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.Search.builder()
    }
    public func toBuilder() -> Services.Registry.Requests.SearchBuilder {
      return Services.Registry.Requests.Search.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Services.Registry.Requests.Search) -> Services.Registry.Requests.SearchBuilder {
      return Services.Registry.Requests.Search.builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) {
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Services.Registry.Requests.Search"
    }
    override public func className() -> String {
        return "Services.Registry.Requests.Search"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Services.Registry.Requests.Search.self
    }
    //Meta information declaration end

  }

  final public class SearchBuilder : GeneratedMessageBuilder {
    private var builderResult:Services.Registry.Requests.Search

    required override public init () {
       builderResult = Services.Registry.Requests.Search()
       super.init()
    }
    override public var internalGetResult:GeneratedMessage {
         get {
            return builderResult
         }
    }
    public override func clear() -> Services.Registry.Requests.SearchBuilder {
      builderResult = Services.Registry.Requests.Search()
      return self
    }
    public override func clone() -> Services.Registry.Requests.SearchBuilder {
      return Services.Registry.Requests.Search.builderWithPrototype(builderResult)
    }
    public override func build() -> Services.Registry.Requests.Search {
         checkInitialized()
         return buildPartial()
    }
    public func buildPartial() -> Services.Registry.Requests.Search {
      var returnMe:Services.Registry.Requests.Search = builderResult
      return returnMe
    }
    public func mergeFrom(other:Services.Registry.Requests.Search) -> Services.Registry.Requests.SearchBuilder {
      if (other == Services.Registry.Requests.Search()) {
       return self
      }
      mergeUnknownFields(other.unknownFields)
      return self
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream) ->Services.Registry.Requests.SearchBuilder {
         return mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.SearchBuilder {
      var unknownFieldsBuilder:UnknownFieldSetBuilder = UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
      while (true) {
        var tag = input.readTag()
        switch tag {
        case 0: 
          self.unknownFields = unknownFieldsBuilder.build()
          return self

        default:
          if (!parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag)) {
             unknownFields = unknownFieldsBuilder.build()
             return self
          }
        }
      }
    }
  }

  final public class Feed : GeneratedMessage, GeneratedMessageProtocol {
    override public subscript(key: String) -> Any? {
           switch key {
           default: return nil
           }
    }

    public class func getProfileFeed() -> ConcreateExtensionField {
         return ServicesRegistryRequestsFeedgetProfileFeed
    }
    public class func getOrganizationFeed() -> ConcreateExtensionField {
         return ServicesRegistryRequestsFeedgetOrganizationFeed
    }
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) {
      unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseFromData(data:NSData) -> Services.Registry.Requests.Feed {
      return Services.Registry.Requests.Feed.builder().mergeFromData(data, extensionRegistry:Services.Registry.Requests.RequestsRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.Feed {
      return Services.Registry.Requests.Feed.builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) -> Services.Registry.Requests.Feed {
      return Services.Registry.Requests.Feed.builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) ->Services.Registry.Requests.Feed {
      return Services.Registry.Requests.Feed.builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) -> Services.Registry.Requests.Feed {
      return Services.Registry.Requests.Feed.builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.Feed {
      return Services.Registry.Requests.Feed.builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func builder() -> Services.Registry.Requests.FeedBuilder {
      return Services.Registry.Requests.Feed.classBuilder() as! Services.Registry.Requests.FeedBuilder
    }
    public func builder() -> Services.Registry.Requests.FeedBuilder {
      return classBuilder() as! Services.Registry.Requests.FeedBuilder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.FeedBuilder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.Feed.builder()
    }
    public func toBuilder() -> Services.Registry.Requests.FeedBuilder {
      return Services.Registry.Requests.Feed.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Services.Registry.Requests.Feed) -> Services.Registry.Requests.FeedBuilder {
      return Services.Registry.Requests.Feed.builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) {
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Services.Registry.Requests.Feed"
    }
    override public func className() -> String {
        return "Services.Registry.Requests.Feed"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Services.Registry.Requests.Feed.self
    }
    //Meta information declaration end

  }

  final public class FeedBuilder : GeneratedMessageBuilder {
    private var builderResult:Services.Registry.Requests.Feed

    required override public init () {
       builderResult = Services.Registry.Requests.Feed()
       super.init()
    }
    override public var internalGetResult:GeneratedMessage {
         get {
            return builderResult
         }
    }
    public override func clear() -> Services.Registry.Requests.FeedBuilder {
      builderResult = Services.Registry.Requests.Feed()
      return self
    }
    public override func clone() -> Services.Registry.Requests.FeedBuilder {
      return Services.Registry.Requests.Feed.builderWithPrototype(builderResult)
    }
    public override func build() -> Services.Registry.Requests.Feed {
         checkInitialized()
         return buildPartial()
    }
    public func buildPartial() -> Services.Registry.Requests.Feed {
      var returnMe:Services.Registry.Requests.Feed = builderResult
      return returnMe
    }
    public func mergeFrom(other:Services.Registry.Requests.Feed) -> Services.Registry.Requests.FeedBuilder {
      if (other == Services.Registry.Requests.Feed()) {
       return self
      }
      mergeUnknownFields(other.unknownFields)
      return self
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream) ->Services.Registry.Requests.FeedBuilder {
         return mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.FeedBuilder {
      var unknownFieldsBuilder:UnknownFieldSetBuilder = UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
      while (true) {
        var tag = input.readTag()
        switch tag {
        case 0: 
          self.unknownFields = unknownFieldsBuilder.build()
          return self

        default:
          if (!parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag)) {
             unknownFields = unknownFieldsBuilder.build()
             return self
          }
        }
      }
    }
  }

  final public class Media : GeneratedMessage, GeneratedMessageProtocol {
    override public subscript(key: String) -> Any? {
           switch key {
           default: return nil
           }
    }

    public class func startImageUpload() -> ConcreateExtensionField {
         return ServicesRegistryRequestsMediastartImageUpload
    }
    public class func completeImageUpload() -> ConcreateExtensionField {
         return ServicesRegistryRequestsMediacompleteImageUpload
    }
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) {
      unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseFromData(data:NSData) -> Services.Registry.Requests.Media {
      return Services.Registry.Requests.Media.builder().mergeFromData(data, extensionRegistry:Services.Registry.Requests.RequestsRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.Media {
      return Services.Registry.Requests.Media.builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) -> Services.Registry.Requests.Media {
      return Services.Registry.Requests.Media.builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) ->Services.Registry.Requests.Media {
      return Services.Registry.Requests.Media.builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) -> Services.Registry.Requests.Media {
      return Services.Registry.Requests.Media.builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.Media {
      return Services.Registry.Requests.Media.builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func builder() -> Services.Registry.Requests.MediaBuilder {
      return Services.Registry.Requests.Media.classBuilder() as! Services.Registry.Requests.MediaBuilder
    }
    public func builder() -> Services.Registry.Requests.MediaBuilder {
      return classBuilder() as! Services.Registry.Requests.MediaBuilder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.MediaBuilder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.Media.builder()
    }
    public func toBuilder() -> Services.Registry.Requests.MediaBuilder {
      return Services.Registry.Requests.Media.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Services.Registry.Requests.Media) -> Services.Registry.Requests.MediaBuilder {
      return Services.Registry.Requests.Media.builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) {
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Services.Registry.Requests.Media"
    }
    override public func className() -> String {
        return "Services.Registry.Requests.Media"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Services.Registry.Requests.Media.self
    }
    //Meta information declaration end

  }

  final public class MediaBuilder : GeneratedMessageBuilder {
    private var builderResult:Services.Registry.Requests.Media

    required override public init () {
       builderResult = Services.Registry.Requests.Media()
       super.init()
    }
    override public var internalGetResult:GeneratedMessage {
         get {
            return builderResult
         }
    }
    public override func clear() -> Services.Registry.Requests.MediaBuilder {
      builderResult = Services.Registry.Requests.Media()
      return self
    }
    public override func clone() -> Services.Registry.Requests.MediaBuilder {
      return Services.Registry.Requests.Media.builderWithPrototype(builderResult)
    }
    public override func build() -> Services.Registry.Requests.Media {
         checkInitialized()
         return buildPartial()
    }
    public func buildPartial() -> Services.Registry.Requests.Media {
      var returnMe:Services.Registry.Requests.Media = builderResult
      return returnMe
    }
    public func mergeFrom(other:Services.Registry.Requests.Media) -> Services.Registry.Requests.MediaBuilder {
      if (other == Services.Registry.Requests.Media()) {
       return self
      }
      mergeUnknownFields(other.unknownFields)
      return self
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream) ->Services.Registry.Requests.MediaBuilder {
         return mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.MediaBuilder {
      var unknownFieldsBuilder:UnknownFieldSetBuilder = UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
      while (true) {
        var tag = input.readTag()
        switch tag {
        case 0: 
          self.unknownFields = unknownFieldsBuilder.build()
          return self

        default:
          if (!parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag)) {
             unknownFields = unknownFieldsBuilder.build()
             return self
          }
        }
      }
    }
  }

  final public class Note : GeneratedMessage, GeneratedMessageProtocol {
    override public subscript(key: String) -> Any? {
           switch key {
           default: return nil
           }
    }

    public class func createNote() -> ConcreateExtensionField {
         return ServicesRegistryRequestsNotecreateNote
    }
    public class func getNotes() -> ConcreateExtensionField {
         return ServicesRegistryRequestsNotegetNotes
    }
    public class func deleteNote() -> ConcreateExtensionField {
         return ServicesRegistryRequestsNotedeleteNote
    }
    public class func updateNote() -> ConcreateExtensionField {
         return ServicesRegistryRequestsNoteupdateNote
    }
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) {
      unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseFromData(data:NSData) -> Services.Registry.Requests.Note {
      return Services.Registry.Requests.Note.builder().mergeFromData(data, extensionRegistry:Services.Registry.Requests.RequestsRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.Note {
      return Services.Registry.Requests.Note.builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) -> Services.Registry.Requests.Note {
      return Services.Registry.Requests.Note.builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) ->Services.Registry.Requests.Note {
      return Services.Registry.Requests.Note.builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) -> Services.Registry.Requests.Note {
      return Services.Registry.Requests.Note.builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.Note {
      return Services.Registry.Requests.Note.builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func builder() -> Services.Registry.Requests.NoteBuilder {
      return Services.Registry.Requests.Note.classBuilder() as! Services.Registry.Requests.NoteBuilder
    }
    public func builder() -> Services.Registry.Requests.NoteBuilder {
      return classBuilder() as! Services.Registry.Requests.NoteBuilder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.NoteBuilder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.Note.builder()
    }
    public func toBuilder() -> Services.Registry.Requests.NoteBuilder {
      return Services.Registry.Requests.Note.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Services.Registry.Requests.Note) -> Services.Registry.Requests.NoteBuilder {
      return Services.Registry.Requests.Note.builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) {
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Services.Registry.Requests.Note"
    }
    override public func className() -> String {
        return "Services.Registry.Requests.Note"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Services.Registry.Requests.Note.self
    }
    //Meta information declaration end

  }

  final public class NoteBuilder : GeneratedMessageBuilder {
    private var builderResult:Services.Registry.Requests.Note

    required override public init () {
       builderResult = Services.Registry.Requests.Note()
       super.init()
    }
    override public var internalGetResult:GeneratedMessage {
         get {
            return builderResult
         }
    }
    public override func clear() -> Services.Registry.Requests.NoteBuilder {
      builderResult = Services.Registry.Requests.Note()
      return self
    }
    public override func clone() -> Services.Registry.Requests.NoteBuilder {
      return Services.Registry.Requests.Note.builderWithPrototype(builderResult)
    }
    public override func build() -> Services.Registry.Requests.Note {
         checkInitialized()
         return buildPartial()
    }
    public func buildPartial() -> Services.Registry.Requests.Note {
      var returnMe:Services.Registry.Requests.Note = builderResult
      return returnMe
    }
    public func mergeFrom(other:Services.Registry.Requests.Note) -> Services.Registry.Requests.NoteBuilder {
      if (other == Services.Registry.Requests.Note()) {
       return self
      }
      mergeUnknownFields(other.unknownFields)
      return self
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream) ->Services.Registry.Requests.NoteBuilder {
         return mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.NoteBuilder {
      var unknownFieldsBuilder:UnknownFieldSetBuilder = UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
      while (true) {
        var tag = input.readTag()
        switch tag {
        case 0: 
          self.unknownFields = unknownFieldsBuilder.build()
          return self

        default:
          if (!parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag)) {
             unknownFields = unknownFieldsBuilder.build()
             return self
          }
        }
      }
    }
  }

  final public class Resume : GeneratedMessage, GeneratedMessageProtocol {
    override public subscript(key: String) -> Any? {
           switch key {
           default: return nil
           }
    }

    public class func bulkCreateEducations() -> ConcreateExtensionField {
         return ServicesRegistryRequestsResumebulkCreateEducations
    }
    public class func bulkCreatePositions() -> ConcreateExtensionField {
         return ServicesRegistryRequestsResumebulkCreatePositions
    }
    public class func createCompany() -> ConcreateExtensionField {
         return ServicesRegistryRequestsResumecreateCompany
    }
    public class func getResume() -> ConcreateExtensionField {
         return ServicesRegistryRequestsResumegetResume
    }
    public class func bulkCreateCompanies() -> ConcreateExtensionField {
         return ServicesRegistryRequestsResumebulkCreateCompanies
    }
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) {
      unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseFromData(data:NSData) -> Services.Registry.Requests.Resume {
      return Services.Registry.Requests.Resume.builder().mergeFromData(data, extensionRegistry:Services.Registry.Requests.RequestsRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.Resume {
      return Services.Registry.Requests.Resume.builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) -> Services.Registry.Requests.Resume {
      return Services.Registry.Requests.Resume.builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) ->Services.Registry.Requests.Resume {
      return Services.Registry.Requests.Resume.builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) -> Services.Registry.Requests.Resume {
      return Services.Registry.Requests.Resume.builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.Resume {
      return Services.Registry.Requests.Resume.builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func builder() -> Services.Registry.Requests.ResumeBuilder {
      return Services.Registry.Requests.Resume.classBuilder() as! Services.Registry.Requests.ResumeBuilder
    }
    public func builder() -> Services.Registry.Requests.ResumeBuilder {
      return classBuilder() as! Services.Registry.Requests.ResumeBuilder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.ResumeBuilder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.Resume.builder()
    }
    public func toBuilder() -> Services.Registry.Requests.ResumeBuilder {
      return Services.Registry.Requests.Resume.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Services.Registry.Requests.Resume) -> Services.Registry.Requests.ResumeBuilder {
      return Services.Registry.Requests.Resume.builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) {
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Services.Registry.Requests.Resume"
    }
    override public func className() -> String {
        return "Services.Registry.Requests.Resume"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Services.Registry.Requests.Resume.self
    }
    //Meta information declaration end

  }

  final public class ResumeBuilder : GeneratedMessageBuilder {
    private var builderResult:Services.Registry.Requests.Resume

    required override public init () {
       builderResult = Services.Registry.Requests.Resume()
       super.init()
    }
    override public var internalGetResult:GeneratedMessage {
         get {
            return builderResult
         }
    }
    public override func clear() -> Services.Registry.Requests.ResumeBuilder {
      builderResult = Services.Registry.Requests.Resume()
      return self
    }
    public override func clone() -> Services.Registry.Requests.ResumeBuilder {
      return Services.Registry.Requests.Resume.builderWithPrototype(builderResult)
    }
    public override func build() -> Services.Registry.Requests.Resume {
         checkInitialized()
         return buildPartial()
    }
    public func buildPartial() -> Services.Registry.Requests.Resume {
      var returnMe:Services.Registry.Requests.Resume = builderResult
      return returnMe
    }
    public func mergeFrom(other:Services.Registry.Requests.Resume) -> Services.Registry.Requests.ResumeBuilder {
      if (other == Services.Registry.Requests.Resume()) {
       return self
      }
      mergeUnknownFields(other.unknownFields)
      return self
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream) ->Services.Registry.Requests.ResumeBuilder {
         return mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.ResumeBuilder {
      var unknownFieldsBuilder:UnknownFieldSetBuilder = UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
      while (true) {
        var tag = input.readTag()
        switch tag {
        case 0: 
          self.unknownFields = unknownFieldsBuilder.build()
          return self

        default:
          if (!parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag)) {
             unknownFields = unknownFieldsBuilder.build()
             return self
          }
        }
      }
    }
  }

  final public class Appreciation : GeneratedMessage, GeneratedMessageProtocol {
    override public subscript(key: String) -> Any? {
           switch key {
           default: return nil
           }
    }

    public class func createAppreciation() -> ConcreateExtensionField {
         return ServicesRegistryRequestsAppreciationcreateAppreciation
    }
    public class func getAppreciation() -> ConcreateExtensionField {
         return ServicesRegistryRequestsAppreciationgetAppreciation
    }
    public class func deleteAppreciation() -> ConcreateExtensionField {
         return ServicesRegistryRequestsAppreciationdeleteAppreciation
    }
    public class func updateAppreciation() -> ConcreateExtensionField {
         return ServicesRegistryRequestsAppreciationupdateAppreciation
    }
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) {
      unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseFromData(data:NSData) -> Services.Registry.Requests.Appreciation {
      return Services.Registry.Requests.Appreciation.builder().mergeFromData(data, extensionRegistry:Services.Registry.Requests.RequestsRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.Appreciation {
      return Services.Registry.Requests.Appreciation.builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) -> Services.Registry.Requests.Appreciation {
      return Services.Registry.Requests.Appreciation.builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) ->Services.Registry.Requests.Appreciation {
      return Services.Registry.Requests.Appreciation.builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) -> Services.Registry.Requests.Appreciation {
      return Services.Registry.Requests.Appreciation.builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.Appreciation {
      return Services.Registry.Requests.Appreciation.builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func builder() -> Services.Registry.Requests.AppreciationBuilder {
      return Services.Registry.Requests.Appreciation.classBuilder() as! Services.Registry.Requests.AppreciationBuilder
    }
    public func builder() -> Services.Registry.Requests.AppreciationBuilder {
      return classBuilder() as! Services.Registry.Requests.AppreciationBuilder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.AppreciationBuilder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.Appreciation.builder()
    }
    public func toBuilder() -> Services.Registry.Requests.AppreciationBuilder {
      return Services.Registry.Requests.Appreciation.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Services.Registry.Requests.Appreciation) -> Services.Registry.Requests.AppreciationBuilder {
      return Services.Registry.Requests.Appreciation.builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) {
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Services.Registry.Requests.Appreciation"
    }
    override public func className() -> String {
        return "Services.Registry.Requests.Appreciation"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Services.Registry.Requests.Appreciation.self
    }
    //Meta information declaration end

  }

  final public class AppreciationBuilder : GeneratedMessageBuilder {
    private var builderResult:Services.Registry.Requests.Appreciation

    required override public init () {
       builderResult = Services.Registry.Requests.Appreciation()
       super.init()
    }
    override public var internalGetResult:GeneratedMessage {
         get {
            return builderResult
         }
    }
    public override func clear() -> Services.Registry.Requests.AppreciationBuilder {
      builderResult = Services.Registry.Requests.Appreciation()
      return self
    }
    public override func clone() -> Services.Registry.Requests.AppreciationBuilder {
      return Services.Registry.Requests.Appreciation.builderWithPrototype(builderResult)
    }
    public override func build() -> Services.Registry.Requests.Appreciation {
         checkInitialized()
         return buildPartial()
    }
    public func buildPartial() -> Services.Registry.Requests.Appreciation {
      var returnMe:Services.Registry.Requests.Appreciation = builderResult
      return returnMe
    }
    public func mergeFrom(other:Services.Registry.Requests.Appreciation) -> Services.Registry.Requests.AppreciationBuilder {
      if (other == Services.Registry.Requests.Appreciation()) {
       return self
      }
      mergeUnknownFields(other.unknownFields)
      return self
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream) ->Services.Registry.Requests.AppreciationBuilder {
         return mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.AppreciationBuilder {
      var unknownFieldsBuilder:UnknownFieldSetBuilder = UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
      while (true) {
        var tag = input.readTag()
        switch tag {
        case 0: 
          self.unknownFields = unknownFieldsBuilder.build()
          return self

        default:
          if (!parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag)) {
             unknownFields = unknownFieldsBuilder.build()
             return self
          }
        }
      }
    }
  }

  final public class Sync : GeneratedMessage, GeneratedMessageProtocol {
    override public subscript(key: String) -> Any? {
           switch key {
           default: return nil
           }
    }

    public class func startSync() -> ConcreateExtensionField {
         return ServicesRegistryRequestsSyncstartSync
    }
    public class func syncPayloads() -> ConcreateExtensionField {
         return ServicesRegistryRequestsSyncsyncPayloads
    }
    public class func completeSync() -> ConcreateExtensionField {
         return ServicesRegistryRequestsSynccompleteSync
    }
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) {
      unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseFromData(data:NSData) -> Services.Registry.Requests.Sync {
      return Services.Registry.Requests.Sync.builder().mergeFromData(data, extensionRegistry:Services.Registry.Requests.RequestsRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.Sync {
      return Services.Registry.Requests.Sync.builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) -> Services.Registry.Requests.Sync {
      return Services.Registry.Requests.Sync.builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) ->Services.Registry.Requests.Sync {
      return Services.Registry.Requests.Sync.builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) -> Services.Registry.Requests.Sync {
      return Services.Registry.Requests.Sync.builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.Sync {
      return Services.Registry.Requests.Sync.builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func builder() -> Services.Registry.Requests.SyncBuilder {
      return Services.Registry.Requests.Sync.classBuilder() as! Services.Registry.Requests.SyncBuilder
    }
    public func builder() -> Services.Registry.Requests.SyncBuilder {
      return classBuilder() as! Services.Registry.Requests.SyncBuilder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.SyncBuilder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.Sync.builder()
    }
    public func toBuilder() -> Services.Registry.Requests.SyncBuilder {
      return Services.Registry.Requests.Sync.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Services.Registry.Requests.Sync) -> Services.Registry.Requests.SyncBuilder {
      return Services.Registry.Requests.Sync.builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) {
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Services.Registry.Requests.Sync"
    }
    override public func className() -> String {
        return "Services.Registry.Requests.Sync"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Services.Registry.Requests.Sync.self
    }
    //Meta information declaration end

  }

  final public class SyncBuilder : GeneratedMessageBuilder {
    private var builderResult:Services.Registry.Requests.Sync

    required override public init () {
       builderResult = Services.Registry.Requests.Sync()
       super.init()
    }
    override public var internalGetResult:GeneratedMessage {
         get {
            return builderResult
         }
    }
    public override func clear() -> Services.Registry.Requests.SyncBuilder {
      builderResult = Services.Registry.Requests.Sync()
      return self
    }
    public override func clone() -> Services.Registry.Requests.SyncBuilder {
      return Services.Registry.Requests.Sync.builderWithPrototype(builderResult)
    }
    public override func build() -> Services.Registry.Requests.Sync {
         checkInitialized()
         return buildPartial()
    }
    public func buildPartial() -> Services.Registry.Requests.Sync {
      var returnMe:Services.Registry.Requests.Sync = builderResult
      return returnMe
    }
    public func mergeFrom(other:Services.Registry.Requests.Sync) -> Services.Registry.Requests.SyncBuilder {
      if (other == Services.Registry.Requests.Sync()) {
       return self
      }
      mergeUnknownFields(other.unknownFields)
      return self
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream) ->Services.Registry.Requests.SyncBuilder {
         return mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.SyncBuilder {
      var unknownFieldsBuilder:UnknownFieldSetBuilder = UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
      while (true) {
        var tag = input.readTag()
        switch tag {
        case 0: 
          self.unknownFields = unknownFieldsBuilder.build()
          return self

        default:
          if (!parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag)) {
             unknownFields = unknownFieldsBuilder.build()
             return self
          }
        }
      }
    }
  }

  final public class Group : GeneratedMessage, GeneratedMessageProtocol {
    override public subscript(key: String) -> Any? {
           switch key {
           default: return nil
           }
    }

    public class func getGroups() -> ConcreateExtensionField {
         return ServicesRegistryRequestsGroupgetGroups
    }
    public class func joinGroup() -> ConcreateExtensionField {
         return ServicesRegistryRequestsGroupjoinGroup
    }
    public class func respondToMembershipRequest() -> ConcreateExtensionField {
         return ServicesRegistryRequestsGrouprespondToMembershipRequest
    }
    public class func leaveGroup() -> ConcreateExtensionField {
         return ServicesRegistryRequestsGroupleaveGroup
    }
    public class func getMembers() -> ConcreateExtensionField {
         return ServicesRegistryRequestsGroupgetMembers
    }
    public class func getGroup() -> ConcreateExtensionField {
         return ServicesRegistryRequestsGroupgetGroup
    }
    public class func addToGroup() -> ConcreateExtensionField {
         return ServicesRegistryRequestsGroupaddToGroup
    }
    public class func getMembershipRequests() -> ConcreateExtensionField {
         return ServicesRegistryRequestsGroupgetMembershipRequests
    }
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) {
      unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseFromData(data:NSData) -> Services.Registry.Requests.Group {
      return Services.Registry.Requests.Group.builder().mergeFromData(data, extensionRegistry:Services.Registry.Requests.RequestsRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.Group {
      return Services.Registry.Requests.Group.builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) -> Services.Registry.Requests.Group {
      return Services.Registry.Requests.Group.builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) ->Services.Registry.Requests.Group {
      return Services.Registry.Requests.Group.builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) -> Services.Registry.Requests.Group {
      return Services.Registry.Requests.Group.builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.Group {
      return Services.Registry.Requests.Group.builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func builder() -> Services.Registry.Requests.GroupBuilder {
      return Services.Registry.Requests.Group.classBuilder() as! Services.Registry.Requests.GroupBuilder
    }
    public func builder() -> Services.Registry.Requests.GroupBuilder {
      return classBuilder() as! Services.Registry.Requests.GroupBuilder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.GroupBuilder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.Group.builder()
    }
    public func toBuilder() -> Services.Registry.Requests.GroupBuilder {
      return Services.Registry.Requests.Group.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Services.Registry.Requests.Group) -> Services.Registry.Requests.GroupBuilder {
      return Services.Registry.Requests.Group.builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) {
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Services.Registry.Requests.Group"
    }
    override public func className() -> String {
        return "Services.Registry.Requests.Group"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Services.Registry.Requests.Group.self
    }
    //Meta information declaration end

  }

  final public class GroupBuilder : GeneratedMessageBuilder {
    private var builderResult:Services.Registry.Requests.Group

    required override public init () {
       builderResult = Services.Registry.Requests.Group()
       super.init()
    }
    override public var internalGetResult:GeneratedMessage {
         get {
            return builderResult
         }
    }
    public override func clear() -> Services.Registry.Requests.GroupBuilder {
      builderResult = Services.Registry.Requests.Group()
      return self
    }
    public override func clone() -> Services.Registry.Requests.GroupBuilder {
      return Services.Registry.Requests.Group.builderWithPrototype(builderResult)
    }
    public override func build() -> Services.Registry.Requests.Group {
         checkInitialized()
         return buildPartial()
    }
    public func buildPartial() -> Services.Registry.Requests.Group {
      var returnMe:Services.Registry.Requests.Group = builderResult
      return returnMe
    }
    public func mergeFrom(other:Services.Registry.Requests.Group) -> Services.Registry.Requests.GroupBuilder {
      if (other == Services.Registry.Requests.Group()) {
       return self
      }
      mergeUnknownFields(other.unknownFields)
      return self
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream) ->Services.Registry.Requests.GroupBuilder {
         return mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.GroupBuilder {
      var unknownFieldsBuilder:UnknownFieldSetBuilder = UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
      while (true) {
        var tag = input.readTag()
        switch tag {
        case 0: 
          self.unknownFields = unknownFieldsBuilder.build()
          return self

        default:
          if (!parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag)) {
             unknownFields = unknownFieldsBuilder.build()
             return self
          }
        }
      }
    }
  }

  final public class Glossary : GeneratedMessage, GeneratedMessageProtocol {
    override public subscript(key: String) -> Any? {
           switch key {
           default: return nil
           }
    }

    public class func createTerm() -> ConcreateExtensionField {
         return ServicesRegistryRequestsGlossarycreateTerm
    }
    public class func getTerm() -> ConcreateExtensionField {
         return ServicesRegistryRequestsGlossarygetTerm
    }
    public class func getTerms() -> ConcreateExtensionField {
         return ServicesRegistryRequestsGlossarygetTerms
    }
    public class func updateTerm() -> ConcreateExtensionField {
         return ServicesRegistryRequestsGlossaryupdateTerm
    }
    public class func deleteTerm() -> ConcreateExtensionField {
         return ServicesRegistryRequestsGlossarydeleteTerm
    }
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) {
      unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseFromData(data:NSData) -> Services.Registry.Requests.Glossary {
      return Services.Registry.Requests.Glossary.builder().mergeFromData(data, extensionRegistry:Services.Registry.Requests.RequestsRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.Glossary {
      return Services.Registry.Requests.Glossary.builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) -> Services.Registry.Requests.Glossary {
      return Services.Registry.Requests.Glossary.builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) ->Services.Registry.Requests.Glossary {
      return Services.Registry.Requests.Glossary.builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) -> Services.Registry.Requests.Glossary {
      return Services.Registry.Requests.Glossary.builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.Glossary {
      return Services.Registry.Requests.Glossary.builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func builder() -> Services.Registry.Requests.GlossaryBuilder {
      return Services.Registry.Requests.Glossary.classBuilder() as! Services.Registry.Requests.GlossaryBuilder
    }
    public func builder() -> Services.Registry.Requests.GlossaryBuilder {
      return classBuilder() as! Services.Registry.Requests.GlossaryBuilder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.GlossaryBuilder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.Glossary.builder()
    }
    public func toBuilder() -> Services.Registry.Requests.GlossaryBuilder {
      return Services.Registry.Requests.Glossary.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Services.Registry.Requests.Glossary) -> Services.Registry.Requests.GlossaryBuilder {
      return Services.Registry.Requests.Glossary.builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) {
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Services.Registry.Requests.Glossary"
    }
    override public func className() -> String {
        return "Services.Registry.Requests.Glossary"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Services.Registry.Requests.Glossary.self
    }
    //Meta information declaration end

  }

  final public class GlossaryBuilder : GeneratedMessageBuilder {
    private var builderResult:Services.Registry.Requests.Glossary

    required override public init () {
       builderResult = Services.Registry.Requests.Glossary()
       super.init()
    }
    override public var internalGetResult:GeneratedMessage {
         get {
            return builderResult
         }
    }
    public override func clear() -> Services.Registry.Requests.GlossaryBuilder {
      builderResult = Services.Registry.Requests.Glossary()
      return self
    }
    public override func clone() -> Services.Registry.Requests.GlossaryBuilder {
      return Services.Registry.Requests.Glossary.builderWithPrototype(builderResult)
    }
    public override func build() -> Services.Registry.Requests.Glossary {
         checkInitialized()
         return buildPartial()
    }
    public func buildPartial() -> Services.Registry.Requests.Glossary {
      var returnMe:Services.Registry.Requests.Glossary = builderResult
      return returnMe
    }
    public func mergeFrom(other:Services.Registry.Requests.Glossary) -> Services.Registry.Requests.GlossaryBuilder {
      if (other == Services.Registry.Requests.Glossary()) {
       return self
      }
      mergeUnknownFields(other.unknownFields)
      return self
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream) ->Services.Registry.Requests.GlossaryBuilder {
         return mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.GlossaryBuilder {
      var unknownFieldsBuilder:UnknownFieldSetBuilder = UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
      while (true) {
        var tag = input.readTag()
        switch tag {
        case 0: 
          self.unknownFields = unknownFieldsBuilder.build()
          return self

        default:
          if (!parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag)) {
             unknownFields = unknownFieldsBuilder.build()
             return self
          }
        }
      }
    }
  }

}

// @@protoc_insertion_point(global_scope)
