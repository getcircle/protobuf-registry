// Generated by the protocol buffer compiler.  DO NOT EDIT!

import Foundation
public extension Services.Registry{ public struct Requests { }}

public func == (lhs: Services.Registry.Requests.User, rhs: Services.Registry.Requests.User) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  return (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
}

public func == (lhs: Services.Registry.Requests.Organization, rhs: Services.Registry.Requests.Organization) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  return (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
}

public func == (lhs: Services.Registry.Requests.Profile, rhs: Services.Registry.Requests.Profile) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  return (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
}

public func == (lhs: Services.Registry.Requests.Search, rhs: Services.Registry.Requests.Search) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  return (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
}

public func == (lhs: Services.Registry.Requests.Media, rhs: Services.Registry.Requests.Media) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  return (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
}

public func == (lhs: Services.Registry.Requests.Sync, rhs: Services.Registry.Requests.Sync) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  return (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
}

public func == (lhs: Services.Registry.Requests.Group, rhs: Services.Registry.Requests.Group) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  return (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
}

public func == (lhs: Services.Registry.Requests.Glossary, rhs: Services.Registry.Requests.Glossary) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  return (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
}

public func == (lhs: Services.Registry.Requests.Notification, rhs: Services.Registry.Requests.Notification) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  return (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
}

public func == (lhs: Services.Registry.Requests.History, rhs: Services.Registry.Requests.History) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  return (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
}

public var ServicesRegistryRequestsUsercreateUser:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsUsercreateUserStatic
   }
}
public var ServicesRegistryRequestsUservalidUser:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsUservalidUserStatic
   }
}
public var ServicesRegistryRequestsUserauthenticateUser:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsUserauthenticateUserStatic
   }
}
public var ServicesRegistryRequestsUsergetUser:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsUsergetUserStatic
   }
}
public var ServicesRegistryRequestsUsersendVerificationCode:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsUsersendVerificationCodeStatic
   }
}
public var ServicesRegistryRequestsUserverifyVerificationCode:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsUserverifyVerificationCodeStatic
   }
}
public var ServicesRegistryRequestsUserupdateUser:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsUserupdateUserStatic
   }
}
public var ServicesRegistryRequestsUsergetAuthorizationInstructions:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsUsergetAuthorizationInstructionsStatic
   }
}
public var ServicesRegistryRequestsUsercompleteAuthorization:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsUsercompleteAuthorizationStatic
   }
}
public var ServicesRegistryRequestsUsergetIdentities:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsUsergetIdentitiesStatic
   }
}
public var ServicesRegistryRequestsUserbulkCreateUsers:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsUserbulkCreateUsersStatic
   }
}
public var ServicesRegistryRequestsUserrecordDevice:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsUserrecordDeviceStatic
   }
}
public var ServicesRegistryRequestsUserrequestAccess:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsUserrequestAccessStatic
   }
}
public var ServicesRegistryRequestsUserdeleteIdentity:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsUserdeleteIdentityStatic
   }
}
public var ServicesRegistryRequestsUserlogout:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsUserlogoutStatic
   }
}
public var ServicesRegistryRequestsUsergetAuthenticationInstructions:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsUsergetAuthenticationInstructionsStatic
   }
}
public var ServicesRegistryRequestsUsergetActiveDevices:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsUsergetActiveDevicesStatic
   }
}
public var ServicesRegistryRequestsOrganizationcreateOrganization:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationcreateOrganizationStatic
   }
}
public var ServicesRegistryRequestsOrganizationgetOrganization:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationgetOrganizationStatic
   }
}
public var ServicesRegistryRequestsOrganizationgetTeam:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationgetTeamStatic
   }
}
public var ServicesRegistryRequestsOrganizationcreateLocation:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationcreateLocationStatic
   }
}
public var ServicesRegistryRequestsOrganizationupdateLocation:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationupdateLocationStatic
   }
}
public var ServicesRegistryRequestsOrganizationgetLocations:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationgetLocationsStatic
   }
}
public var ServicesRegistryRequestsOrganizationgetLocation:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationgetLocationStatic
   }
}
public var ServicesRegistryRequestsOrganizationcreateToken:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationcreateTokenStatic
   }
}
public var ServicesRegistryRequestsOrganizationgetTokens:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationgetTokensStatic
   }
}
public var ServicesRegistryRequestsOrganizationenableIntegration:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationenableIntegrationStatic
   }
}
public var ServicesRegistryRequestsOrganizationgetIntegration:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationgetIntegrationStatic
   }
}
public var ServicesRegistryRequestsOrganizationdisableIntegration:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationdisableIntegrationStatic
   }
}
public var ServicesRegistryRequestsOrganizationupdateTeam:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationupdateTeamStatic
   }
}
public var ServicesRegistryRequestsOrganizationaddDirectReports:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationaddDirectReportsStatic
   }
}
public var ServicesRegistryRequestsOrganizationgetLocationMembers:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationgetLocationMembersStatic
   }
}
public var ServicesRegistryRequestsOrganizationgetProfileReportingDetails:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationgetProfileReportingDetailsStatic
   }
}
public var ServicesRegistryRequestsOrganizationgetTeamReportingDetails:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationgetTeamReportingDetailsStatic
   }
}
public var ServicesRegistryRequestsOrganizationsetManager:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationsetManagerStatic
   }
}
public var ServicesRegistryRequestsOrganizationaddLocationMembers:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsOrganizationaddLocationMembersStatic
   }
}
public var ServicesRegistryRequestsProfilecreateProfile:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsProfilecreateProfileStatic
   }
}
public var ServicesRegistryRequestsProfilegetExtendedProfile:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsProfilegetExtendedProfileStatic
   }
}
public var ServicesRegistryRequestsProfilegetProfile:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsProfilegetProfileStatic
   }
}
public var ServicesRegistryRequestsProfilecreateTags:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsProfilecreateTagsStatic
   }
}
public var ServicesRegistryRequestsProfilegetTags:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsProfilegetTagsStatic
   }
}
public var ServicesRegistryRequestsProfileaddTags:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsProfileaddTagsStatic
   }
}
public var ServicesRegistryRequestsProfileupdateProfile:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsProfileupdateProfileStatic
   }
}
public var ServicesRegistryRequestsProfilegetProfiles:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsProfilegetProfilesStatic
   }
}
public var ServicesRegistryRequestsProfilegetUpcomingAnniversaries:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsProfilegetUpcomingAnniversariesStatic
   }
}
public var ServicesRegistryRequestsProfilegetUpcomingBirthdays:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsProfilegetUpcomingBirthdaysStatic
   }
}
public var ServicesRegistryRequestsProfilegetRecentHires:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsProfilegetRecentHiresStatic
   }
}
public var ServicesRegistryRequestsProfilegetActiveTags:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsProfilegetActiveTagsStatic
   }
}
public var ServicesRegistryRequestsProfilebulkCreateProfiles:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsProfilebulkCreateProfilesStatic
   }
}
public var ServicesRegistryRequestsProfilebulkUpdateProfiles:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsProfilebulkUpdateProfilesStatic
   }
}
public var ServicesRegistryRequestsProfileremoveTags:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsProfileremoveTagsStatic
   }
}
public var ServicesRegistryRequestsSearchsearch:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsSearchsearchStatic
   }
}
public var ServicesRegistryRequestsMediastartImageUpload:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsMediastartImageUploadStatic
   }
}
public var ServicesRegistryRequestsMediacompleteImageUpload:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsMediacompleteImageUploadStatic
   }
}
public var ServicesRegistryRequestsSyncstartSync:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsSyncstartSyncStatic
   }
}
public var ServicesRegistryRequestsSyncsyncPayloads:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsSyncsyncPayloadsStatic
   }
}
public var ServicesRegistryRequestsSynccompleteSync:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsSynccompleteSyncStatic
   }
}
public var ServicesRegistryRequestsGroupgetGroups:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsGroupgetGroupsStatic
   }
}
public var ServicesRegistryRequestsGroupjoinGroup:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsGroupjoinGroupStatic
   }
}
public var ServicesRegistryRequestsGrouprespondToMembershipRequest:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsGrouprespondToMembershipRequestStatic
   }
}
public var ServicesRegistryRequestsGroupleaveGroup:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsGroupleaveGroupStatic
   }
}
public var ServicesRegistryRequestsGroupgetMembers:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsGroupgetMembersStatic
   }
}
public var ServicesRegistryRequestsGroupgetGroup:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsGroupgetGroupStatic
   }
}
public var ServicesRegistryRequestsGroupaddToGroup:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsGroupaddToGroupStatic
   }
}
public var ServicesRegistryRequestsGroupgetMembershipRequests:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsGroupgetMembershipRequestsStatic
   }
}
public var ServicesRegistryRequestsGlossarycreateTerm:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsGlossarycreateTermStatic
   }
}
public var ServicesRegistryRequestsGlossarygetTerm:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsGlossarygetTermStatic
   }
}
public var ServicesRegistryRequestsGlossarygetTerms:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsGlossarygetTermsStatic
   }
}
public var ServicesRegistryRequestsGlossaryupdateTerm:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsGlossaryupdateTermStatic
   }
}
public var ServicesRegistryRequestsGlossarydeleteTerm:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsGlossarydeleteTermStatic
   }
}
public var ServicesRegistryRequestsNotificationregisterDevice:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsNotificationregisterDeviceStatic
   }
}
public var ServicesRegistryRequestsNotificationgetPreferences:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsNotificationgetPreferencesStatic
   }
}
public var ServicesRegistryRequestsNotificationupdatePreference:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsNotificationupdatePreferenceStatic
   }
}
public var ServicesRegistryRequestsNotificationsendNotification:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsNotificationsendNotificationStatic
   }
}
public var ServicesRegistryRequestsHistoryrecordAction:ConcreateExtensionField {
   get {
       return Services.Registry.Requests.RequestsRoot.sharedInstance.ServicesRegistryRequestsHistoryrecordActionStatic
   }
}
public extension Services.Registry.Requests {
  public struct RequestsRoot {
    public static var sharedInstance : RequestsRoot {
     struct Static {
         static let instance : RequestsRoot = RequestsRoot()
     }
     return Static.instance
    }
    var ServicesRegistryRequestsUsercreateUserStatic:ConcreateExtensionField
    var ServicesRegistryRequestsUservalidUserStatic:ConcreateExtensionField
    var ServicesRegistryRequestsUserauthenticateUserStatic:ConcreateExtensionField
    var ServicesRegistryRequestsUsergetUserStatic:ConcreateExtensionField
    var ServicesRegistryRequestsUsersendVerificationCodeStatic:ConcreateExtensionField
    var ServicesRegistryRequestsUserverifyVerificationCodeStatic:ConcreateExtensionField
    var ServicesRegistryRequestsUserupdateUserStatic:ConcreateExtensionField
    var ServicesRegistryRequestsUsergetAuthorizationInstructionsStatic:ConcreateExtensionField
    var ServicesRegistryRequestsUsercompleteAuthorizationStatic:ConcreateExtensionField
    var ServicesRegistryRequestsUsergetIdentitiesStatic:ConcreateExtensionField
    var ServicesRegistryRequestsUserbulkCreateUsersStatic:ConcreateExtensionField
    var ServicesRegistryRequestsUserrecordDeviceStatic:ConcreateExtensionField
    var ServicesRegistryRequestsUserrequestAccessStatic:ConcreateExtensionField
    var ServicesRegistryRequestsUserdeleteIdentityStatic:ConcreateExtensionField
    var ServicesRegistryRequestsUserlogoutStatic:ConcreateExtensionField
    var ServicesRegistryRequestsUsergetAuthenticationInstructionsStatic:ConcreateExtensionField
    var ServicesRegistryRequestsUsergetActiveDevicesStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationcreateOrganizationStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationgetOrganizationStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationgetTeamStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationcreateLocationStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationupdateLocationStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationgetLocationsStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationgetLocationStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationcreateTokenStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationgetTokensStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationenableIntegrationStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationgetIntegrationStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationdisableIntegrationStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationupdateTeamStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationaddDirectReportsStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationgetLocationMembersStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationgetProfileReportingDetailsStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationgetTeamReportingDetailsStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationsetManagerStatic:ConcreateExtensionField
    var ServicesRegistryRequestsOrganizationaddLocationMembersStatic:ConcreateExtensionField
    var ServicesRegistryRequestsProfilecreateProfileStatic:ConcreateExtensionField
    var ServicesRegistryRequestsProfilegetExtendedProfileStatic:ConcreateExtensionField
    var ServicesRegistryRequestsProfilegetProfileStatic:ConcreateExtensionField
    var ServicesRegistryRequestsProfilecreateTagsStatic:ConcreateExtensionField
    var ServicesRegistryRequestsProfilegetTagsStatic:ConcreateExtensionField
    var ServicesRegistryRequestsProfileaddTagsStatic:ConcreateExtensionField
    var ServicesRegistryRequestsProfileupdateProfileStatic:ConcreateExtensionField
    var ServicesRegistryRequestsProfilegetProfilesStatic:ConcreateExtensionField
    var ServicesRegistryRequestsProfilegetUpcomingAnniversariesStatic:ConcreateExtensionField
    var ServicesRegistryRequestsProfilegetUpcomingBirthdaysStatic:ConcreateExtensionField
    var ServicesRegistryRequestsProfilegetRecentHiresStatic:ConcreateExtensionField
    var ServicesRegistryRequestsProfilegetActiveTagsStatic:ConcreateExtensionField
    var ServicesRegistryRequestsProfilebulkCreateProfilesStatic:ConcreateExtensionField
    var ServicesRegistryRequestsProfilebulkUpdateProfilesStatic:ConcreateExtensionField
    var ServicesRegistryRequestsProfileremoveTagsStatic:ConcreateExtensionField
    var ServicesRegistryRequestsSearchsearchStatic:ConcreateExtensionField
    var ServicesRegistryRequestsMediastartImageUploadStatic:ConcreateExtensionField
    var ServicesRegistryRequestsMediacompleteImageUploadStatic:ConcreateExtensionField
    var ServicesRegistryRequestsSyncstartSyncStatic:ConcreateExtensionField
    var ServicesRegistryRequestsSyncsyncPayloadsStatic:ConcreateExtensionField
    var ServicesRegistryRequestsSynccompleteSyncStatic:ConcreateExtensionField
    var ServicesRegistryRequestsGroupgetGroupsStatic:ConcreateExtensionField
    var ServicesRegistryRequestsGroupjoinGroupStatic:ConcreateExtensionField
    var ServicesRegistryRequestsGrouprespondToMembershipRequestStatic:ConcreateExtensionField
    var ServicesRegistryRequestsGroupleaveGroupStatic:ConcreateExtensionField
    var ServicesRegistryRequestsGroupgetMembersStatic:ConcreateExtensionField
    var ServicesRegistryRequestsGroupgetGroupStatic:ConcreateExtensionField
    var ServicesRegistryRequestsGroupaddToGroupStatic:ConcreateExtensionField
    var ServicesRegistryRequestsGroupgetMembershipRequestsStatic:ConcreateExtensionField
    var ServicesRegistryRequestsGlossarycreateTermStatic:ConcreateExtensionField
    var ServicesRegistryRequestsGlossarygetTermStatic:ConcreateExtensionField
    var ServicesRegistryRequestsGlossarygetTermsStatic:ConcreateExtensionField
    var ServicesRegistryRequestsGlossaryupdateTermStatic:ConcreateExtensionField
    var ServicesRegistryRequestsGlossarydeleteTermStatic:ConcreateExtensionField
    var ServicesRegistryRequestsNotificationregisterDeviceStatic:ConcreateExtensionField
    var ServicesRegistryRequestsNotificationgetPreferencesStatic:ConcreateExtensionField
    var ServicesRegistryRequestsNotificationupdatePreferenceStatic:ConcreateExtensionField
    var ServicesRegistryRequestsNotificationsendNotificationStatic:ConcreateExtensionField
    var ServicesRegistryRequestsHistoryrecordActionStatic:ConcreateExtensionField
    public var extensionRegistry:ExtensionRegistry

    init() {
      ServicesRegistryRequestsUsercreateUserStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 100, defaultValue:Services.User.Actions.CreateUser.RequestV1(), messageOrGroupClass:Services.User.Actions.CreateUser.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsUservalidUserStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 101, defaultValue:Services.User.Actions.ValidUser.RequestV1(), messageOrGroupClass:Services.User.Actions.ValidUser.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsUserauthenticateUserStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 102, defaultValue:Services.User.Actions.AuthenticateUser.RequestV1(), messageOrGroupClass:Services.User.Actions.AuthenticateUser.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsUsergetUserStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 103, defaultValue:Services.User.Actions.GetUser.RequestV1(), messageOrGroupClass:Services.User.Actions.GetUser.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsUsersendVerificationCodeStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 104, defaultValue:Services.User.Actions.SendVerificationCode.RequestV1(), messageOrGroupClass:Services.User.Actions.SendVerificationCode.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsUserverifyVerificationCodeStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 105, defaultValue:Services.User.Actions.VerifyVerificationCode.RequestV1(), messageOrGroupClass:Services.User.Actions.VerifyVerificationCode.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsUserupdateUserStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 106, defaultValue:Services.User.Actions.UpdateUser.RequestV1(), messageOrGroupClass:Services.User.Actions.UpdateUser.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsUsergetAuthorizationInstructionsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 107, defaultValue:Services.User.Actions.GetAuthorizationInstructions.RequestV1(), messageOrGroupClass:Services.User.Actions.GetAuthorizationInstructions.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsUsercompleteAuthorizationStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 108, defaultValue:Services.User.Actions.CompleteAuthorization.RequestV1(), messageOrGroupClass:Services.User.Actions.CompleteAuthorization.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsUsergetIdentitiesStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 109, defaultValue:Services.User.Actions.GetIdentities.RequestV1(), messageOrGroupClass:Services.User.Actions.GetIdentities.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsUserbulkCreateUsersStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 110, defaultValue:Services.User.Actions.BulkCreateUsers.RequestV1(), messageOrGroupClass:Services.User.Actions.BulkCreateUsers.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsUserrecordDeviceStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 111, defaultValue:Services.User.Actions.RecordDevice.RequestV1(), messageOrGroupClass:Services.User.Actions.RecordDevice.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsUserrequestAccessStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 112, defaultValue:Services.User.Actions.RequestAccess.RequestV1(), messageOrGroupClass:Services.User.Actions.RequestAccess.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsUserdeleteIdentityStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 113, defaultValue:Services.User.Actions.DeleteIdentity.RequestV1(), messageOrGroupClass:Services.User.Actions.DeleteIdentity.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsUserlogoutStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 114, defaultValue:Services.User.Actions.Logout.RequestV1(), messageOrGroupClass:Services.User.Actions.Logout.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsUsergetAuthenticationInstructionsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 115, defaultValue:Services.User.Actions.GetAuthenticationInstructions.RequestV1(), messageOrGroupClass:Services.User.Actions.GetAuthenticationInstructions.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsUsergetActiveDevicesStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 116, defaultValue:Services.User.Actions.GetActiveDevices.RequestV1(), messageOrGroupClass:Services.User.Actions.GetActiveDevices.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationcreateOrganizationStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 200, defaultValue:Services.Organization.Actions.CreateOrganization.RequestV1(), messageOrGroupClass:Services.Organization.Actions.CreateOrganization.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationgetOrganizationStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 201, defaultValue:Services.Organization.Actions.GetOrganization.RequestV1(), messageOrGroupClass:Services.Organization.Actions.GetOrganization.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationgetTeamStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 202, defaultValue:Services.Organization.Actions.GetTeam.RequestV1(), messageOrGroupClass:Services.Organization.Actions.GetTeam.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationcreateLocationStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 203, defaultValue:Services.Organization.Actions.CreateLocation.RequestV1(), messageOrGroupClass:Services.Organization.Actions.CreateLocation.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationupdateLocationStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 204, defaultValue:Services.Organization.Actions.UpdateLocation.RequestV1(), messageOrGroupClass:Services.Organization.Actions.UpdateLocation.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationgetLocationsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 205, defaultValue:Services.Organization.Actions.GetLocations.RequestV1(), messageOrGroupClass:Services.Organization.Actions.GetLocations.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationgetLocationStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 206, defaultValue:Services.Organization.Actions.GetLocation.RequestV1(), messageOrGroupClass:Services.Organization.Actions.GetLocation.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationcreateTokenStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 207, defaultValue:Services.Organization.Actions.CreateToken.RequestV1(), messageOrGroupClass:Services.Organization.Actions.CreateToken.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationgetTokensStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 208, defaultValue:Services.Organization.Actions.GetTokens.RequestV1(), messageOrGroupClass:Services.Organization.Actions.GetTokens.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationenableIntegrationStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 209, defaultValue:Services.Organization.Actions.EnableIntegration.RequestV1(), messageOrGroupClass:Services.Organization.Actions.EnableIntegration.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationgetIntegrationStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 210, defaultValue:Services.Organization.Actions.GetIntegration.RequestV1(), messageOrGroupClass:Services.Organization.Actions.GetIntegration.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationdisableIntegrationStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 211, defaultValue:Services.Organization.Actions.DisableIntegration.RequestV1(), messageOrGroupClass:Services.Organization.Actions.DisableIntegration.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationupdateTeamStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 212, defaultValue:Services.Organization.Actions.UpdateTeam.RequestV1(), messageOrGroupClass:Services.Organization.Actions.UpdateTeam.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationaddDirectReportsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 213, defaultValue:Services.Organization.Actions.AddDirectReports.RequestV1(), messageOrGroupClass:Services.Organization.Actions.AddDirectReports.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationgetLocationMembersStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 214, defaultValue:Services.Organization.Actions.GetLocationMembers.RequestV1(), messageOrGroupClass:Services.Organization.Actions.GetLocationMembers.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationgetProfileReportingDetailsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 215, defaultValue:Services.Organization.Actions.GetProfileReportingDetails.RequestV1(), messageOrGroupClass:Services.Organization.Actions.GetProfileReportingDetails.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationgetTeamReportingDetailsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 216, defaultValue:Services.Organization.Actions.GetTeamReportingDetails.RequestV1(), messageOrGroupClass:Services.Organization.Actions.GetTeamReportingDetails.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationsetManagerStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 217, defaultValue:Services.Organization.Actions.SetManager.RequestV1(), messageOrGroupClass:Services.Organization.Actions.SetManager.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsOrganizationaddLocationMembersStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 218, defaultValue:Services.Organization.Actions.AddLocationMembers.RequestV1(), messageOrGroupClass:Services.Organization.Actions.AddLocationMembers.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsProfilecreateProfileStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 300, defaultValue:Services.Profile.Actions.CreateProfile.RequestV1(), messageOrGroupClass:Services.Profile.Actions.CreateProfile.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsProfilegetExtendedProfileStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 301, defaultValue:Services.Profile.Actions.GetExtendedProfile.RequestV1(), messageOrGroupClass:Services.Profile.Actions.GetExtendedProfile.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsProfilegetProfileStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 302, defaultValue:Services.Profile.Actions.GetProfile.RequestV1(), messageOrGroupClass:Services.Profile.Actions.GetProfile.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsProfilecreateTagsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 303, defaultValue:Services.Profile.Actions.CreateTags.RequestV1(), messageOrGroupClass:Services.Profile.Actions.CreateTags.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsProfilegetTagsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 304, defaultValue:Services.Profile.Actions.GetTags.RequestV1(), messageOrGroupClass:Services.Profile.Actions.GetTags.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsProfileaddTagsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 305, defaultValue:Services.Profile.Actions.AddTags.RequestV1(), messageOrGroupClass:Services.Profile.Actions.AddTags.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsProfileupdateProfileStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 306, defaultValue:Services.Profile.Actions.UpdateProfile.RequestV1(), messageOrGroupClass:Services.Profile.Actions.UpdateProfile.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsProfilegetProfilesStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 307, defaultValue:Services.Profile.Actions.GetProfiles.RequestV1(), messageOrGroupClass:Services.Profile.Actions.GetProfiles.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsProfilegetUpcomingAnniversariesStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 308, defaultValue:Services.Profile.Actions.GetUpcomingAnniversaries.RequestV1(), messageOrGroupClass:Services.Profile.Actions.GetUpcomingAnniversaries.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsProfilegetUpcomingBirthdaysStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 309, defaultValue:Services.Profile.Actions.GetUpcomingBirthdays.RequestV1(), messageOrGroupClass:Services.Profile.Actions.GetUpcomingBirthdays.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsProfilegetRecentHiresStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 310, defaultValue:Services.Profile.Actions.GetRecentHires.RequestV1(), messageOrGroupClass:Services.Profile.Actions.GetRecentHires.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsProfilegetActiveTagsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 311, defaultValue:Services.Profile.Actions.GetActiveTags.RequestV1(), messageOrGroupClass:Services.Profile.Actions.GetActiveTags.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsProfilebulkCreateProfilesStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 312, defaultValue:Services.Profile.Actions.BulkCreateProfiles.RequestV1(), messageOrGroupClass:Services.Profile.Actions.BulkCreateProfiles.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsProfilebulkUpdateProfilesStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 313, defaultValue:Services.Profile.Actions.BulkUpdateProfiles.RequestV1(), messageOrGroupClass:Services.Profile.Actions.BulkUpdateProfiles.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsProfileremoveTagsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 314, defaultValue:Services.Profile.Actions.RemoveTags.RequestV1(), messageOrGroupClass:Services.Profile.Actions.RemoveTags.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsSearchsearchStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 400, defaultValue:Services.Search.Actions.Search.RequestV1(), messageOrGroupClass:Services.Search.Actions.Search.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsMediastartImageUploadStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 600, defaultValue:Services.Media.Actions.StartImageUpload.RequestV1(), messageOrGroupClass:Services.Media.Actions.StartImageUpload.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsMediacompleteImageUploadStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 601, defaultValue:Services.Media.Actions.CompleteImageUpload.RequestV1(), messageOrGroupClass:Services.Media.Actions.CompleteImageUpload.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsSyncstartSyncStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1000, defaultValue:Services.Sync.Actions.StartSync.RequestV1(), messageOrGroupClass:Services.Sync.Actions.StartSync.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsSyncsyncPayloadsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1001, defaultValue:Services.Sync.Actions.Sync.RequestV1(), messageOrGroupClass:Services.Sync.Actions.Sync.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsSynccompleteSyncStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1002, defaultValue:Services.Sync.Actions.CompleteSync.RequestV1(), messageOrGroupClass:Services.Sync.Actions.CompleteSync.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsGroupgetGroupsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1100, defaultValue:Services.Group.Actions.GetGroups.RequestV1(), messageOrGroupClass:Services.Group.Actions.GetGroups.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsGroupjoinGroupStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1101, defaultValue:Services.Group.Actions.JoinGroup.RequestV1(), messageOrGroupClass:Services.Group.Actions.JoinGroup.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsGrouprespondToMembershipRequestStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1102, defaultValue:Services.Group.Actions.RespondToMembershipRequest.RequestV1(), messageOrGroupClass:Services.Group.Actions.RespondToMembershipRequest.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsGroupleaveGroupStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1103, defaultValue:Services.Group.Actions.LeaveGroup.RequestV1(), messageOrGroupClass:Services.Group.Actions.LeaveGroup.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsGroupgetMembersStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1104, defaultValue:Services.Group.Actions.GetMembers.RequestV1(), messageOrGroupClass:Services.Group.Actions.GetMembers.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsGroupgetGroupStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1105, defaultValue:Services.Group.Actions.GetGroup.RequestV1(), messageOrGroupClass:Services.Group.Actions.GetGroup.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsGroupaddToGroupStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1106, defaultValue:Services.Group.Actions.AddToGroup.RequestV1(), messageOrGroupClass:Services.Group.Actions.AddToGroup.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsGroupgetMembershipRequestsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1107, defaultValue:Services.Group.Actions.GetMembershipRequests.RequestV1(), messageOrGroupClass:Services.Group.Actions.GetMembershipRequests.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsGlossarycreateTermStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1200, defaultValue:Services.Glossary.Actions.CreateTerm.RequestV1(), messageOrGroupClass:Services.Glossary.Actions.CreateTerm.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsGlossarygetTermStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1201, defaultValue:Services.Glossary.Actions.GetTerm.RequestV1(), messageOrGroupClass:Services.Glossary.Actions.GetTerm.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsGlossarygetTermsStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1202, defaultValue:Services.Glossary.Actions.GetTerms.RequestV1(), messageOrGroupClass:Services.Glossary.Actions.GetTerms.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsGlossaryupdateTermStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1203, defaultValue:Services.Glossary.Actions.UpdateTerm.RequestV1(), messageOrGroupClass:Services.Glossary.Actions.UpdateTerm.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsGlossarydeleteTermStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1204, defaultValue:Services.Glossary.Actions.DeleteTerm.RequestV1(), messageOrGroupClass:Services.Glossary.Actions.DeleteTerm.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsNotificationregisterDeviceStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1300, defaultValue:Services.Notification.Actions.RegisterDevice.RequestV1(), messageOrGroupClass:Services.Notification.Actions.RegisterDevice.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsNotificationgetPreferencesStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1301, defaultValue:Services.Notification.Actions.GetPreferences.RequestV1(), messageOrGroupClass:Services.Notification.Actions.GetPreferences.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsNotificationupdatePreferenceStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1302, defaultValue:Services.Notification.Actions.UpdatePreference.RequestV1(), messageOrGroupClass:Services.Notification.Actions.UpdatePreference.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsNotificationsendNotificationStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1303, defaultValue:Services.Notification.Actions.SendNotification.RequestV1(), messageOrGroupClass:Services.Notification.Actions.SendNotification.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ServicesRegistryRequestsHistoryrecordActionStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Soa.ActionRequestParamsV1.self, fieldNumber: 1400, defaultValue:Services.History.Actions.RecordAction.RequestV1(), messageOrGroupClass:Services.History.Actions.RecordAction.RequestV1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      extensionRegistry = ExtensionRegistry()
      registerAllExtensions(extensionRegistry)
      Soa.SoaRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.CreateUser.CreateUserRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.ValidUser.ValidUserRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.AuthenticateUser.AuthenticateUserRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.GetUser.GetUserRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.SendVerificationCode.SendVerificationCodeRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.VerifyVerificationCode.VerifyVerificationCodeRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.UpdateUser.UpdateUserRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.GetAuthorizationInstructions.GetAuthorizationInstructionsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.CompleteAuthorization.CompleteAuthorizationRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.GetIdentities.GetIdentitiesRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.BulkCreateUsers.BulkCreateUsersRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.RecordDevice.RecordDeviceRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.RequestAccess.RequestAccessRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.DeleteIdentity.DeleteIdentityRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.Logout.LogoutRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.GetAuthenticationInstructions.GetAuthenticationInstructionsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.User.Actions.GetActiveDevices.GetActiveDevicesRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.CreateOrganization.CreateOrganizationRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.GetTeam.GetTeamRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.GetOrganization.GetOrganizationRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.CreateLocation.CreateLocationRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.UpdateLocation.UpdateLocationRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.GetLocations.GetLocationsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.GetLocation.GetLocationRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.CreateToken.CreateTokenRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.GetTokens.GetTokensRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.EnableIntegration.EnableIntegrationRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.GetIntegration.GetIntegrationRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.DisableIntegration.DisableIntegrationRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.UpdateTeam.UpdateTeamRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.AddDirectReports.AddDirectReportsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.GetLocationMembers.GetLocationMembersRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.GetProfileReportingDetails.GetProfileReportingDetailsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.GetTeamReportingDetails.GetTeamReportingDetailsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.SetManager.SetManagerRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Organization.Actions.AddLocationMembers.AddLocationMembersRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.CreateProfile.CreateProfileRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.GetExtendedProfile.GetExtendedProfileRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.GetProfile.GetProfileRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.CreateTags.CreateTagsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.GetTags.GetTagsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.AddTags.AddTagsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.UpdateProfile.UpdateProfileRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.GetProfiles.GetProfilesRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.GetUpcomingAnniversaries.GetUpcomingAnniversariesRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.GetUpcomingBirthdays.GetUpcomingBirthdaysRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.GetRecentHires.GetRecentHiresRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.GetActiveTags.GetActiveTagsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.BulkCreateProfiles.BulkCreateProfilesRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.BulkUpdateProfiles.BulkUpdateProfilesRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Profile.Actions.RemoveTags.RemoveTagsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Search.Actions.Search.SearchRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Media.Actions.StartImageUpload.StartImageUploadRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Media.Actions.CompleteImageUpload.CompleteImageUploadRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Sync.Actions.StartSync.StartSyncRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Sync.Actions.Sync.SyncRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Sync.Actions.CompleteSync.CompleteSyncRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Group.Actions.GetGroups.GetGroupsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Group.Actions.JoinGroup.JoinGroupRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Group.Actions.RespondToMembershipRequest.RespondToMembershipRequestRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Group.Actions.LeaveGroup.LeaveGroupRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Group.Actions.GetMembers.GetMembersRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Group.Actions.GetGroup.GetGroupRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Group.Actions.AddToGroup.AddToGroupRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Group.Actions.GetMembershipRequests.GetMembershipRequestsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Glossary.Actions.CreateTerm.CreateTermRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Glossary.Actions.GetTerm.GetTermRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Glossary.Actions.GetTerms.GetTermsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Glossary.Actions.UpdateTerm.UpdateTermRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Glossary.Actions.DeleteTerm.DeleteTermRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Notification.Actions.RegisterDevice.RegisterDeviceRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Notification.Actions.GetPreferences.GetPreferencesRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Notification.Actions.UpdatePreference.UpdatePreferenceRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.Notification.Actions.SendNotification.SendNotificationRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Services.History.Actions.RecordAction.RecordActionRoot.sharedInstance.registerAllExtensions(extensionRegistry)
    }
    public func registerAllExtensions(registry:ExtensionRegistry) {
      registry.addExtension(ServicesRegistryRequestsUsercreateUserStatic)
      registry.addExtension(ServicesRegistryRequestsUservalidUserStatic)
      registry.addExtension(ServicesRegistryRequestsUserauthenticateUserStatic)
      registry.addExtension(ServicesRegistryRequestsUsergetUserStatic)
      registry.addExtension(ServicesRegistryRequestsUsersendVerificationCodeStatic)
      registry.addExtension(ServicesRegistryRequestsUserverifyVerificationCodeStatic)
      registry.addExtension(ServicesRegistryRequestsUserupdateUserStatic)
      registry.addExtension(ServicesRegistryRequestsUsergetAuthorizationInstructionsStatic)
      registry.addExtension(ServicesRegistryRequestsUsercompleteAuthorizationStatic)
      registry.addExtension(ServicesRegistryRequestsUsergetIdentitiesStatic)
      registry.addExtension(ServicesRegistryRequestsUserbulkCreateUsersStatic)
      registry.addExtension(ServicesRegistryRequestsUserrecordDeviceStatic)
      registry.addExtension(ServicesRegistryRequestsUserrequestAccessStatic)
      registry.addExtension(ServicesRegistryRequestsUserdeleteIdentityStatic)
      registry.addExtension(ServicesRegistryRequestsUserlogoutStatic)
      registry.addExtension(ServicesRegistryRequestsUsergetAuthenticationInstructionsStatic)
      registry.addExtension(ServicesRegistryRequestsUsergetActiveDevicesStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationcreateOrganizationStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationgetOrganizationStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationgetTeamStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationcreateLocationStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationupdateLocationStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationgetLocationsStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationgetLocationStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationcreateTokenStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationgetTokensStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationenableIntegrationStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationgetIntegrationStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationdisableIntegrationStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationupdateTeamStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationaddDirectReportsStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationgetLocationMembersStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationgetProfileReportingDetailsStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationgetTeamReportingDetailsStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationsetManagerStatic)
      registry.addExtension(ServicesRegistryRequestsOrganizationaddLocationMembersStatic)
      registry.addExtension(ServicesRegistryRequestsProfilecreateProfileStatic)
      registry.addExtension(ServicesRegistryRequestsProfilegetExtendedProfileStatic)
      registry.addExtension(ServicesRegistryRequestsProfilegetProfileStatic)
      registry.addExtension(ServicesRegistryRequestsProfilecreateTagsStatic)
      registry.addExtension(ServicesRegistryRequestsProfilegetTagsStatic)
      registry.addExtension(ServicesRegistryRequestsProfileaddTagsStatic)
      registry.addExtension(ServicesRegistryRequestsProfileupdateProfileStatic)
      registry.addExtension(ServicesRegistryRequestsProfilegetProfilesStatic)
      registry.addExtension(ServicesRegistryRequestsProfilegetUpcomingAnniversariesStatic)
      registry.addExtension(ServicesRegistryRequestsProfilegetUpcomingBirthdaysStatic)
      registry.addExtension(ServicesRegistryRequestsProfilegetRecentHiresStatic)
      registry.addExtension(ServicesRegistryRequestsProfilegetActiveTagsStatic)
      registry.addExtension(ServicesRegistryRequestsProfilebulkCreateProfilesStatic)
      registry.addExtension(ServicesRegistryRequestsProfilebulkUpdateProfilesStatic)
      registry.addExtension(ServicesRegistryRequestsProfileremoveTagsStatic)
      registry.addExtension(ServicesRegistryRequestsSearchsearchStatic)
      registry.addExtension(ServicesRegistryRequestsMediastartImageUploadStatic)
      registry.addExtension(ServicesRegistryRequestsMediacompleteImageUploadStatic)
      registry.addExtension(ServicesRegistryRequestsSyncstartSyncStatic)
      registry.addExtension(ServicesRegistryRequestsSyncsyncPayloadsStatic)
      registry.addExtension(ServicesRegistryRequestsSynccompleteSyncStatic)
      registry.addExtension(ServicesRegistryRequestsGroupgetGroupsStatic)
      registry.addExtension(ServicesRegistryRequestsGroupjoinGroupStatic)
      registry.addExtension(ServicesRegistryRequestsGrouprespondToMembershipRequestStatic)
      registry.addExtension(ServicesRegistryRequestsGroupleaveGroupStatic)
      registry.addExtension(ServicesRegistryRequestsGroupgetMembersStatic)
      registry.addExtension(ServicesRegistryRequestsGroupgetGroupStatic)
      registry.addExtension(ServicesRegistryRequestsGroupaddToGroupStatic)
      registry.addExtension(ServicesRegistryRequestsGroupgetMembershipRequestsStatic)
      registry.addExtension(ServicesRegistryRequestsGlossarycreateTermStatic)
      registry.addExtension(ServicesRegistryRequestsGlossarygetTermStatic)
      registry.addExtension(ServicesRegistryRequestsGlossarygetTermsStatic)
      registry.addExtension(ServicesRegistryRequestsGlossaryupdateTermStatic)
      registry.addExtension(ServicesRegistryRequestsGlossarydeleteTermStatic)
      registry.addExtension(ServicesRegistryRequestsNotificationregisterDeviceStatic)
      registry.addExtension(ServicesRegistryRequestsNotificationgetPreferencesStatic)
      registry.addExtension(ServicesRegistryRequestsNotificationupdatePreferenceStatic)
      registry.addExtension(ServicesRegistryRequestsNotificationsendNotificationStatic)
      registry.addExtension(ServicesRegistryRequestsHistoryrecordActionStatic)
    }
  }

  final public class User : GeneratedMessage, GeneratedMessageProtocol {
    override public subscript(key: String) -> Any? {
           switch key {
           default: return nil
           }
    }

    public class func createUser() -> ConcreateExtensionField {
         return ServicesRegistryRequestsUsercreateUser
    }
    public class func validUser() -> ConcreateExtensionField {
         return ServicesRegistryRequestsUservalidUser
    }
    public class func authenticateUser() -> ConcreateExtensionField {
         return ServicesRegistryRequestsUserauthenticateUser
    }
    public class func getUser() -> ConcreateExtensionField {
         return ServicesRegistryRequestsUsergetUser
    }
    public class func sendVerificationCode() -> ConcreateExtensionField {
         return ServicesRegistryRequestsUsersendVerificationCode
    }
    public class func verifyVerificationCode() -> ConcreateExtensionField {
         return ServicesRegistryRequestsUserverifyVerificationCode
    }
    public class func updateUser() -> ConcreateExtensionField {
         return ServicesRegistryRequestsUserupdateUser
    }
    public class func getAuthorizationInstructions() -> ConcreateExtensionField {
         return ServicesRegistryRequestsUsergetAuthorizationInstructions
    }
    public class func completeAuthorization() -> ConcreateExtensionField {
         return ServicesRegistryRequestsUsercompleteAuthorization
    }
    public class func getIdentities() -> ConcreateExtensionField {
         return ServicesRegistryRequestsUsergetIdentities
    }
    public class func bulkCreateUsers() -> ConcreateExtensionField {
         return ServicesRegistryRequestsUserbulkCreateUsers
    }
    public class func recordDevice() -> ConcreateExtensionField {
         return ServicesRegistryRequestsUserrecordDevice
    }
    public class func requestAccess() -> ConcreateExtensionField {
         return ServicesRegistryRequestsUserrequestAccess
    }
    public class func deleteIdentity() -> ConcreateExtensionField {
         return ServicesRegistryRequestsUserdeleteIdentity
    }
    public class func logout() -> ConcreateExtensionField {
         return ServicesRegistryRequestsUserlogout
    }
    public class func getAuthenticationInstructions() -> ConcreateExtensionField {
         return ServicesRegistryRequestsUsergetAuthenticationInstructions
    }
    public class func getActiveDevices() -> ConcreateExtensionField {
         return ServicesRegistryRequestsUsergetActiveDevices
    }
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) {
      unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseFromData(data:NSData) -> Services.Registry.Requests.User {
      return Services.Registry.Requests.User.builder().mergeFromData(data, extensionRegistry:Services.Registry.Requests.RequestsRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.User {
      return Services.Registry.Requests.User.builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) -> Services.Registry.Requests.User {
      return Services.Registry.Requests.User.builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) ->Services.Registry.Requests.User {
      return Services.Registry.Requests.User.builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) -> Services.Registry.Requests.User {
      return Services.Registry.Requests.User.builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.User {
      return Services.Registry.Requests.User.builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func builder() -> Services.Registry.Requests.UserBuilder {
      return Services.Registry.Requests.User.classBuilder() as! Services.Registry.Requests.UserBuilder
    }
    public func builder() -> Services.Registry.Requests.UserBuilder {
      return classBuilder() as! Services.Registry.Requests.UserBuilder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.UserBuilder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.User.builder()
    }
    public func toBuilder() -> Services.Registry.Requests.UserBuilder {
      return Services.Registry.Requests.User.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Services.Registry.Requests.User) -> Services.Registry.Requests.UserBuilder {
      return Services.Registry.Requests.User.builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) {
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Services.Registry.Requests.User"
    }
    override public func className() -> String {
        return "Services.Registry.Requests.User"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Services.Registry.Requests.User.self
    }
    //Meta information declaration end

  }

  final public class UserBuilder : GeneratedMessageBuilder {
    private var builderResult:Services.Registry.Requests.User

    required override public init () {
       builderResult = Services.Registry.Requests.User()
       super.init()
    }
    override public var internalGetResult:GeneratedMessage {
         get {
            return builderResult
         }
    }
    public override func clear() -> Services.Registry.Requests.UserBuilder {
      builderResult = Services.Registry.Requests.User()
      return self
    }
    public override func clone() -> Services.Registry.Requests.UserBuilder {
      return Services.Registry.Requests.User.builderWithPrototype(builderResult)
    }
    public override func build() -> Services.Registry.Requests.User {
         checkInitialized()
         return buildPartial()
    }
    public func buildPartial() -> Services.Registry.Requests.User {
      var returnMe:Services.Registry.Requests.User = builderResult
      return returnMe
    }
    public func mergeFrom(other:Services.Registry.Requests.User) -> Services.Registry.Requests.UserBuilder {
      if (other == Services.Registry.Requests.User()) {
       return self
      }
      mergeUnknownFields(other.unknownFields)
      return self
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream) ->Services.Registry.Requests.UserBuilder {
         return mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.UserBuilder {
      var unknownFieldsBuilder:UnknownFieldSetBuilder = UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
      while (true) {
        var tag = input.readTag()
        switch tag {
        case 0: 
          self.unknownFields = unknownFieldsBuilder.build()
          return self

        default:
          if (!parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag)) {
             unknownFields = unknownFieldsBuilder.build()
             return self
          }
        }
      }
    }
  }

  final public class Organization : GeneratedMessage, GeneratedMessageProtocol {
    override public subscript(key: String) -> Any? {
           switch key {
           default: return nil
           }
    }

    public class func createOrganization() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationcreateOrganization
    }
    public class func getOrganization() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationgetOrganization
    }
    public class func getTeam() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationgetTeam
    }
    public class func createLocation() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationcreateLocation
    }
    public class func updateLocation() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationupdateLocation
    }
    public class func getLocations() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationgetLocations
    }
    public class func getLocation() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationgetLocation
    }
    public class func createToken() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationcreateToken
    }
    public class func getTokens() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationgetTokens
    }
    public class func enableIntegration() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationenableIntegration
    }
    public class func getIntegration() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationgetIntegration
    }
    public class func disableIntegration() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationdisableIntegration
    }
    public class func updateTeam() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationupdateTeam
    }
    public class func addDirectReports() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationaddDirectReports
    }
    public class func getLocationMembers() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationgetLocationMembers
    }
    public class func getProfileReportingDetails() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationgetProfileReportingDetails
    }
    public class func getTeamReportingDetails() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationgetTeamReportingDetails
    }
    public class func setManager() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationsetManager
    }
    public class func addLocationMembers() -> ConcreateExtensionField {
         return ServicesRegistryRequestsOrganizationaddLocationMembers
    }
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) {
      unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseFromData(data:NSData) -> Services.Registry.Requests.Organization {
      return Services.Registry.Requests.Organization.builder().mergeFromData(data, extensionRegistry:Services.Registry.Requests.RequestsRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.Organization {
      return Services.Registry.Requests.Organization.builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) -> Services.Registry.Requests.Organization {
      return Services.Registry.Requests.Organization.builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) ->Services.Registry.Requests.Organization {
      return Services.Registry.Requests.Organization.builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) -> Services.Registry.Requests.Organization {
      return Services.Registry.Requests.Organization.builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.Organization {
      return Services.Registry.Requests.Organization.builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func builder() -> Services.Registry.Requests.OrganizationBuilder {
      return Services.Registry.Requests.Organization.classBuilder() as! Services.Registry.Requests.OrganizationBuilder
    }
    public func builder() -> Services.Registry.Requests.OrganizationBuilder {
      return classBuilder() as! Services.Registry.Requests.OrganizationBuilder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.OrganizationBuilder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.Organization.builder()
    }
    public func toBuilder() -> Services.Registry.Requests.OrganizationBuilder {
      return Services.Registry.Requests.Organization.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Services.Registry.Requests.Organization) -> Services.Registry.Requests.OrganizationBuilder {
      return Services.Registry.Requests.Organization.builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) {
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Services.Registry.Requests.Organization"
    }
    override public func className() -> String {
        return "Services.Registry.Requests.Organization"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Services.Registry.Requests.Organization.self
    }
    //Meta information declaration end

  }

  final public class OrganizationBuilder : GeneratedMessageBuilder {
    private var builderResult:Services.Registry.Requests.Organization

    required override public init () {
       builderResult = Services.Registry.Requests.Organization()
       super.init()
    }
    override public var internalGetResult:GeneratedMessage {
         get {
            return builderResult
         }
    }
    public override func clear() -> Services.Registry.Requests.OrganizationBuilder {
      builderResult = Services.Registry.Requests.Organization()
      return self
    }
    public override func clone() -> Services.Registry.Requests.OrganizationBuilder {
      return Services.Registry.Requests.Organization.builderWithPrototype(builderResult)
    }
    public override func build() -> Services.Registry.Requests.Organization {
         checkInitialized()
         return buildPartial()
    }
    public func buildPartial() -> Services.Registry.Requests.Organization {
      var returnMe:Services.Registry.Requests.Organization = builderResult
      return returnMe
    }
    public func mergeFrom(other:Services.Registry.Requests.Organization) -> Services.Registry.Requests.OrganizationBuilder {
      if (other == Services.Registry.Requests.Organization()) {
       return self
      }
      mergeUnknownFields(other.unknownFields)
      return self
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream) ->Services.Registry.Requests.OrganizationBuilder {
         return mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.OrganizationBuilder {
      var unknownFieldsBuilder:UnknownFieldSetBuilder = UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
      while (true) {
        var tag = input.readTag()
        switch tag {
        case 0: 
          self.unknownFields = unknownFieldsBuilder.build()
          return self

        default:
          if (!parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag)) {
             unknownFields = unknownFieldsBuilder.build()
             return self
          }
        }
      }
    }
  }

  final public class Profile : GeneratedMessage, GeneratedMessageProtocol {
    override public subscript(key: String) -> Any? {
           switch key {
           default: return nil
           }
    }

    public class func createProfile() -> ConcreateExtensionField {
         return ServicesRegistryRequestsProfilecreateProfile
    }
    public class func getExtendedProfile() -> ConcreateExtensionField {
         return ServicesRegistryRequestsProfilegetExtendedProfile
    }
    public class func getProfile() -> ConcreateExtensionField {
         return ServicesRegistryRequestsProfilegetProfile
    }
    public class func createTags() -> ConcreateExtensionField {
         return ServicesRegistryRequestsProfilecreateTags
    }
    public class func getTags() -> ConcreateExtensionField {
         return ServicesRegistryRequestsProfilegetTags
    }
    public class func addTags() -> ConcreateExtensionField {
         return ServicesRegistryRequestsProfileaddTags
    }
    public class func updateProfile() -> ConcreateExtensionField {
         return ServicesRegistryRequestsProfileupdateProfile
    }
    public class func getProfiles() -> ConcreateExtensionField {
         return ServicesRegistryRequestsProfilegetProfiles
    }
    public class func getUpcomingAnniversaries() -> ConcreateExtensionField {
         return ServicesRegistryRequestsProfilegetUpcomingAnniversaries
    }
    public class func getUpcomingBirthdays() -> ConcreateExtensionField {
         return ServicesRegistryRequestsProfilegetUpcomingBirthdays
    }
    public class func getRecentHires() -> ConcreateExtensionField {
         return ServicesRegistryRequestsProfilegetRecentHires
    }
    public class func getActiveTags() -> ConcreateExtensionField {
         return ServicesRegistryRequestsProfilegetActiveTags
    }
    public class func bulkCreateProfiles() -> ConcreateExtensionField {
         return ServicesRegistryRequestsProfilebulkCreateProfiles
    }
    public class func bulkUpdateProfiles() -> ConcreateExtensionField {
         return ServicesRegistryRequestsProfilebulkUpdateProfiles
    }
    public class func removeTags() -> ConcreateExtensionField {
         return ServicesRegistryRequestsProfileremoveTags
    }
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) {
      unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseFromData(data:NSData) -> Services.Registry.Requests.Profile {
      return Services.Registry.Requests.Profile.builder().mergeFromData(data, extensionRegistry:Services.Registry.Requests.RequestsRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.Profile {
      return Services.Registry.Requests.Profile.builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) -> Services.Registry.Requests.Profile {
      return Services.Registry.Requests.Profile.builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) ->Services.Registry.Requests.Profile {
      return Services.Registry.Requests.Profile.builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) -> Services.Registry.Requests.Profile {
      return Services.Registry.Requests.Profile.builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.Profile {
      return Services.Registry.Requests.Profile.builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func builder() -> Services.Registry.Requests.ProfileBuilder {
      return Services.Registry.Requests.Profile.classBuilder() as! Services.Registry.Requests.ProfileBuilder
    }
    public func builder() -> Services.Registry.Requests.ProfileBuilder {
      return classBuilder() as! Services.Registry.Requests.ProfileBuilder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.ProfileBuilder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.Profile.builder()
    }
    public func toBuilder() -> Services.Registry.Requests.ProfileBuilder {
      return Services.Registry.Requests.Profile.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Services.Registry.Requests.Profile) -> Services.Registry.Requests.ProfileBuilder {
      return Services.Registry.Requests.Profile.builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) {
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Services.Registry.Requests.Profile"
    }
    override public func className() -> String {
        return "Services.Registry.Requests.Profile"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Services.Registry.Requests.Profile.self
    }
    //Meta information declaration end

  }

  final public class ProfileBuilder : GeneratedMessageBuilder {
    private var builderResult:Services.Registry.Requests.Profile

    required override public init () {
       builderResult = Services.Registry.Requests.Profile()
       super.init()
    }
    override public var internalGetResult:GeneratedMessage {
         get {
            return builderResult
         }
    }
    public override func clear() -> Services.Registry.Requests.ProfileBuilder {
      builderResult = Services.Registry.Requests.Profile()
      return self
    }
    public override func clone() -> Services.Registry.Requests.ProfileBuilder {
      return Services.Registry.Requests.Profile.builderWithPrototype(builderResult)
    }
    public override func build() -> Services.Registry.Requests.Profile {
         checkInitialized()
         return buildPartial()
    }
    public func buildPartial() -> Services.Registry.Requests.Profile {
      var returnMe:Services.Registry.Requests.Profile = builderResult
      return returnMe
    }
    public func mergeFrom(other:Services.Registry.Requests.Profile) -> Services.Registry.Requests.ProfileBuilder {
      if (other == Services.Registry.Requests.Profile()) {
       return self
      }
      mergeUnknownFields(other.unknownFields)
      return self
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream) ->Services.Registry.Requests.ProfileBuilder {
         return mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.ProfileBuilder {
      var unknownFieldsBuilder:UnknownFieldSetBuilder = UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
      while (true) {
        var tag = input.readTag()
        switch tag {
        case 0: 
          self.unknownFields = unknownFieldsBuilder.build()
          return self

        default:
          if (!parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag)) {
             unknownFields = unknownFieldsBuilder.build()
             return self
          }
        }
      }
    }
  }

  final public class Search : GeneratedMessage, GeneratedMessageProtocol {
    override public subscript(key: String) -> Any? {
           switch key {
           default: return nil
           }
    }

    public class func search() -> ConcreateExtensionField {
         return ServicesRegistryRequestsSearchsearch
    }
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) {
      unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseFromData(data:NSData) -> Services.Registry.Requests.Search {
      return Services.Registry.Requests.Search.builder().mergeFromData(data, extensionRegistry:Services.Registry.Requests.RequestsRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.Search {
      return Services.Registry.Requests.Search.builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) -> Services.Registry.Requests.Search {
      return Services.Registry.Requests.Search.builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) ->Services.Registry.Requests.Search {
      return Services.Registry.Requests.Search.builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) -> Services.Registry.Requests.Search {
      return Services.Registry.Requests.Search.builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.Search {
      return Services.Registry.Requests.Search.builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func builder() -> Services.Registry.Requests.SearchBuilder {
      return Services.Registry.Requests.Search.classBuilder() as! Services.Registry.Requests.SearchBuilder
    }
    public func builder() -> Services.Registry.Requests.SearchBuilder {
      return classBuilder() as! Services.Registry.Requests.SearchBuilder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.SearchBuilder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.Search.builder()
    }
    public func toBuilder() -> Services.Registry.Requests.SearchBuilder {
      return Services.Registry.Requests.Search.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Services.Registry.Requests.Search) -> Services.Registry.Requests.SearchBuilder {
      return Services.Registry.Requests.Search.builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) {
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Services.Registry.Requests.Search"
    }
    override public func className() -> String {
        return "Services.Registry.Requests.Search"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Services.Registry.Requests.Search.self
    }
    //Meta information declaration end

  }

  final public class SearchBuilder : GeneratedMessageBuilder {
    private var builderResult:Services.Registry.Requests.Search

    required override public init () {
       builderResult = Services.Registry.Requests.Search()
       super.init()
    }
    override public var internalGetResult:GeneratedMessage {
         get {
            return builderResult
         }
    }
    public override func clear() -> Services.Registry.Requests.SearchBuilder {
      builderResult = Services.Registry.Requests.Search()
      return self
    }
    public override func clone() -> Services.Registry.Requests.SearchBuilder {
      return Services.Registry.Requests.Search.builderWithPrototype(builderResult)
    }
    public override func build() -> Services.Registry.Requests.Search {
         checkInitialized()
         return buildPartial()
    }
    public func buildPartial() -> Services.Registry.Requests.Search {
      var returnMe:Services.Registry.Requests.Search = builderResult
      return returnMe
    }
    public func mergeFrom(other:Services.Registry.Requests.Search) -> Services.Registry.Requests.SearchBuilder {
      if (other == Services.Registry.Requests.Search()) {
       return self
      }
      mergeUnknownFields(other.unknownFields)
      return self
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream) ->Services.Registry.Requests.SearchBuilder {
         return mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.SearchBuilder {
      var unknownFieldsBuilder:UnknownFieldSetBuilder = UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
      while (true) {
        var tag = input.readTag()
        switch tag {
        case 0: 
          self.unknownFields = unknownFieldsBuilder.build()
          return self

        default:
          if (!parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag)) {
             unknownFields = unknownFieldsBuilder.build()
             return self
          }
        }
      }
    }
  }

  final public class Media : GeneratedMessage, GeneratedMessageProtocol {
    override public subscript(key: String) -> Any? {
           switch key {
           default: return nil
           }
    }

    public class func startImageUpload() -> ConcreateExtensionField {
         return ServicesRegistryRequestsMediastartImageUpload
    }
    public class func completeImageUpload() -> ConcreateExtensionField {
         return ServicesRegistryRequestsMediacompleteImageUpload
    }
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) {
      unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseFromData(data:NSData) -> Services.Registry.Requests.Media {
      return Services.Registry.Requests.Media.builder().mergeFromData(data, extensionRegistry:Services.Registry.Requests.RequestsRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.Media {
      return Services.Registry.Requests.Media.builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) -> Services.Registry.Requests.Media {
      return Services.Registry.Requests.Media.builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) ->Services.Registry.Requests.Media {
      return Services.Registry.Requests.Media.builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) -> Services.Registry.Requests.Media {
      return Services.Registry.Requests.Media.builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.Media {
      return Services.Registry.Requests.Media.builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func builder() -> Services.Registry.Requests.MediaBuilder {
      return Services.Registry.Requests.Media.classBuilder() as! Services.Registry.Requests.MediaBuilder
    }
    public func builder() -> Services.Registry.Requests.MediaBuilder {
      return classBuilder() as! Services.Registry.Requests.MediaBuilder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.MediaBuilder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.Media.builder()
    }
    public func toBuilder() -> Services.Registry.Requests.MediaBuilder {
      return Services.Registry.Requests.Media.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Services.Registry.Requests.Media) -> Services.Registry.Requests.MediaBuilder {
      return Services.Registry.Requests.Media.builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) {
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Services.Registry.Requests.Media"
    }
    override public func className() -> String {
        return "Services.Registry.Requests.Media"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Services.Registry.Requests.Media.self
    }
    //Meta information declaration end

  }

  final public class MediaBuilder : GeneratedMessageBuilder {
    private var builderResult:Services.Registry.Requests.Media

    required override public init () {
       builderResult = Services.Registry.Requests.Media()
       super.init()
    }
    override public var internalGetResult:GeneratedMessage {
         get {
            return builderResult
         }
    }
    public override func clear() -> Services.Registry.Requests.MediaBuilder {
      builderResult = Services.Registry.Requests.Media()
      return self
    }
    public override func clone() -> Services.Registry.Requests.MediaBuilder {
      return Services.Registry.Requests.Media.builderWithPrototype(builderResult)
    }
    public override func build() -> Services.Registry.Requests.Media {
         checkInitialized()
         return buildPartial()
    }
    public func buildPartial() -> Services.Registry.Requests.Media {
      var returnMe:Services.Registry.Requests.Media = builderResult
      return returnMe
    }
    public func mergeFrom(other:Services.Registry.Requests.Media) -> Services.Registry.Requests.MediaBuilder {
      if (other == Services.Registry.Requests.Media()) {
       return self
      }
      mergeUnknownFields(other.unknownFields)
      return self
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream) ->Services.Registry.Requests.MediaBuilder {
         return mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.MediaBuilder {
      var unknownFieldsBuilder:UnknownFieldSetBuilder = UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
      while (true) {
        var tag = input.readTag()
        switch tag {
        case 0: 
          self.unknownFields = unknownFieldsBuilder.build()
          return self

        default:
          if (!parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag)) {
             unknownFields = unknownFieldsBuilder.build()
             return self
          }
        }
      }
    }
  }

  final public class Sync : GeneratedMessage, GeneratedMessageProtocol {
    override public subscript(key: String) -> Any? {
           switch key {
           default: return nil
           }
    }

    public class func startSync() -> ConcreateExtensionField {
         return ServicesRegistryRequestsSyncstartSync
    }
    public class func syncPayloads() -> ConcreateExtensionField {
         return ServicesRegistryRequestsSyncsyncPayloads
    }
    public class func completeSync() -> ConcreateExtensionField {
         return ServicesRegistryRequestsSynccompleteSync
    }
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) {
      unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseFromData(data:NSData) -> Services.Registry.Requests.Sync {
      return Services.Registry.Requests.Sync.builder().mergeFromData(data, extensionRegistry:Services.Registry.Requests.RequestsRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.Sync {
      return Services.Registry.Requests.Sync.builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) -> Services.Registry.Requests.Sync {
      return Services.Registry.Requests.Sync.builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) ->Services.Registry.Requests.Sync {
      return Services.Registry.Requests.Sync.builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) -> Services.Registry.Requests.Sync {
      return Services.Registry.Requests.Sync.builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.Sync {
      return Services.Registry.Requests.Sync.builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func builder() -> Services.Registry.Requests.SyncBuilder {
      return Services.Registry.Requests.Sync.classBuilder() as! Services.Registry.Requests.SyncBuilder
    }
    public func builder() -> Services.Registry.Requests.SyncBuilder {
      return classBuilder() as! Services.Registry.Requests.SyncBuilder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.SyncBuilder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.Sync.builder()
    }
    public func toBuilder() -> Services.Registry.Requests.SyncBuilder {
      return Services.Registry.Requests.Sync.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Services.Registry.Requests.Sync) -> Services.Registry.Requests.SyncBuilder {
      return Services.Registry.Requests.Sync.builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) {
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Services.Registry.Requests.Sync"
    }
    override public func className() -> String {
        return "Services.Registry.Requests.Sync"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Services.Registry.Requests.Sync.self
    }
    //Meta information declaration end

  }

  final public class SyncBuilder : GeneratedMessageBuilder {
    private var builderResult:Services.Registry.Requests.Sync

    required override public init () {
       builderResult = Services.Registry.Requests.Sync()
       super.init()
    }
    override public var internalGetResult:GeneratedMessage {
         get {
            return builderResult
         }
    }
    public override func clear() -> Services.Registry.Requests.SyncBuilder {
      builderResult = Services.Registry.Requests.Sync()
      return self
    }
    public override func clone() -> Services.Registry.Requests.SyncBuilder {
      return Services.Registry.Requests.Sync.builderWithPrototype(builderResult)
    }
    public override func build() -> Services.Registry.Requests.Sync {
         checkInitialized()
         return buildPartial()
    }
    public func buildPartial() -> Services.Registry.Requests.Sync {
      var returnMe:Services.Registry.Requests.Sync = builderResult
      return returnMe
    }
    public func mergeFrom(other:Services.Registry.Requests.Sync) -> Services.Registry.Requests.SyncBuilder {
      if (other == Services.Registry.Requests.Sync()) {
       return self
      }
      mergeUnknownFields(other.unknownFields)
      return self
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream) ->Services.Registry.Requests.SyncBuilder {
         return mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.SyncBuilder {
      var unknownFieldsBuilder:UnknownFieldSetBuilder = UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
      while (true) {
        var tag = input.readTag()
        switch tag {
        case 0: 
          self.unknownFields = unknownFieldsBuilder.build()
          return self

        default:
          if (!parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag)) {
             unknownFields = unknownFieldsBuilder.build()
             return self
          }
        }
      }
    }
  }

  final public class Group : GeneratedMessage, GeneratedMessageProtocol {
    override public subscript(key: String) -> Any? {
           switch key {
           default: return nil
           }
    }

    public class func getGroups() -> ConcreateExtensionField {
         return ServicesRegistryRequestsGroupgetGroups
    }
    public class func joinGroup() -> ConcreateExtensionField {
         return ServicesRegistryRequestsGroupjoinGroup
    }
    public class func respondToMembershipRequest() -> ConcreateExtensionField {
         return ServicesRegistryRequestsGrouprespondToMembershipRequest
    }
    public class func leaveGroup() -> ConcreateExtensionField {
         return ServicesRegistryRequestsGroupleaveGroup
    }
    public class func getMembers() -> ConcreateExtensionField {
         return ServicesRegistryRequestsGroupgetMembers
    }
    public class func getGroup() -> ConcreateExtensionField {
         return ServicesRegistryRequestsGroupgetGroup
    }
    public class func addToGroup() -> ConcreateExtensionField {
         return ServicesRegistryRequestsGroupaddToGroup
    }
    public class func getMembershipRequests() -> ConcreateExtensionField {
         return ServicesRegistryRequestsGroupgetMembershipRequests
    }
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) {
      unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseFromData(data:NSData) -> Services.Registry.Requests.Group {
      return Services.Registry.Requests.Group.builder().mergeFromData(data, extensionRegistry:Services.Registry.Requests.RequestsRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.Group {
      return Services.Registry.Requests.Group.builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) -> Services.Registry.Requests.Group {
      return Services.Registry.Requests.Group.builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) ->Services.Registry.Requests.Group {
      return Services.Registry.Requests.Group.builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) -> Services.Registry.Requests.Group {
      return Services.Registry.Requests.Group.builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.Group {
      return Services.Registry.Requests.Group.builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func builder() -> Services.Registry.Requests.GroupBuilder {
      return Services.Registry.Requests.Group.classBuilder() as! Services.Registry.Requests.GroupBuilder
    }
    public func builder() -> Services.Registry.Requests.GroupBuilder {
      return classBuilder() as! Services.Registry.Requests.GroupBuilder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.GroupBuilder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.Group.builder()
    }
    public func toBuilder() -> Services.Registry.Requests.GroupBuilder {
      return Services.Registry.Requests.Group.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Services.Registry.Requests.Group) -> Services.Registry.Requests.GroupBuilder {
      return Services.Registry.Requests.Group.builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) {
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Services.Registry.Requests.Group"
    }
    override public func className() -> String {
        return "Services.Registry.Requests.Group"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Services.Registry.Requests.Group.self
    }
    //Meta information declaration end

  }

  final public class GroupBuilder : GeneratedMessageBuilder {
    private var builderResult:Services.Registry.Requests.Group

    required override public init () {
       builderResult = Services.Registry.Requests.Group()
       super.init()
    }
    override public var internalGetResult:GeneratedMessage {
         get {
            return builderResult
         }
    }
    public override func clear() -> Services.Registry.Requests.GroupBuilder {
      builderResult = Services.Registry.Requests.Group()
      return self
    }
    public override func clone() -> Services.Registry.Requests.GroupBuilder {
      return Services.Registry.Requests.Group.builderWithPrototype(builderResult)
    }
    public override func build() -> Services.Registry.Requests.Group {
         checkInitialized()
         return buildPartial()
    }
    public func buildPartial() -> Services.Registry.Requests.Group {
      var returnMe:Services.Registry.Requests.Group = builderResult
      return returnMe
    }
    public func mergeFrom(other:Services.Registry.Requests.Group) -> Services.Registry.Requests.GroupBuilder {
      if (other == Services.Registry.Requests.Group()) {
       return self
      }
      mergeUnknownFields(other.unknownFields)
      return self
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream) ->Services.Registry.Requests.GroupBuilder {
         return mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.GroupBuilder {
      var unknownFieldsBuilder:UnknownFieldSetBuilder = UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
      while (true) {
        var tag = input.readTag()
        switch tag {
        case 0: 
          self.unknownFields = unknownFieldsBuilder.build()
          return self

        default:
          if (!parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag)) {
             unknownFields = unknownFieldsBuilder.build()
             return self
          }
        }
      }
    }
  }

  final public class Glossary : GeneratedMessage, GeneratedMessageProtocol {
    override public subscript(key: String) -> Any? {
           switch key {
           default: return nil
           }
    }

    public class func createTerm() -> ConcreateExtensionField {
         return ServicesRegistryRequestsGlossarycreateTerm
    }
    public class func getTerm() -> ConcreateExtensionField {
         return ServicesRegistryRequestsGlossarygetTerm
    }
    public class func getTerms() -> ConcreateExtensionField {
         return ServicesRegistryRequestsGlossarygetTerms
    }
    public class func updateTerm() -> ConcreateExtensionField {
         return ServicesRegistryRequestsGlossaryupdateTerm
    }
    public class func deleteTerm() -> ConcreateExtensionField {
         return ServicesRegistryRequestsGlossarydeleteTerm
    }
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) {
      unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseFromData(data:NSData) -> Services.Registry.Requests.Glossary {
      return Services.Registry.Requests.Glossary.builder().mergeFromData(data, extensionRegistry:Services.Registry.Requests.RequestsRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.Glossary {
      return Services.Registry.Requests.Glossary.builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) -> Services.Registry.Requests.Glossary {
      return Services.Registry.Requests.Glossary.builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) ->Services.Registry.Requests.Glossary {
      return Services.Registry.Requests.Glossary.builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) -> Services.Registry.Requests.Glossary {
      return Services.Registry.Requests.Glossary.builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.Glossary {
      return Services.Registry.Requests.Glossary.builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func builder() -> Services.Registry.Requests.GlossaryBuilder {
      return Services.Registry.Requests.Glossary.classBuilder() as! Services.Registry.Requests.GlossaryBuilder
    }
    public func builder() -> Services.Registry.Requests.GlossaryBuilder {
      return classBuilder() as! Services.Registry.Requests.GlossaryBuilder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.GlossaryBuilder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.Glossary.builder()
    }
    public func toBuilder() -> Services.Registry.Requests.GlossaryBuilder {
      return Services.Registry.Requests.Glossary.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Services.Registry.Requests.Glossary) -> Services.Registry.Requests.GlossaryBuilder {
      return Services.Registry.Requests.Glossary.builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) {
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Services.Registry.Requests.Glossary"
    }
    override public func className() -> String {
        return "Services.Registry.Requests.Glossary"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Services.Registry.Requests.Glossary.self
    }
    //Meta information declaration end

  }

  final public class GlossaryBuilder : GeneratedMessageBuilder {
    private var builderResult:Services.Registry.Requests.Glossary

    required override public init () {
       builderResult = Services.Registry.Requests.Glossary()
       super.init()
    }
    override public var internalGetResult:GeneratedMessage {
         get {
            return builderResult
         }
    }
    public override func clear() -> Services.Registry.Requests.GlossaryBuilder {
      builderResult = Services.Registry.Requests.Glossary()
      return self
    }
    public override func clone() -> Services.Registry.Requests.GlossaryBuilder {
      return Services.Registry.Requests.Glossary.builderWithPrototype(builderResult)
    }
    public override func build() -> Services.Registry.Requests.Glossary {
         checkInitialized()
         return buildPartial()
    }
    public func buildPartial() -> Services.Registry.Requests.Glossary {
      var returnMe:Services.Registry.Requests.Glossary = builderResult
      return returnMe
    }
    public func mergeFrom(other:Services.Registry.Requests.Glossary) -> Services.Registry.Requests.GlossaryBuilder {
      if (other == Services.Registry.Requests.Glossary()) {
       return self
      }
      mergeUnknownFields(other.unknownFields)
      return self
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream) ->Services.Registry.Requests.GlossaryBuilder {
         return mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.GlossaryBuilder {
      var unknownFieldsBuilder:UnknownFieldSetBuilder = UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
      while (true) {
        var tag = input.readTag()
        switch tag {
        case 0: 
          self.unknownFields = unknownFieldsBuilder.build()
          return self

        default:
          if (!parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag)) {
             unknownFields = unknownFieldsBuilder.build()
             return self
          }
        }
      }
    }
  }

  final public class Notification : GeneratedMessage, GeneratedMessageProtocol {
    override public subscript(key: String) -> Any? {
           switch key {
           default: return nil
           }
    }

    public class func registerDevice() -> ConcreateExtensionField {
         return ServicesRegistryRequestsNotificationregisterDevice
    }
    public class func getPreferences() -> ConcreateExtensionField {
         return ServicesRegistryRequestsNotificationgetPreferences
    }
    public class func updatePreference() -> ConcreateExtensionField {
         return ServicesRegistryRequestsNotificationupdatePreference
    }
    public class func sendNotification() -> ConcreateExtensionField {
         return ServicesRegistryRequestsNotificationsendNotification
    }
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) {
      unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseFromData(data:NSData) -> Services.Registry.Requests.Notification {
      return Services.Registry.Requests.Notification.builder().mergeFromData(data, extensionRegistry:Services.Registry.Requests.RequestsRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.Notification {
      return Services.Registry.Requests.Notification.builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) -> Services.Registry.Requests.Notification {
      return Services.Registry.Requests.Notification.builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) ->Services.Registry.Requests.Notification {
      return Services.Registry.Requests.Notification.builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) -> Services.Registry.Requests.Notification {
      return Services.Registry.Requests.Notification.builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.Notification {
      return Services.Registry.Requests.Notification.builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func builder() -> Services.Registry.Requests.NotificationBuilder {
      return Services.Registry.Requests.Notification.classBuilder() as! Services.Registry.Requests.NotificationBuilder
    }
    public func builder() -> Services.Registry.Requests.NotificationBuilder {
      return classBuilder() as! Services.Registry.Requests.NotificationBuilder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.NotificationBuilder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.Notification.builder()
    }
    public func toBuilder() -> Services.Registry.Requests.NotificationBuilder {
      return Services.Registry.Requests.Notification.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Services.Registry.Requests.Notification) -> Services.Registry.Requests.NotificationBuilder {
      return Services.Registry.Requests.Notification.builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) {
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Services.Registry.Requests.Notification"
    }
    override public func className() -> String {
        return "Services.Registry.Requests.Notification"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Services.Registry.Requests.Notification.self
    }
    //Meta information declaration end

  }

  final public class NotificationBuilder : GeneratedMessageBuilder {
    private var builderResult:Services.Registry.Requests.Notification

    required override public init () {
       builderResult = Services.Registry.Requests.Notification()
       super.init()
    }
    override public var internalGetResult:GeneratedMessage {
         get {
            return builderResult
         }
    }
    public override func clear() -> Services.Registry.Requests.NotificationBuilder {
      builderResult = Services.Registry.Requests.Notification()
      return self
    }
    public override func clone() -> Services.Registry.Requests.NotificationBuilder {
      return Services.Registry.Requests.Notification.builderWithPrototype(builderResult)
    }
    public override func build() -> Services.Registry.Requests.Notification {
         checkInitialized()
         return buildPartial()
    }
    public func buildPartial() -> Services.Registry.Requests.Notification {
      var returnMe:Services.Registry.Requests.Notification = builderResult
      return returnMe
    }
    public func mergeFrom(other:Services.Registry.Requests.Notification) -> Services.Registry.Requests.NotificationBuilder {
      if (other == Services.Registry.Requests.Notification()) {
       return self
      }
      mergeUnknownFields(other.unknownFields)
      return self
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream) ->Services.Registry.Requests.NotificationBuilder {
         return mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.NotificationBuilder {
      var unknownFieldsBuilder:UnknownFieldSetBuilder = UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
      while (true) {
        var tag = input.readTag()
        switch tag {
        case 0: 
          self.unknownFields = unknownFieldsBuilder.build()
          return self

        default:
          if (!parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag)) {
             unknownFields = unknownFieldsBuilder.build()
             return self
          }
        }
      }
    }
  }

  final public class History : GeneratedMessage, GeneratedMessageProtocol {
    override public subscript(key: String) -> Any? {
           switch key {
           default: return nil
           }
    }

    public class func recordAction() -> ConcreateExtensionField {
         return ServicesRegistryRequestsHistoryrecordAction
    }
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) {
      unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseFromData(data:NSData) -> Services.Registry.Requests.History {
      return Services.Registry.Requests.History.builder().mergeFromData(data, extensionRegistry:Services.Registry.Requests.RequestsRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.History {
      return Services.Registry.Requests.History.builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) -> Services.Registry.Requests.History {
      return Services.Registry.Requests.History.builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) ->Services.Registry.Requests.History {
      return Services.Registry.Requests.History.builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) -> Services.Registry.Requests.History {
      return Services.Registry.Requests.History.builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.History {
      return Services.Registry.Requests.History.builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func builder() -> Services.Registry.Requests.HistoryBuilder {
      return Services.Registry.Requests.History.classBuilder() as! Services.Registry.Requests.HistoryBuilder
    }
    public func builder() -> Services.Registry.Requests.HistoryBuilder {
      return classBuilder() as! Services.Registry.Requests.HistoryBuilder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.HistoryBuilder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Services.Registry.Requests.History.builder()
    }
    public func toBuilder() -> Services.Registry.Requests.HistoryBuilder {
      return Services.Registry.Requests.History.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Services.Registry.Requests.History) -> Services.Registry.Requests.HistoryBuilder {
      return Services.Registry.Requests.History.builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) {
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Services.Registry.Requests.History"
    }
    override public func className() -> String {
        return "Services.Registry.Requests.History"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Services.Registry.Requests.History.self
    }
    //Meta information declaration end

  }

  final public class HistoryBuilder : GeneratedMessageBuilder {
    private var builderResult:Services.Registry.Requests.History

    required override public init () {
       builderResult = Services.Registry.Requests.History()
       super.init()
    }
    override public var internalGetResult:GeneratedMessage {
         get {
            return builderResult
         }
    }
    public override func clear() -> Services.Registry.Requests.HistoryBuilder {
      builderResult = Services.Registry.Requests.History()
      return self
    }
    public override func clone() -> Services.Registry.Requests.HistoryBuilder {
      return Services.Registry.Requests.History.builderWithPrototype(builderResult)
    }
    public override func build() -> Services.Registry.Requests.History {
         checkInitialized()
         return buildPartial()
    }
    public func buildPartial() -> Services.Registry.Requests.History {
      var returnMe:Services.Registry.Requests.History = builderResult
      return returnMe
    }
    public func mergeFrom(other:Services.Registry.Requests.History) -> Services.Registry.Requests.HistoryBuilder {
      if (other == Services.Registry.Requests.History()) {
       return self
      }
      mergeUnknownFields(other.unknownFields)
      return self
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream) ->Services.Registry.Requests.HistoryBuilder {
         return mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
    }
    public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> Services.Registry.Requests.HistoryBuilder {
      var unknownFieldsBuilder:UnknownFieldSetBuilder = UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
      while (true) {
        var tag = input.readTag()
        switch tag {
        case 0: 
          self.unknownFields = unknownFieldsBuilder.build()
          return self

        default:
          if (!parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag)) {
             unknownFields = unknownFieldsBuilder.build()
             return self
          }
        }
      }
    }
  }

}

// @@protoc_insertion_point(global_scope)
