// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ./src/protobufs/services/notification/containers.proto
package com.rhlabs.protobufs.services.notification.containers;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoEnum;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.ENUM;
import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Datatype.UINT32;

public final class NotificationTokenV1 extends Message {
  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_VERSION = 1;
  public static final String DEFAULT_USER_ID = "";
  public static final String DEFAULT_DEVICE_ID = "";
  public static final String DEFAULT_PROVIDER_TOKEN = "";
  public static final ProviderV1 DEFAULT_PROVIDER = ProviderV1.SNS;
  public static final ProviderPlatformV1 DEFAULT_PROVIDER_PLATFORM = ProviderPlatformV1.APNS;

  @ProtoField(tag = 1, type = UINT32)
  public final Integer version;

  @ProtoField(tag = 2, type = STRING)
  public final String user_id;

  @ProtoField(tag = 3, type = STRING)
  public final String device_id;

  @ProtoField(tag = 4, type = STRING)
  public final String provider_token;

  @ProtoField(tag = 5, type = ENUM)
  public final ProviderV1 provider;

  @ProtoField(tag = 6, type = ENUM)
  public final ProviderPlatformV1 provider_platform;

  public NotificationTokenV1(Integer version, String user_id, String device_id, String provider_token, ProviderV1 provider, ProviderPlatformV1 provider_platform) {
    this.version = version;
    this.user_id = user_id;
    this.device_id = device_id;
    this.provider_token = provider_token;
    this.provider = provider;
    this.provider_platform = provider_platform;
  }

  private NotificationTokenV1(Builder builder) {
    this(builder.version, builder.user_id, builder.device_id, builder.provider_token, builder.provider, builder.provider_platform);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof NotificationTokenV1)) return false;
    NotificationTokenV1 o = (NotificationTokenV1) other;
    return equals(version, o.version)
        && equals(user_id, o.user_id)
        && equals(device_id, o.device_id)
        && equals(provider_token, o.provider_token)
        && equals(provider, o.provider)
        && equals(provider_platform, o.provider_platform);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = version != null ? version.hashCode() : 0;
      result = result * 37 + (user_id != null ? user_id.hashCode() : 0);
      result = result * 37 + (device_id != null ? device_id.hashCode() : 0);
      result = result * 37 + (provider_token != null ? provider_token.hashCode() : 0);
      result = result * 37 + (provider != null ? provider.hashCode() : 0);
      result = result * 37 + (provider_platform != null ? provider_platform.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<NotificationTokenV1> {

    public Integer version;
    public String user_id;
    public String device_id;
    public String provider_token;
    public ProviderV1 provider;
    public ProviderPlatformV1 provider_platform;

    public Builder() {
    }

    public Builder(NotificationTokenV1 message) {
      super(message);
      if (message == null) return;
      this.version = message.version;
      this.user_id = message.user_id;
      this.device_id = message.device_id;
      this.provider_token = message.provider_token;
      this.provider = message.provider;
      this.provider_platform = message.provider_platform;
    }

    public Builder version(Integer version) {
      this.version = version;
      return this;
    }

    public Builder user_id(String user_id) {
      this.user_id = user_id;
      return this;
    }

    public Builder device_id(String device_id) {
      this.device_id = device_id;
      return this;
    }

    public Builder provider_token(String provider_token) {
      this.provider_token = provider_token;
      return this;
    }

    public Builder provider(ProviderV1 provider) {
      this.provider = provider;
      return this;
    }

    public Builder provider_platform(ProviderPlatformV1 provider_platform) {
      this.provider_platform = provider_platform;
      return this;
    }

    @Override
    public NotificationTokenV1 build() {
      return new NotificationTokenV1(this);
    }
  }

  public enum ProviderV1
      implements ProtoEnum {
    SNS(0);

    private final int value;

    ProviderV1(int value) {
      this.value = value;
    }

    @Override
    public int getValue() {
      return value;
    }
  }

  public enum ProviderPlatformV1
      implements ProtoEnum {
    APNS(0),
    GCM(1);

    private final int value;

    ProviderPlatformV1(int value) {
      this.value = value;
    }

    @Override
    public int getValue() {
      return value;
    }
  }
}
