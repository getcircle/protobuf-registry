// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ./src/protobufs/services/notification/actions/send_notification.proto
package com.rhlabs.protobufs.services.notification.actions.send_notification;

import com.rhlabs.protobufs.services.notification.containers.NotificationV1;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Datatype.UINT32;
import static com.squareup.wire.Message.Label.REPEATED;

public final class SendNotificationRequestV1 extends Message {
  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_VERSION = 1;
  public static final String DEFAULT_TO_PROFILE_ID = "";
  public static final List<String> DEFAULT_TO_PROFILE_IDS = Collections.emptyList();

  @ProtoField(tag = 1, type = UINT32)
  public final Integer version;

  @ProtoField(tag = 2, type = STRING)
  public final String to_profile_id;

  @ProtoField(tag = 3)
  public final NotificationV1 notification;

  @ProtoField(tag = 4, type = STRING, label = REPEATED)
  public final List<String> to_profile_ids;

  public SendNotificationRequestV1(Integer version, String to_profile_id, NotificationV1 notification, List<String> to_profile_ids) {
    this.version = version;
    this.to_profile_id = to_profile_id;
    this.notification = notification;
    this.to_profile_ids = immutableCopyOf(to_profile_ids);
  }

  private SendNotificationRequestV1(Builder builder) {
    this(builder.version, builder.to_profile_id, builder.notification, builder.to_profile_ids);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof SendNotificationRequestV1)) return false;
    SendNotificationRequestV1 o = (SendNotificationRequestV1) other;
    return equals(version, o.version)
        && equals(to_profile_id, o.to_profile_id)
        && equals(notification, o.notification)
        && equals(to_profile_ids, o.to_profile_ids);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = version != null ? version.hashCode() : 0;
      result = result * 37 + (to_profile_id != null ? to_profile_id.hashCode() : 0);
      result = result * 37 + (notification != null ? notification.hashCode() : 0);
      result = result * 37 + (to_profile_ids != null ? to_profile_ids.hashCode() : 1);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<SendNotificationRequestV1> {

    public Integer version;
    public String to_profile_id;
    public NotificationV1 notification;
    public List<String> to_profile_ids;

    public Builder() {
    }

    public Builder(SendNotificationRequestV1 message) {
      super(message);
      if (message == null) return;
      this.version = message.version;
      this.to_profile_id = message.to_profile_id;
      this.notification = message.notification;
      this.to_profile_ids = copyOf(message.to_profile_ids);
    }

    public Builder version(Integer version) {
      this.version = version;
      return this;
    }

    public Builder to_profile_id(String to_profile_id) {
      this.to_profile_id = to_profile_id;
      return this;
    }

    public Builder notification(NotificationV1 notification) {
      this.notification = notification;
      return this;
    }

    public Builder to_profile_ids(List<String> to_profile_ids) {
      this.to_profile_ids = checkForNulls(to_profile_ids);
      return this;
    }

    @Override
    public SendNotificationRequestV1 build() {
      return new SendNotificationRequestV1(this);
    }
  }
}
