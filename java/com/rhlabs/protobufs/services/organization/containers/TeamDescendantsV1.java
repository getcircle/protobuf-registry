// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ./src/protobufs/services/organization/containers.proto
package com.rhlabs.protobufs.services.organization.containers;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Datatype.UINT32;
import static com.squareup.wire.Message.Label.REPEATED;

public final class TeamDescendantsV1 extends Message {
  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_VERSION = 1;
  public static final Integer DEFAULT_DEPTH = 0;
  public static final String DEFAULT_PARENT_TEAM_ID = "";
  public static final List<TeamV1> DEFAULT_TEAMS = Collections.emptyList();

  @ProtoField(tag = 1, type = UINT32)
  public final Integer version;

  @ProtoField(tag = 2, type = UINT32)
  public final Integer depth;

  @ProtoField(tag = 3, type = STRING)
  public final String parent_team_id;

  @ProtoField(tag = 4, label = REPEATED, messageType = TeamV1.class)
  public final List<TeamV1> teams;

  public TeamDescendantsV1(Integer version, Integer depth, String parent_team_id, List<TeamV1> teams) {
    this.version = version;
    this.depth = depth;
    this.parent_team_id = parent_team_id;
    this.teams = immutableCopyOf(teams);
  }

  private TeamDescendantsV1(Builder builder) {
    this(builder.version, builder.depth, builder.parent_team_id, builder.teams);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof TeamDescendantsV1)) return false;
    TeamDescendantsV1 o = (TeamDescendantsV1) other;
    return equals(version, o.version)
        && equals(depth, o.depth)
        && equals(parent_team_id, o.parent_team_id)
        && equals(teams, o.teams);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = version != null ? version.hashCode() : 0;
      result = result * 37 + (depth != null ? depth.hashCode() : 0);
      result = result * 37 + (parent_team_id != null ? parent_team_id.hashCode() : 0);
      result = result * 37 + (teams != null ? teams.hashCode() : 1);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<TeamDescendantsV1> {

    public Integer version;
    public Integer depth;
    public String parent_team_id;
    public List<TeamV1> teams;

    public Builder() {
    }

    public Builder(TeamDescendantsV1 message) {
      super(message);
      if (message == null) return;
      this.version = message.version;
      this.depth = message.depth;
      this.parent_team_id = message.parent_team_id;
      this.teams = copyOf(message.teams);
    }

    public Builder version(Integer version) {
      this.version = version;
      return this;
    }

    public Builder depth(Integer depth) {
      this.depth = depth;
      return this;
    }

    public Builder parent_team_id(String parent_team_id) {
      this.parent_team_id = parent_team_id;
      return this;
    }

    public Builder teams(List<TeamV1> teams) {
      this.teams = checkForNulls(teams);
      return this;
    }

    @Override
    public TeamDescendantsV1 build() {
      return new TeamDescendantsV1(this);
    }
  }
}
