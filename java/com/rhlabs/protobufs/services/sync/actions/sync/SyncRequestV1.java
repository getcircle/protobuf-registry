// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ./src/protobufs/services/sync/actions/sync.proto
package com.rhlabs.protobufs.services.sync.actions.sync;

import com.rhlabs.protobufs.services.sync.containers.payload.PayloadV1;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Datatype.UINT32;
import static com.squareup.wire.Message.Label.REPEATED;

public final class SyncRequestV1 extends Message {
  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_VERSION = 1;
  public static final String DEFAULT_SYNC_ID = "";
  public static final List<PayloadV1> DEFAULT_PAYLOADS = Collections.emptyList();

  @ProtoField(tag = 1, type = UINT32)
  public final Integer version;

  @ProtoField(tag = 2, type = STRING)
  public final String sync_id;

  @ProtoField(tag = 3, label = REPEATED, messageType = PayloadV1.class)
  public final List<PayloadV1> payloads;

  public SyncRequestV1(Integer version, String sync_id, List<PayloadV1> payloads) {
    this.version = version;
    this.sync_id = sync_id;
    this.payloads = immutableCopyOf(payloads);
  }

  private SyncRequestV1(Builder builder) {
    this(builder.version, builder.sync_id, builder.payloads);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof SyncRequestV1)) return false;
    SyncRequestV1 o = (SyncRequestV1) other;
    return equals(version, o.version)
        && equals(sync_id, o.sync_id)
        && equals(payloads, o.payloads);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = version != null ? version.hashCode() : 0;
      result = result * 37 + (sync_id != null ? sync_id.hashCode() : 0);
      result = result * 37 + (payloads != null ? payloads.hashCode() : 1);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<SyncRequestV1> {

    public Integer version;
    public String sync_id;
    public List<PayloadV1> payloads;

    public Builder() {
    }

    public Builder(SyncRequestV1 message) {
      super(message);
      if (message == null) return;
      this.version = message.version;
      this.sync_id = message.sync_id;
      this.payloads = copyOf(message.payloads);
    }

    public Builder version(Integer version) {
      this.version = version;
      return this;
    }

    public Builder sync_id(String sync_id) {
      this.sync_id = sync_id;
      return this;
    }

    public Builder payloads(List<PayloadV1> payloads) {
      this.payloads = checkForNulls(payloads);
      return this;
    }

    @Override
    public SyncRequestV1 build() {
      return new SyncRequestV1(this);
    }
  }
}
