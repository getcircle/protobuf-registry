// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ./src/protobufs/services/profile/containers.proto
package com.rhlabs.protobufs.services.profile.containers;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoEnum;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.ENUM;
import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Datatype.UINT32;

public final class ContactMethodV1 extends Message {
  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_VERSION = 1;
  public static final String DEFAULT_ID = "";
  public static final String DEFAULT_LABEL = "";
  public static final String DEFAULT_VALUE = "";
  public static final ContactMethodTypeV1 DEFAULT_CONTACT_METHOD_TYPE = ContactMethodTypeV1.CELL_PHONE;

  @ProtoField(tag = 1, type = UINT32)
  public final Integer version;

  @ProtoField(tag = 2, type = STRING)
  public final String id;

  @ProtoField(tag = 3, type = STRING)
  public final String label;

  @ProtoField(tag = 4, type = STRING)
  public final String value;

  @ProtoField(tag = 5, type = ENUM)
  public final ContactMethodTypeV1 contact_method_type;

  public ContactMethodV1(Integer version, String id, String label, String value, ContactMethodTypeV1 contact_method_type) {
    this.version = version;
    this.id = id;
    this.label = label;
    this.value = value;
    this.contact_method_type = contact_method_type;
  }

  private ContactMethodV1(Builder builder) {
    this(builder.version, builder.id, builder.label, builder.value, builder.contact_method_type);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof ContactMethodV1)) return false;
    ContactMethodV1 o = (ContactMethodV1) other;
    return equals(version, o.version)
        && equals(id, o.id)
        && equals(label, o.label)
        && equals(value, o.value)
        && equals(contact_method_type, o.contact_method_type);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = version != null ? version.hashCode() : 0;
      result = result * 37 + (id != null ? id.hashCode() : 0);
      result = result * 37 + (label != null ? label.hashCode() : 0);
      result = result * 37 + (value != null ? value.hashCode() : 0);
      result = result * 37 + (contact_method_type != null ? contact_method_type.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<ContactMethodV1> {

    public Integer version;
    public String id;
    public String label;
    public String value;
    public ContactMethodTypeV1 contact_method_type;

    public Builder() {
    }

    public Builder(ContactMethodV1 message) {
      super(message);
      if (message == null) return;
      this.version = message.version;
      this.id = message.id;
      this.label = message.label;
      this.value = message.value;
      this.contact_method_type = message.contact_method_type;
    }

    public Builder version(Integer version) {
      this.version = version;
      return this;
    }

    public Builder id(String id) {
      this.id = id;
      return this;
    }

    public Builder label(String label) {
      this.label = label;
      return this;
    }

    public Builder value(String value) {
      this.value = value;
      return this;
    }

    public Builder contact_method_type(ContactMethodTypeV1 contact_method_type) {
      this.contact_method_type = contact_method_type;
      return this;
    }

    @Override
    public ContactMethodV1 build() {
      return new ContactMethodV1(this);
    }
  }

  public enum ContactMethodTypeV1
      implements ProtoEnum {
    CELL_PHONE(0),
    PHONE(1),
    EMAIL(2),
    SLACK(3),
    TWITTER(4),
    HIPCHAT(5),
    FACEBOOK(6),
    SKYPE(7);

    private final int value;

    private ContactMethodTypeV1(int value) {
      this.value = value;
    }

    @Override
    public int getValue() {
      return value;
    }
  }
}
