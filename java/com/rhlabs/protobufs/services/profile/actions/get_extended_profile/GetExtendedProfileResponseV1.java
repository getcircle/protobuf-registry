// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ./src/protobufs/services/profile/actions/get_extended_profile.proto
package com.rhlabs.protobufs.services.profile.actions.get_extended_profile;

import com.rhlabs.protobufs.services.organization.containers.LocationV1;
import com.rhlabs.protobufs.services.organization.containers.TeamV1;
import com.rhlabs.protobufs.services.profile.containers.ProfileV1;
import com.rhlabs.protobufs.services.user.containers.IdentityV1;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.UINT32;
import static com.squareup.wire.Message.Label.REPEATED;

public final class GetExtendedProfileResponseV1 extends Message {
  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_VERSION = 1;
  public static final List<IdentityV1> DEFAULT_IDENTITIES = Collections.emptyList();
  public static final List<ProfileV1> DEFAULT_DIRECT_REPORTS = Collections.emptyList();
  public static final List<LocationV1> DEFAULT_LOCATIONS = Collections.emptyList();
  public static final List<ProfileV1> DEFAULT_PEERS = Collections.emptyList();

  @ProtoField(tag = 1, type = UINT32)
  public final Integer version;

  @ProtoField(tag = 2)
  public final ProfileV1 profile;

  @ProtoField(tag = 3)
  public final ProfileV1 manager;

  @ProtoField(tag = 4)
  public final TeamV1 team;

  @ProtoField(tag = 5, label = REPEATED, messageType = IdentityV1.class)
  public final List<IdentityV1> identities;

  @ProtoField(tag = 7, label = REPEATED, messageType = ProfileV1.class)
  public final List<ProfileV1> direct_reports;

  @ProtoField(tag = 8, label = REPEATED, messageType = LocationV1.class)
  public final List<LocationV1> locations;

  @ProtoField(tag = 9)
  public final TeamV1 manages_team;

  @ProtoField(tag = 10, label = REPEATED, messageType = ProfileV1.class)
  public final List<ProfileV1> peers;

  public GetExtendedProfileResponseV1(Integer version, ProfileV1 profile, ProfileV1 manager, TeamV1 team, List<IdentityV1> identities, List<ProfileV1> direct_reports, List<LocationV1> locations, TeamV1 manages_team, List<ProfileV1> peers) {
    this.version = version;
    this.profile = profile;
    this.manager = manager;
    this.team = team;
    this.identities = immutableCopyOf(identities);
    this.direct_reports = immutableCopyOf(direct_reports);
    this.locations = immutableCopyOf(locations);
    this.manages_team = manages_team;
    this.peers = immutableCopyOf(peers);
  }

  private GetExtendedProfileResponseV1(Builder builder) {
    this(builder.version, builder.profile, builder.manager, builder.team, builder.identities, builder.direct_reports, builder.locations, builder.manages_team, builder.peers);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof GetExtendedProfileResponseV1)) return false;
    GetExtendedProfileResponseV1 o = (GetExtendedProfileResponseV1) other;
    return equals(version, o.version)
        && equals(profile, o.profile)
        && equals(manager, o.manager)
        && equals(team, o.team)
        && equals(identities, o.identities)
        && equals(direct_reports, o.direct_reports)
        && equals(locations, o.locations)
        && equals(manages_team, o.manages_team)
        && equals(peers, o.peers);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = version != null ? version.hashCode() : 0;
      result = result * 37 + (profile != null ? profile.hashCode() : 0);
      result = result * 37 + (manager != null ? manager.hashCode() : 0);
      result = result * 37 + (team != null ? team.hashCode() : 0);
      result = result * 37 + (identities != null ? identities.hashCode() : 1);
      result = result * 37 + (direct_reports != null ? direct_reports.hashCode() : 1);
      result = result * 37 + (locations != null ? locations.hashCode() : 1);
      result = result * 37 + (manages_team != null ? manages_team.hashCode() : 0);
      result = result * 37 + (peers != null ? peers.hashCode() : 1);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<GetExtendedProfileResponseV1> {

    public Integer version;
    public ProfileV1 profile;
    public ProfileV1 manager;
    public TeamV1 team;
    public List<IdentityV1> identities;
    public List<ProfileV1> direct_reports;
    public List<LocationV1> locations;
    public TeamV1 manages_team;
    public List<ProfileV1> peers;

    public Builder() {
    }

    public Builder(GetExtendedProfileResponseV1 message) {
      super(message);
      if (message == null) return;
      this.version = message.version;
      this.profile = message.profile;
      this.manager = message.manager;
      this.team = message.team;
      this.identities = copyOf(message.identities);
      this.direct_reports = copyOf(message.direct_reports);
      this.locations = copyOf(message.locations);
      this.manages_team = message.manages_team;
      this.peers = copyOf(message.peers);
    }

    public Builder version(Integer version) {
      this.version = version;
      return this;
    }

    public Builder profile(ProfileV1 profile) {
      this.profile = profile;
      return this;
    }

    public Builder manager(ProfileV1 manager) {
      this.manager = manager;
      return this;
    }

    public Builder team(TeamV1 team) {
      this.team = team;
      return this;
    }

    public Builder identities(List<IdentityV1> identities) {
      this.identities = checkForNulls(identities);
      return this;
    }

    public Builder direct_reports(List<ProfileV1> direct_reports) {
      this.direct_reports = checkForNulls(direct_reports);
      return this;
    }

    public Builder locations(List<LocationV1> locations) {
      this.locations = checkForNulls(locations);
      return this;
    }

    public Builder manages_team(TeamV1 manages_team) {
      this.manages_team = manages_team;
      return this;
    }

    public Builder peers(List<ProfileV1> peers) {
      this.peers = checkForNulls(peers);
      return this;
    }

    @Override
    public GetExtendedProfileResponseV1 build() {
      return new GetExtendedProfileResponseV1(this);
    }
  }
}
