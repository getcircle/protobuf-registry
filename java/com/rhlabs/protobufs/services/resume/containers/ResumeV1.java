// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ./src/protobufs/services/resume/containers.proto
package com.rhlabs.protobufs.services.resume.containers;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Datatype.UINT32;
import static com.squareup.wire.Message.Label.REPEATED;

public final class ResumeV1 extends Message {
  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_VERSION = 1;
  public static final String DEFAULT_USER_ID = "";
  public static final List<EducationV1> DEFAULT_EDUCATIONS = Collections.emptyList();
  public static final List<PositionV1> DEFAULT_POSITIONS = Collections.emptyList();

  @ProtoField(tag = 1, type = UINT32)
  public final Integer version;

  @ProtoField(tag = 2, type = STRING)
  public final String user_id;

  @ProtoField(tag = 3, label = REPEATED, messageType = EducationV1.class)
  public final List<EducationV1> educations;

  @ProtoField(tag = 4, label = REPEATED, messageType = PositionV1.class)
  public final List<PositionV1> positions;

  public ResumeV1(Integer version, String user_id, List<EducationV1> educations, List<PositionV1> positions) {
    this.version = version;
    this.user_id = user_id;
    this.educations = immutableCopyOf(educations);
    this.positions = immutableCopyOf(positions);
  }

  private ResumeV1(Builder builder) {
    this(builder.version, builder.user_id, builder.educations, builder.positions);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof ResumeV1)) return false;
    ResumeV1 o = (ResumeV1) other;
    return equals(version, o.version)
        && equals(user_id, o.user_id)
        && equals(educations, o.educations)
        && equals(positions, o.positions);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = version != null ? version.hashCode() : 0;
      result = result * 37 + (user_id != null ? user_id.hashCode() : 0);
      result = result * 37 + (educations != null ? educations.hashCode() : 1);
      result = result * 37 + (positions != null ? positions.hashCode() : 1);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<ResumeV1> {

    public Integer version;
    public String user_id;
    public List<EducationV1> educations;
    public List<PositionV1> positions;

    public Builder() {
    }

    public Builder(ResumeV1 message) {
      super(message);
      if (message == null) return;
      this.version = message.version;
      this.user_id = message.user_id;
      this.educations = copyOf(message.educations);
      this.positions = copyOf(message.positions);
    }

    public Builder version(Integer version) {
      this.version = version;
      return this;
    }

    public Builder user_id(String user_id) {
      this.user_id = user_id;
      return this;
    }

    public Builder educations(List<EducationV1> educations) {
      this.educations = checkForNulls(educations);
      return this;
    }

    public Builder positions(List<PositionV1> positions) {
      this.positions = checkForNulls(positions);
      return this;
    }

    @Override
    public ResumeV1 build() {
      return new ResumeV1(this);
    }
  }
}
