// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ./src/protobufs/services/resume/containers.proto
package com.rhlabs.protobufs.services.resume.containers;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.UINT32;

public final class ApproximateDateV1 extends Message {
  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_VERSION = 1;
  public static final Integer DEFAULT_YEAR = 0;
  public static final Integer DEFAULT_MONTH = 0;
  public static final Integer DEFAULT_DAY = 0;

  @ProtoField(tag = 1, type = UINT32)
  public final Integer version;

  @ProtoField(tag = 2, type = UINT32)
  public final Integer year;

  @ProtoField(tag = 3, type = UINT32)
  public final Integer month;

  @ProtoField(tag = 4, type = UINT32)
  public final Integer day;

  public ApproximateDateV1(Integer version, Integer year, Integer month, Integer day) {
    this.version = version;
    this.year = year;
    this.month = month;
    this.day = day;
  }

  private ApproximateDateV1(Builder builder) {
    this(builder.version, builder.year, builder.month, builder.day);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof ApproximateDateV1)) return false;
    ApproximateDateV1 o = (ApproximateDateV1) other;
    return equals(version, o.version)
        && equals(year, o.year)
        && equals(month, o.month)
        && equals(day, o.day);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = version != null ? version.hashCode() : 0;
      result = result * 37 + (year != null ? year.hashCode() : 0);
      result = result * 37 + (month != null ? month.hashCode() : 0);
      result = result * 37 + (day != null ? day.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<ApproximateDateV1> {

    public Integer version;
    public Integer year;
    public Integer month;
    public Integer day;

    public Builder() {
    }

    public Builder(ApproximateDateV1 message) {
      super(message);
      if (message == null) return;
      this.version = message.version;
      this.year = message.year;
      this.month = message.month;
      this.day = message.day;
    }

    public Builder version(Integer version) {
      this.version = version;
      return this;
    }

    public Builder year(Integer year) {
      this.year = year;
      return this;
    }

    public Builder month(Integer month) {
      this.month = month;
      return this;
    }

    public Builder day(Integer day) {
      this.day = day;
      return this;
    }

    @Override
    public ApproximateDateV1 build() {
      return new ApproximateDateV1(this);
    }
  }
}
