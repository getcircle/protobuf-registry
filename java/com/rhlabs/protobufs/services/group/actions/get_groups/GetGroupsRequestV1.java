// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ./src/protobufs/services/group/actions/get_groups.proto
package com.rhlabs.protobufs.services.group.actions.get_groups;

import com.rhlabs.protobufs.services.group.containers.GroupProviderV1;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.ENUM;
import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Datatype.UINT32;
import static com.squareup.wire.Message.Label.REPEATED;

public final class GetGroupsRequestV1 extends Message {
  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_VERSION = 1;
  public static final String DEFAULT_PROFILE_ID = "";
  public static final GroupProviderV1 DEFAULT_PROVIDER = GroupProviderV1.GOOGLE;
  public static final List<String> DEFAULT_GROUP_KEYS = Collections.emptyList();

  @ProtoField(tag = 1, type = UINT32)
  public final Integer version;

  @ProtoField(tag = 2, type = STRING)
  public final String profile_id;

  @ProtoField(tag = 3, type = ENUM)
  public final GroupProviderV1 provider;

  @ProtoField(tag = 4, type = STRING, label = REPEATED)
  public final List<String> group_keys;

  public GetGroupsRequestV1(Integer version, String profile_id, GroupProviderV1 provider, List<String> group_keys) {
    this.version = version;
    this.profile_id = profile_id;
    this.provider = provider;
    this.group_keys = immutableCopyOf(group_keys);
  }

  private GetGroupsRequestV1(Builder builder) {
    this(builder.version, builder.profile_id, builder.provider, builder.group_keys);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof GetGroupsRequestV1)) return false;
    GetGroupsRequestV1 o = (GetGroupsRequestV1) other;
    return equals(version, o.version)
        && equals(profile_id, o.profile_id)
        && equals(provider, o.provider)
        && equals(group_keys, o.group_keys);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = version != null ? version.hashCode() : 0;
      result = result * 37 + (profile_id != null ? profile_id.hashCode() : 0);
      result = result * 37 + (provider != null ? provider.hashCode() : 0);
      result = result * 37 + (group_keys != null ? group_keys.hashCode() : 1);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<GetGroupsRequestV1> {

    public Integer version;
    public String profile_id;
    public GroupProviderV1 provider;
    public List<String> group_keys;

    public Builder() {
    }

    public Builder(GetGroupsRequestV1 message) {
      super(message);
      if (message == null) return;
      this.version = message.version;
      this.profile_id = message.profile_id;
      this.provider = message.provider;
      this.group_keys = copyOf(message.group_keys);
    }

    public Builder version(Integer version) {
      this.version = version;
      return this;
    }

    public Builder profile_id(String profile_id) {
      this.profile_id = profile_id;
      return this;
    }

    public Builder provider(GroupProviderV1 provider) {
      this.provider = provider;
      return this;
    }

    public Builder group_keys(List<String> group_keys) {
      this.group_keys = checkForNulls(group_keys);
      return this;
    }

    @Override
    public GetGroupsRequestV1 build() {
      return new GetGroupsRequestV1(this);
    }
  }
}
