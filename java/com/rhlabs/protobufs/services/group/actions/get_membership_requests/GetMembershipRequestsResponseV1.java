// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ./src/protobufs/services/group/actions/get_membership_requests.proto
package com.rhlabs.protobufs.services.group.actions.get_membership_requests;

import com.rhlabs.protobufs.services.group.containers.MembershipRequestV1;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.UINT32;
import static com.squareup.wire.Message.Label.REPEATED;

public final class GetMembershipRequestsResponseV1 extends Message {
  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_VERSION = 1;
  public static final List<MembershipRequestV1> DEFAULT_REQUESTS = Collections.emptyList();

  @ProtoField(tag = 1, type = UINT32)
  public final Integer version;

  @ProtoField(tag = 2, label = REPEATED, messageType = MembershipRequestV1.class)
  public final List<MembershipRequestV1> requests;

  public GetMembershipRequestsResponseV1(Integer version, List<MembershipRequestV1> requests) {
    this.version = version;
    this.requests = immutableCopyOf(requests);
  }

  private GetMembershipRequestsResponseV1(Builder builder) {
    this(builder.version, builder.requests);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof GetMembershipRequestsResponseV1)) return false;
    GetMembershipRequestsResponseV1 o = (GetMembershipRequestsResponseV1) other;
    return equals(version, o.version)
        && equals(requests, o.requests);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = version != null ? version.hashCode() : 0;
      result = result * 37 + (requests != null ? requests.hashCode() : 1);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<GetMembershipRequestsResponseV1> {

    public Integer version;
    public List<MembershipRequestV1> requests;

    public Builder() {
    }

    public Builder(GetMembershipRequestsResponseV1 message) {
      super(message);
      if (message == null) return;
      this.version = message.version;
      this.requests = copyOf(message.requests);
    }

    public Builder version(Integer version) {
      this.version = version;
      return this;
    }

    public Builder requests(List<MembershipRequestV1> requests) {
      this.requests = checkForNulls(requests);
      return this;
    }

    @Override
    public GetMembershipRequestsResponseV1 build() {
      return new GetMembershipRequestsResponseV1(this);
    }
  }
}
