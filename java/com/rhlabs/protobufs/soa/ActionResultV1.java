// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ./src/service_protobufs/soa.proto
package com.rhlabs.protobufs.soa;

import com.squareup.wire.ExtendableMessage;
import com.squareup.wire.Extension;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.BOOL;
import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Datatype.UINT32;
import static com.squareup.wire.Message.Label.REPEATED;

public final class ActionResultV1 extends ExtendableMessage<ActionResultV1> {
  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_VERSION = 1;
  public static final Boolean DEFAULT_SUCCESS = false;
  public static final List<String> DEFAULT_ERRORS = Collections.emptyList();
  public static final List<ErrorDetailV1> DEFAULT_ERROR_DETAILS = Collections.emptyList();

  @ProtoField(tag = 1, type = UINT32)
  public final Integer version;

  @ProtoField(tag = 2, type = BOOL)
  public final Boolean success;

  @ProtoField(tag = 3, type = STRING, label = REPEATED)
  public final List<String> errors;

  @ProtoField(tag = 4, label = REPEATED, messageType = ErrorDetailV1.class)
  public final List<ErrorDetailV1> error_details;

  public ActionResultV1(Integer version, Boolean success, List<String> errors, List<ErrorDetailV1> error_details) {
    this.version = version;
    this.success = success;
    this.errors = immutableCopyOf(errors);
    this.error_details = immutableCopyOf(error_details);
  }

  private ActionResultV1(Builder builder) {
    this(builder.version, builder.success, builder.errors, builder.error_details);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof ActionResultV1)) return false;
    ActionResultV1 o = (ActionResultV1) other;
    if (!extensionsEqual(o)) return false;
    return equals(version, o.version)
        && equals(success, o.success)
        && equals(errors, o.errors)
        && equals(error_details, o.error_details);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = extensionsHashCode();
      result = result * 37 + (version != null ? version.hashCode() : 0);
      result = result * 37 + (success != null ? success.hashCode() : 0);
      result = result * 37 + (errors != null ? errors.hashCode() : 1);
      result = result * 37 + (error_details != null ? error_details.hashCode() : 1);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends ExtendableBuilder<ActionResultV1> {

    public Integer version;
    public Boolean success;
    public List<String> errors;
    public List<ErrorDetailV1> error_details;

    public Builder() {
    }

    public Builder(ActionResultV1 message) {
      super(message);
      if (message == null) return;
      this.version = message.version;
      this.success = message.success;
      this.errors = copyOf(message.errors);
      this.error_details = copyOf(message.error_details);
    }

    public Builder version(Integer version) {
      this.version = version;
      return this;
    }

    public Builder success(Boolean success) {
      this.success = success;
      return this;
    }

    public Builder errors(List<String> errors) {
      this.errors = checkForNulls(errors);
      return this;
    }

    public Builder error_details(List<ErrorDetailV1> error_details) {
      this.error_details = checkForNulls(error_details);
      return this;
    }

    @Override
    public <E> Builder setExtension(Extension<ActionResultV1, E> extension, E value) {
      super.setExtension(extension, value);
      return this;
    }

    @Override
    public ActionResultV1 build() {
      return new ActionResultV1(this);
    }
  }

  public static final class ErrorDetailV1 extends Message {
    private static final long serialVersionUID = 0L;

    public static final Integer DEFAULT_VERSION = 1;
    public static final String DEFAULT_ERROR = "";
    public static final String DEFAULT_KEY = "";
    public static final String DEFAULT_DETAIL = "";

    @ProtoField(tag = 1, type = UINT32)
    public final Integer version;

    @ProtoField(tag = 2, type = STRING)
    public final String error;

    @ProtoField(tag = 3, type = STRING)
    public final String key;

    @ProtoField(tag = 4, type = STRING)
    public final String detail;

    public ErrorDetailV1(Integer version, String error, String key, String detail) {
      this.version = version;
      this.error = error;
      this.key = key;
      this.detail = detail;
    }

    private ErrorDetailV1(Builder builder) {
      this(builder.version, builder.error, builder.key, builder.detail);
      setBuilder(builder);
    }

    @Override
    public boolean equals(Object other) {
      if (other == this) return true;
      if (!(other instanceof ErrorDetailV1)) return false;
      ErrorDetailV1 o = (ErrorDetailV1) other;
      return equals(version, o.version)
          && equals(error, o.error)
          && equals(key, o.key)
          && equals(detail, o.detail);
    }

    @Override
    public int hashCode() {
      int result = hashCode;
      if (result == 0) {
        result = version != null ? version.hashCode() : 0;
        result = result * 37 + (error != null ? error.hashCode() : 0);
        result = result * 37 + (key != null ? key.hashCode() : 0);
        result = result * 37 + (detail != null ? detail.hashCode() : 0);
        hashCode = result;
      }
      return result;
    }

    public static final class Builder extends Message.Builder<ErrorDetailV1> {

      public Integer version;
      public String error;
      public String key;
      public String detail;

      public Builder() {
      }

      public Builder(ErrorDetailV1 message) {
        super(message);
        if (message == null) return;
        this.version = message.version;
        this.error = message.error;
        this.key = message.key;
        this.detail = message.detail;
      }

      public Builder version(Integer version) {
        this.version = version;
        return this;
      }

      public Builder error(String error) {
        this.error = error;
        return this;
      }

      public Builder key(String key) {
        this.key = key;
        return this;
      }

      public Builder detail(String detail) {
        this.detail = detail;
        return this;
      }

      @Override
      public ErrorDetailV1 build() {
        return new ErrorDetailV1(this);
      }
    }
  }
}
