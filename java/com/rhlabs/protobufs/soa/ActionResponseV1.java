// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ./src/service_protobufs/soa.proto
package com.rhlabs.protobufs.soa;

import com.squareup.wire.ExtendableMessage;
import com.squareup.wire.Extension;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.UINT32;

public final class ActionResponseV1 extends ExtendableMessage<ActionResponseV1> {
  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_VERSION = 1;

  @ProtoField(tag = 1, type = UINT32)
  public final Integer version;

  @ProtoField(tag = 2)
  public final ActionControlV1 control;

  @ProtoField(tag = 3)
  public final ActionResultV1 result;

  public ActionResponseV1(Integer version, ActionControlV1 control, ActionResultV1 result) {
    this.version = version;
    this.control = control;
    this.result = result;
  }

  private ActionResponseV1(Builder builder) {
    this(builder.version, builder.control, builder.result);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof ActionResponseV1)) return false;
    ActionResponseV1 o = (ActionResponseV1) other;
    if (!extensionsEqual(o)) return false;
    return equals(version, o.version)
        && equals(control, o.control)
        && equals(result, o.result);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = extensionsHashCode();
      result = result * 37 + (version != null ? version.hashCode() : 0);
      result = result * 37 + (control != null ? control.hashCode() : 0);
      result = result * 37 + (this.result != null ? this.result.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends ExtendableBuilder<ActionResponseV1> {

    public Integer version;
    public ActionControlV1 control;
    public ActionResultV1 result;

    public Builder() {
    }

    public Builder(ActionResponseV1 message) {
      super(message);
      if (message == null) return;
      this.version = message.version;
      this.control = message.control;
      this.result = message.result;
    }

    public Builder version(Integer version) {
      this.version = version;
      return this;
    }

    public Builder control(ActionControlV1 control) {
      this.control = control;
      return this;
    }

    public Builder result(ActionResultV1 result) {
      this.result = result;
      return this;
    }

    @Override
    public <E> Builder setExtension(Extension<ActionResponseV1, E> extension, E value) {
      super.setExtension(extension, value);
      return this;
    }

    @Override
    public ActionResponseV1 build() {
      return new ActionResponseV1(this);
    }
  }
}
